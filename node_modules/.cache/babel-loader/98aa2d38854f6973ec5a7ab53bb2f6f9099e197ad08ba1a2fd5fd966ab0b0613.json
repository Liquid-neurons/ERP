{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotateRectangle = exports.adjustDimsForRotation = exports.reduceRotation = exports.toDegrees = exports.toRadians = exports.radiansToDegrees = exports.degreesToRadians = exports.degrees = exports.radians = exports.RotationTypes = void 0;\nvar utils_1 = require(\"../utils\");\nvar RotationTypes;\n(function (RotationTypes) {\n  RotationTypes[\"Degrees\"] = \"degrees\";\n  RotationTypes[\"Radians\"] = \"radians\";\n})(RotationTypes = exports.RotationTypes || (exports.RotationTypes = {}));\nexports.radians = function (radianAngle) {\n  utils_1.assertIs(radianAngle, 'radianAngle', ['number']);\n  return {\n    type: RotationTypes.Radians,\n    angle: radianAngle\n  };\n};\nexports.degrees = function (degreeAngle) {\n  utils_1.assertIs(degreeAngle, 'degreeAngle', ['number']);\n  return {\n    type: RotationTypes.Degrees,\n    angle: degreeAngle\n  };\n};\nvar Radians = RotationTypes.Radians,\n  Degrees = RotationTypes.Degrees;\nexports.degreesToRadians = function (degree) {\n  return degree * Math.PI / 180;\n};\nexports.radiansToDegrees = function (radian) {\n  return radian * 180 / Math.PI;\n};\n// prettier-ignore\nexports.toRadians = function (rotation) {\n  return rotation.type === Radians ? rotation.angle : rotation.type === Degrees ? exports.degreesToRadians(rotation.angle) : utils_1.error(\"Invalid rotation: \" + JSON.stringify(rotation));\n};\n// prettier-ignore\nexports.toDegrees = function (rotation) {\n  return rotation.type === Radians ? exports.radiansToDegrees(rotation.angle) : rotation.type === Degrees ? rotation.angle : utils_1.error(\"Invalid rotation: \" + JSON.stringify(rotation));\n};\nexports.reduceRotation = function (degreeAngle) {\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var quadrants = degreeAngle / 90 % 4;\n  if (quadrants === 0) return 0;\n  if (quadrants === 1) return 90;\n  if (quadrants === 2) return 180;\n  if (quadrants === 3) return 270;\n  return 0; // `degreeAngle` is not a multiple of 90\n};\nexports.adjustDimsForRotation = function (dims, degreeAngle) {\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var rotation = exports.reduceRotation(degreeAngle);\n  return rotation === 90 || rotation === 270 ? {\n    width: dims.height,\n    height: dims.width\n  } : {\n    width: dims.width,\n    height: dims.height\n  };\n};\nexports.rotateRectangle = function (rectangle, borderWidth, degreeAngle) {\n  if (borderWidth === void 0) {\n    borderWidth = 0;\n  }\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var x = rectangle.x,\n    y = rectangle.y,\n    w = rectangle.width,\n    h = rectangle.height;\n  var r = exports.reduceRotation(degreeAngle);\n  var b = borderWidth / 2;\n  // prettier-ignore\n  if (r === 0) return {\n    x: x - b,\n    y: y - b,\n    width: w,\n    height: h\n  };else if (r === 90) return {\n    x: x - h + b,\n    y: y - b,\n    width: h,\n    height: w\n  };else if (r === 180) return {\n    x: x - w + b,\n    y: y - h + b,\n    width: w,\n    height: h\n  };else if (r === 270) return {\n    x: x - b,\n    y: y - w + b,\n    width: h,\n    height: w\n  };else return {\n    x: x - b,\n    y: y - b,\n    width: w,\n    height: h\n  };\n};","map":{"version":3,"names":["utils_1","require","RotationTypes","exports","radians","radianAngle","assertIs","type","Radians","angle","degrees","degreeAngle","Degrees","degreesToRadians","degree","Math","PI","radiansToDegrees","radian","toRadians","rotation","error","JSON","stringify","toDegrees","reduceRotation","quadrants","adjustDimsForRotation","dims","width","height","rotateRectangle","rectangle","borderWidth","x","y","w","h","r","b"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/api/rotations.ts"],"sourcesContent":["import { assertIs, error } from 'src/utils';\n\nexport enum RotationTypes {\n  Degrees = 'degrees',\n  Radians = 'radians',\n}\n\nexport interface Radians {\n  type: RotationTypes.Radians;\n  angle: number;\n}\n\nexport interface Degrees {\n  type: RotationTypes.Degrees;\n  angle: number;\n}\n\nexport type Rotation = Radians | Degrees;\n\nexport const radians = (radianAngle: number): Radians => {\n  assertIs(radianAngle, 'radianAngle', ['number']);\n  return { type: RotationTypes.Radians, angle: radianAngle };\n};\n\nexport const degrees = (degreeAngle: number): Degrees => {\n  assertIs(degreeAngle, 'degreeAngle', ['number']);\n  return { type: RotationTypes.Degrees, angle: degreeAngle };\n};\n\nconst { Radians, Degrees } = RotationTypes;\n\nexport const degreesToRadians = (degree: number) => (degree * Math.PI) / 180;\nexport const radiansToDegrees = (radian: number) => (radian * 180) / Math.PI;\n\n// prettier-ignore\nexport const toRadians = (rotation: Rotation) => \n    rotation.type === Radians ? rotation.angle\n  : rotation.type === Degrees ? degreesToRadians(rotation.angle)\n  : error(`Invalid rotation: ${JSON.stringify(rotation)}`);\n\n// prettier-ignore\nexport const toDegrees = (rotation: Rotation) => \n    rotation.type === Radians ? radiansToDegrees(rotation.angle)\n  : rotation.type === Degrees ? rotation.angle\n  : error(`Invalid rotation: ${JSON.stringify(rotation)}`);\n\nexport const reduceRotation = (degreeAngle = 0) => {\n  const quadrants = (degreeAngle / 90) % 4;\n  if (quadrants === 0) return 0;\n  if (quadrants === 1) return 90;\n  if (quadrants === 2) return 180;\n  if (quadrants === 3) return 270;\n  return 0; // `degreeAngle` is not a multiple of 90\n};\n\nexport const adjustDimsForRotation = (\n  dims: { width: number; height: number },\n  degreeAngle = 0,\n) => {\n  const rotation = reduceRotation(degreeAngle);\n  return rotation === 90 || rotation === 270\n    ? { width: dims.height, height: dims.width }\n    : { width: dims.width, height: dims.height };\n};\n\nexport const rotateRectangle = (\n  rectangle: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  },\n  borderWidth = 0,\n  degreeAngle = 0,\n) => {\n  const { x, y, width: w, height: h } = rectangle;\n\n  const r = reduceRotation(degreeAngle);\n  const b = borderWidth / 2;\n\n  // prettier-ignore\n  if (r === 0) return { x: x - b, y: y - b, width: w, height: h };\n  else if (r === 90) return { x: x - h + b, y: y - b, width: h, height: w };\n  else if (r === 180) return { x: x - w + b, y: y - h + b, width: w, height: h };\n  else if (r === 270) return { x: x - b, y: y - w + b, width: h, height: w };\n  else return { x: x - b, y: y - b, width: w, height: h };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}