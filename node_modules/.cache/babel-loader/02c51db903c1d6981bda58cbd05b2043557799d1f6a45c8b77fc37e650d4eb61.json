{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MissingKeywordError = exports.MissingPDFHeaderError = exports.StalledParserError = exports.UnbalancedParenthesisError = exports.PDFStreamParsingError = exports.PDFInvalidObjectParsingError = exports.PDFObjectParsingError = exports.NextByteAssertionError = exports.PDFParsingError = exports.NumberParsingError = exports.MissingTfOperatorError = exports.MissingDAEntryError = exports.MultiSelectValueError = exports.InvalidAcroFieldValueError = exports.IndexOutOfBoundsError = exports.CorruptPageTreeError = exports.InvalidTargetIndexError = exports.InvalidPDFDateStringError = exports.PDFArrayIsNotRectangleError = exports.PageEmbeddingMismatchedContextError = exports.UnrecognizedStreamTypeError = exports.MissingPageContentsEmbeddingError = exports.MissingCatalogError = exports.ReparseError = exports.UnsupportedEncodingError = exports.UnexpectedObjectTypeError = exports.PrivateConstructorError = exports.MethodNotImplementedError = void 0;\nvar tslib_1 = require(\"tslib\");\nvar utils_1 = require(\"../utils\");\nvar MethodNotImplementedError = /** @class */function (_super) {\n  tslib_1.__extends(MethodNotImplementedError, _super);\n  function MethodNotImplementedError(className, methodName) {\n    var _this = this;\n    var msg = \"Method \" + className + \".\" + methodName + \"() not implemented\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MethodNotImplementedError;\n}(Error);\nexports.MethodNotImplementedError = MethodNotImplementedError;\nvar PrivateConstructorError = /** @class */function (_super) {\n  tslib_1.__extends(PrivateConstructorError, _super);\n  function PrivateConstructorError(className) {\n    var _this = this;\n    var msg = \"Cannot construct \" + className + \" - it has a private constructor\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PrivateConstructorError;\n}(Error);\nexports.PrivateConstructorError = PrivateConstructorError;\nvar UnexpectedObjectTypeError = /** @class */function (_super) {\n  tslib_1.__extends(UnexpectedObjectTypeError, _super);\n  function UnexpectedObjectTypeError(expected, actual) {\n    var _this = this;\n    var name = function (t) {\n      var _a, _b;\n      return (_a = t === null || t === void 0 ? void 0 : t.name) !== null && _a !== void 0 ? _a : (_b = t === null || t === void 0 ? void 0 : t.constructor) === null || _b === void 0 ? void 0 : _b.name;\n    };\n    var expectedTypes = Array.isArray(expected) ? expected.map(name) : [name(expected)];\n    var msg = \"Expected instance of \" + expectedTypes.join(' or ') + \", \" + (\"but got instance of \" + (actual ? name(actual) : actual));\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnexpectedObjectTypeError;\n}(Error);\nexports.UnexpectedObjectTypeError = UnexpectedObjectTypeError;\nvar UnsupportedEncodingError = /** @class */function (_super) {\n  tslib_1.__extends(UnsupportedEncodingError, _super);\n  function UnsupportedEncodingError(encoding) {\n    var _this = this;\n    var msg = encoding + \" stream encoding not supported\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnsupportedEncodingError;\n}(Error);\nexports.UnsupportedEncodingError = UnsupportedEncodingError;\nvar ReparseError = /** @class */function (_super) {\n  tslib_1.__extends(ReparseError, _super);\n  function ReparseError(className, methodName) {\n    var _this = this;\n    var msg = \"Cannot call \" + className + \".\" + methodName + \"() more than once\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ReparseError;\n}(Error);\nexports.ReparseError = ReparseError;\nvar MissingCatalogError = /** @class */function (_super) {\n  tslib_1.__extends(MissingCatalogError, _super);\n  function MissingCatalogError(ref) {\n    var _this = this;\n    var msg = \"Missing catalog (ref=\" + ref + \")\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingCatalogError;\n}(Error);\nexports.MissingCatalogError = MissingCatalogError;\nvar MissingPageContentsEmbeddingError = /** @class */function (_super) {\n  tslib_1.__extends(MissingPageContentsEmbeddingError, _super);\n  function MissingPageContentsEmbeddingError() {\n    var _this = this;\n    var msg = \"Can't embed page with missing Contents\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingPageContentsEmbeddingError;\n}(Error);\nexports.MissingPageContentsEmbeddingError = MissingPageContentsEmbeddingError;\nvar UnrecognizedStreamTypeError = /** @class */function (_super) {\n  tslib_1.__extends(UnrecognizedStreamTypeError, _super);\n  function UnrecognizedStreamTypeError(stream) {\n    var _a, _b, _c;\n    var _this = this;\n    var streamType = (_c = (_b = (_a = stream === null || stream === void 0 ? void 0 : stream.contructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : stream === null || stream === void 0 ? void 0 : stream.name) !== null && _c !== void 0 ? _c : stream;\n    var msg = \"Unrecognized stream type: \" + streamType;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnrecognizedStreamTypeError;\n}(Error);\nexports.UnrecognizedStreamTypeError = UnrecognizedStreamTypeError;\nvar PageEmbeddingMismatchedContextError = /** @class */function (_super) {\n  tslib_1.__extends(PageEmbeddingMismatchedContextError, _super);\n  function PageEmbeddingMismatchedContextError() {\n    var _this = this;\n    var msg = \"Found mismatched contexts while embedding pages. All pages in the array passed to `PDFDocument.embedPages()` must be from the same document.\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PageEmbeddingMismatchedContextError;\n}(Error);\nexports.PageEmbeddingMismatchedContextError = PageEmbeddingMismatchedContextError;\nvar PDFArrayIsNotRectangleError = /** @class */function (_super) {\n  tslib_1.__extends(PDFArrayIsNotRectangleError, _super);\n  function PDFArrayIsNotRectangleError(size) {\n    var _this = this;\n    var msg = \"Attempted to convert PDFArray with \" + size + \" elements to rectangle, but must have exactly 4 elements.\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PDFArrayIsNotRectangleError;\n}(Error);\nexports.PDFArrayIsNotRectangleError = PDFArrayIsNotRectangleError;\nvar InvalidPDFDateStringError = /** @class */function (_super) {\n  tslib_1.__extends(InvalidPDFDateStringError, _super);\n  function InvalidPDFDateStringError(value) {\n    var _this = this;\n    var msg = \"Attempted to convert \\\"\" + value + \"\\\" to a date, but it does not match the PDF date string format.\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidPDFDateStringError;\n}(Error);\nexports.InvalidPDFDateStringError = InvalidPDFDateStringError;\nvar InvalidTargetIndexError = /** @class */function (_super) {\n  tslib_1.__extends(InvalidTargetIndexError, _super);\n  function InvalidTargetIndexError(targetIndex, Count) {\n    var _this = this;\n    var msg = \"Invalid targetIndex specified: targetIndex=\" + targetIndex + \" must be less than Count=\" + Count;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidTargetIndexError;\n}(Error);\nexports.InvalidTargetIndexError = InvalidTargetIndexError;\nvar CorruptPageTreeError = /** @class */function (_super) {\n  tslib_1.__extends(CorruptPageTreeError, _super);\n  function CorruptPageTreeError(targetIndex, operation) {\n    var _this = this;\n    var msg = \"Failed to \" + operation + \" at targetIndex=\" + targetIndex + \" due to corrupt page tree: It is likely that one or more 'Count' entries are invalid\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return CorruptPageTreeError;\n}(Error);\nexports.CorruptPageTreeError = CorruptPageTreeError;\nvar IndexOutOfBoundsError = /** @class */function (_super) {\n  tslib_1.__extends(IndexOutOfBoundsError, _super);\n  function IndexOutOfBoundsError(index, min, max) {\n    var _this = this;\n    var msg = \"index should be at least \" + min + \" and at most \" + max + \", but was actually \" + index;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return IndexOutOfBoundsError;\n}(Error);\nexports.IndexOutOfBoundsError = IndexOutOfBoundsError;\nvar InvalidAcroFieldValueError = /** @class */function (_super) {\n  tslib_1.__extends(InvalidAcroFieldValueError, _super);\n  function InvalidAcroFieldValueError() {\n    var _this = this;\n    var msg = \"Attempted to set invalid field value\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidAcroFieldValueError;\n}(Error);\nexports.InvalidAcroFieldValueError = InvalidAcroFieldValueError;\nvar MultiSelectValueError = /** @class */function (_super) {\n  tslib_1.__extends(MultiSelectValueError, _super);\n  function MultiSelectValueError() {\n    var _this = this;\n    var msg = \"Attempted to select multiple values for single-select field\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MultiSelectValueError;\n}(Error);\nexports.MultiSelectValueError = MultiSelectValueError;\nvar MissingDAEntryError = /** @class */function (_super) {\n  tslib_1.__extends(MissingDAEntryError, _super);\n  function MissingDAEntryError(fieldName) {\n    var _this = this;\n    var msg = \"No /DA (default appearance) entry found for field: \" + fieldName;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingDAEntryError;\n}(Error);\nexports.MissingDAEntryError = MissingDAEntryError;\nvar MissingTfOperatorError = /** @class */function (_super) {\n  tslib_1.__extends(MissingTfOperatorError, _super);\n  function MissingTfOperatorError(fieldName) {\n    var _this = this;\n    var msg = \"No Tf operator found for DA of field: \" + fieldName;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingTfOperatorError;\n}(Error);\nexports.MissingTfOperatorError = MissingTfOperatorError;\nvar NumberParsingError = /** @class */function (_super) {\n  tslib_1.__extends(NumberParsingError, _super);\n  function NumberParsingError(pos, value) {\n    var _this = this;\n    var msg = \"Failed to parse number \" + (\"(line:\" + pos.line + \" col:\" + pos.column + \" offset=\" + pos.offset + \"): \\\"\" + value + \"\\\"\");\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return NumberParsingError;\n}(Error);\nexports.NumberParsingError = NumberParsingError;\nvar PDFParsingError = /** @class */function (_super) {\n  tslib_1.__extends(PDFParsingError, _super);\n  function PDFParsingError(pos, details) {\n    var _this = this;\n    var msg = \"Failed to parse PDF document \" + (\"(line:\" + pos.line + \" col:\" + pos.column + \" offset=\" + pos.offset + \"): \" + details);\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PDFParsingError;\n}(Error);\nexports.PDFParsingError = PDFParsingError;\nvar NextByteAssertionError = /** @class */function (_super) {\n  tslib_1.__extends(NextByteAssertionError, _super);\n  function NextByteAssertionError(pos, expectedByte, actualByte) {\n    var _this = this;\n    var msg = \"Expected next byte to be \" + expectedByte + \" but it was actually \" + actualByte;\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return NextByteAssertionError;\n}(PDFParsingError);\nexports.NextByteAssertionError = NextByteAssertionError;\nvar PDFObjectParsingError = /** @class */function (_super) {\n  tslib_1.__extends(PDFObjectParsingError, _super);\n  function PDFObjectParsingError(pos, byte) {\n    var _this = this;\n    var msg = \"Failed to parse PDF object starting with the following byte: \" + byte;\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return PDFObjectParsingError;\n}(PDFParsingError);\nexports.PDFObjectParsingError = PDFObjectParsingError;\nvar PDFInvalidObjectParsingError = /** @class */function (_super) {\n  tslib_1.__extends(PDFInvalidObjectParsingError, _super);\n  function PDFInvalidObjectParsingError(pos) {\n    var _this = this;\n    var msg = \"Failed to parse invalid PDF object\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return PDFInvalidObjectParsingError;\n}(PDFParsingError);\nexports.PDFInvalidObjectParsingError = PDFInvalidObjectParsingError;\nvar PDFStreamParsingError = /** @class */function (_super) {\n  tslib_1.__extends(PDFStreamParsingError, _super);\n  function PDFStreamParsingError(pos) {\n    var _this = this;\n    var msg = \"Failed to parse PDF stream\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return PDFStreamParsingError;\n}(PDFParsingError);\nexports.PDFStreamParsingError = PDFStreamParsingError;\nvar UnbalancedParenthesisError = /** @class */function (_super) {\n  tslib_1.__extends(UnbalancedParenthesisError, _super);\n  function UnbalancedParenthesisError(pos) {\n    var _this = this;\n    var msg = \"Failed to parse PDF literal string due to unbalanced parenthesis\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return UnbalancedParenthesisError;\n}(PDFParsingError);\nexports.UnbalancedParenthesisError = UnbalancedParenthesisError;\nvar StalledParserError = /** @class */function (_super) {\n  tslib_1.__extends(StalledParserError, _super);\n  function StalledParserError(pos) {\n    var _this = this;\n    var msg = \"Parser stalled\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return StalledParserError;\n}(PDFParsingError);\nexports.StalledParserError = StalledParserError;\nvar MissingPDFHeaderError = /** @class */function (_super) {\n  tslib_1.__extends(MissingPDFHeaderError, _super);\n  function MissingPDFHeaderError(pos) {\n    var _this = this;\n    var msg = \"No PDF header found\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return MissingPDFHeaderError;\n}(PDFParsingError);\nexports.MissingPDFHeaderError = MissingPDFHeaderError;\nvar MissingKeywordError = /** @class */function (_super) {\n  tslib_1.__extends(MissingKeywordError, _super);\n  function MissingKeywordError(pos, keyword) {\n    var _this = this;\n    var msg = \"Did not find expected keyword '\" + utils_1.arrayAsString(keyword) + \"'\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return MissingKeywordError;\n}(PDFParsingError);\nexports.MissingKeywordError = MissingKeywordError;","map":{"version":3,"names":["utils_1","require","MethodNotImplementedError","_super","tslib_1","__extends","className","methodName","_this","msg","call","Error","exports","PrivateConstructorError","UnexpectedObjectTypeError","expected","actual","name","t","_a","_b","constructor","expectedTypes","Array","isArray","map","join","UnsupportedEncodingError","encoding","ReparseError","MissingCatalogError","ref","MissingPageContentsEmbeddingError","UnrecognizedStreamTypeError","stream","streamType","_c","contructor","PageEmbeddingMismatchedContextError","PDFArrayIsNotRectangleError","size","InvalidPDFDateStringError","value","InvalidTargetIndexError","targetIndex","Count","CorruptPageTreeError","operation","IndexOutOfBoundsError","index","min","max","InvalidAcroFieldValueError","MultiSelectValueError","MissingDAEntryError","fieldName","MissingTfOperatorError","NumberParsingError","pos","line","column","offset","PDFParsingError","details","NextByteAssertionError","expectedByte","actualByte","PDFObjectParsingError","byte","PDFInvalidObjectParsingError","PDFStreamParsingError","UnbalancedParenthesisError","StalledParserError","MissingPDFHeaderError","MissingKeywordError","keyword","arrayAsString"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/errors.ts"],"sourcesContent":["// tslint:disable: max-classes-per-file\nimport PDFObject from 'src/core/objects/PDFObject';\nimport { arrayAsString } from 'src/utils';\n\nexport class MethodNotImplementedError extends Error {\n  constructor(className: string, methodName: string) {\n    const msg = `Method ${className}.${methodName}() not implemented`;\n    super(msg);\n  }\n}\n\nexport class PrivateConstructorError extends Error {\n  constructor(className: string) {\n    const msg = `Cannot construct ${className} - it has a private constructor`;\n    super(msg);\n  }\n}\n\nexport class UnexpectedObjectTypeError extends Error {\n  constructor(expected: any | any[], actual: any) {\n    const name = (t: any) => t?.name ?? t?.constructor?.name;\n\n    const expectedTypes = Array.isArray(expected)\n      ? expected.map(name)\n      : [name(expected)];\n\n    const msg =\n      `Expected instance of ${expectedTypes.join(' or ')}, ` +\n      `but got instance of ${actual ? name(actual) : actual}`;\n\n    super(msg);\n  }\n}\n\nexport class UnsupportedEncodingError extends Error {\n  constructor(encoding: string) {\n    const msg = `${encoding} stream encoding not supported`;\n    super(msg);\n  }\n}\n\nexport class ReparseError extends Error {\n  constructor(className: string, methodName: string) {\n    const msg = `Cannot call ${className}.${methodName}() more than once`;\n    super(msg);\n  }\n}\n\nexport class MissingCatalogError extends Error {\n  constructor(ref?: PDFObject) {\n    const msg = `Missing catalog (ref=${ref})`;\n    super(msg);\n  }\n}\n\nexport class MissingPageContentsEmbeddingError extends Error {\n  constructor() {\n    const msg = `Can't embed page with missing Contents`;\n    super(msg);\n  }\n}\n\nexport class UnrecognizedStreamTypeError extends Error {\n  constructor(stream: any) {\n    const streamType = stream?.contructor?.name ?? stream?.name ?? stream;\n    const msg = `Unrecognized stream type: ${streamType}`;\n    super(msg);\n  }\n}\n\nexport class PageEmbeddingMismatchedContextError extends Error {\n  constructor() {\n    const msg = `Found mismatched contexts while embedding pages. All pages in the array passed to \\`PDFDocument.embedPages()\\` must be from the same document.`;\n    super(msg);\n  }\n}\n\nexport class PDFArrayIsNotRectangleError extends Error {\n  constructor(size: number) {\n    const msg = `Attempted to convert PDFArray with ${size} elements to rectangle, but must have exactly 4 elements.`;\n    super(msg);\n  }\n}\n\nexport class InvalidPDFDateStringError extends Error {\n  constructor(value: string) {\n    const msg = `Attempted to convert \"${value}\" to a date, but it does not match the PDF date string format.`;\n    super(msg);\n  }\n}\n\nexport class InvalidTargetIndexError extends Error {\n  constructor(targetIndex: number, Count: number) {\n    const msg = `Invalid targetIndex specified: targetIndex=${targetIndex} must be less than Count=${Count}`;\n    super(msg);\n  }\n}\n\nexport class CorruptPageTreeError extends Error {\n  constructor(targetIndex: number, operation: string) {\n    const msg = `Failed to ${operation} at targetIndex=${targetIndex} due to corrupt page tree: It is likely that one or more 'Count' entries are invalid`;\n    super(msg);\n  }\n}\n\nexport class IndexOutOfBoundsError extends Error {\n  constructor(index: number, min: number, max: number) {\n    const msg = `index should be at least ${min} and at most ${max}, but was actually ${index}`;\n    super(msg);\n  }\n}\n\nexport class InvalidAcroFieldValueError extends Error {\n  constructor() {\n    const msg = `Attempted to set invalid field value`;\n    super(msg);\n  }\n}\n\nexport class MultiSelectValueError extends Error {\n  constructor() {\n    const msg = `Attempted to select multiple values for single-select field`;\n    super(msg);\n  }\n}\n\nexport class MissingDAEntryError extends Error {\n  constructor(fieldName: string) {\n    const msg = `No /DA (default appearance) entry found for field: ${fieldName}`;\n    super(msg);\n  }\n}\n\nexport class MissingTfOperatorError extends Error {\n  constructor(fieldName: string) {\n    const msg = `No Tf operator found for DA of field: ${fieldName}`;\n    super(msg);\n  }\n}\n\n/***** Parser Errors ******/\n\nexport interface Position {\n  line: number;\n  column: number;\n  offset: number;\n}\n\nexport class NumberParsingError extends Error {\n  constructor(pos: Position, value: string) {\n    const msg =\n      `Failed to parse number ` +\n      `(line:${pos.line} col:${pos.column} offset=${pos.offset}): \"${value}\"`;\n    super(msg);\n  }\n}\n\nexport class PDFParsingError extends Error {\n  constructor(pos: Position, details: string) {\n    const msg =\n      `Failed to parse PDF document ` +\n      `(line:${pos.line} col:${pos.column} offset=${pos.offset}): ${details}`;\n    super(msg);\n  }\n}\n\nexport class NextByteAssertionError extends PDFParsingError {\n  constructor(pos: Position, expectedByte: number, actualByte: number) {\n    const msg = `Expected next byte to be ${expectedByte} but it was actually ${actualByte}`;\n    super(pos, msg);\n  }\n}\n\nexport class PDFObjectParsingError extends PDFParsingError {\n  constructor(pos: Position, byte: number) {\n    const msg = `Failed to parse PDF object starting with the following byte: ${byte}`;\n    super(pos, msg);\n  }\n}\n\nexport class PDFInvalidObjectParsingError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Failed to parse invalid PDF object`;\n    super(pos, msg);\n  }\n}\n\nexport class PDFStreamParsingError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Failed to parse PDF stream`;\n    super(pos, msg);\n  }\n}\n\nexport class UnbalancedParenthesisError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Failed to parse PDF literal string due to unbalanced parenthesis`;\n    super(pos, msg);\n  }\n}\n\nexport class StalledParserError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Parser stalled`;\n    super(pos, msg);\n  }\n}\n\nexport class MissingPDFHeaderError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `No PDF header found`;\n    super(pos, msg);\n  }\n}\n\nexport class MissingKeywordError extends PDFParsingError {\n  constructor(pos: Position, keyword: number[]) {\n    const msg = `Did not find expected keyword '${arrayAsString(keyword)}'`;\n    super(pos, msg);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}