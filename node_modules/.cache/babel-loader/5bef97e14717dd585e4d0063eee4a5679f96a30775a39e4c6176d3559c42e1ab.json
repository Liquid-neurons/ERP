{"ast":null,"code":"import CharCodes from \"../syntax/CharCodes\";\nimport { charFromCode, copyStringIntoBuffer } from \"../../utils\";\nvar PDFHeader = /** @class */function () {\n  function PDFHeader(major, minor) {\n    this.major = String(major);\n    this.minor = String(minor);\n  }\n  PDFHeader.prototype.toString = function () {\n    var bc = charFromCode(129);\n    return \"%PDF-\" + this.major + \".\" + this.minor + \"\\n%\" + bc + bc + bc + bc;\n  };\n  PDFHeader.prototype.sizeInBytes = function () {\n    return 12 + this.major.length + this.minor.length;\n  };\n  PDFHeader.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.P;\n    buffer[offset++] = CharCodes.D;\n    buffer[offset++] = CharCodes.F;\n    buffer[offset++] = CharCodes.Dash;\n    offset += copyStringIntoBuffer(this.major, buffer, offset);\n    buffer[offset++] = CharCodes.Period;\n    offset += copyStringIntoBuffer(this.minor, buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    return offset - initialOffset;\n  };\n  PDFHeader.forVersion = function (major, minor) {\n    return new PDFHeader(major, minor);\n  };\n  return PDFHeader;\n}();\nexport default PDFHeader;","map":{"version":3,"names":["CharCodes","charFromCode","copyStringIntoBuffer","PDFHeader","major","minor","String","prototype","toString","bc","sizeInBytes","length","copyBytesInto","buffer","offset","initialOffset","Percent","P","D","F","Dash","Period","Newline","forVersion"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/document/PDFHeader.ts"],"sourcesContent":["import CharCodes from 'src/core/syntax/CharCodes';\nimport { charFromCode, copyStringIntoBuffer } from 'src/utils';\n\nclass PDFHeader {\n  static forVersion = (major: number, minor: number) =>\n    new PDFHeader(major, minor);\n\n  private readonly major: string;\n  private readonly minor: string;\n\n  private constructor(major: number, minor: number) {\n    this.major = String(major);\n    this.minor = String(minor);\n  }\n\n  toString(): string {\n    const bc = charFromCode(129);\n    return `%PDF-${this.major}.${this.minor}\\n%${bc}${bc}${bc}${bc}`;\n  }\n\n  sizeInBytes(): number {\n    return 12 + this.major.length + this.minor.length;\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    const initialOffset = offset;\n\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.P;\n    buffer[offset++] = CharCodes.D;\n    buffer[offset++] = CharCodes.F;\n    buffer[offset++] = CharCodes.Dash;\n\n    offset += copyStringIntoBuffer(this.major, buffer, offset);\n    buffer[offset++] = CharCodes.Period;\n    offset += copyStringIntoBuffer(this.minor, buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n\n    return offset - initialOffset;\n  }\n}\n\nexport default PDFHeader;\n"],"mappings":"AAAA,OAAOA,SAAS;AAChB,SAASC,YAAY,EAAEC,oBAAoB,QAAE;AAE7C,IAAAC,SAAA;EAOE,SAAAA,UAAoBC,KAAa,EAAEC,KAAa;IAC9C,IAAI,CAACD,KAAK,GAAGE,MAAM,CAACF,KAAK,CAAC;IAC1B,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC;EAC5B;EAEAF,SAAA,CAAAI,SAAA,CAAAC,QAAQ,GAAR;IACE,IAAMC,EAAE,GAAGR,YAAY,CAAC,GAAG,CAAC;IAC5B,OAAO,UAAQ,IAAI,CAACG,KAAK,SAAI,IAAI,CAACC,KAAK,WAAMI,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAI;EAClE,CAAC;EAEDN,SAAA,CAAAI,SAAA,CAAAG,WAAW,GAAX;IACE,OAAO,EAAE,GAAG,IAAI,CAACN,KAAK,CAACO,MAAM,GAAG,IAAI,CAACN,KAAK,CAACM,MAAM;EACnD,CAAC;EAEDR,SAAA,CAAAI,SAAA,CAAAK,aAAa,GAAb,UAAcC,MAAkB,EAAEC,MAAc;IAC9C,IAAMC,aAAa,GAAGD,MAAM;IAE5BD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACgB,OAAO;IACpCH,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACiB,CAAC;IAC9BJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACkB,CAAC;IAC9BL,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACmB,CAAC;IAC9BN,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACoB,IAAI;IAEjCN,MAAM,IAAIZ,oBAAoB,CAAC,IAAI,CAACE,KAAK,EAAES,MAAM,EAAEC,MAAM,CAAC;IAC1DD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACqB,MAAM;IACnCP,MAAM,IAAIZ,oBAAoB,CAAC,IAAI,CAACG,KAAK,EAAEQ,MAAM,EAAEC,MAAM,CAAC;IAC1DD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACsB,OAAO;IAEpCT,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,SAAS,CAACgB,OAAO;IACpCH,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IACtBD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IACtBD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IACtBD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IAEtB,OAAOA,MAAM,GAAGC,aAAa;EAC/B,CAAC;EAzCMZ,SAAA,CAAAoB,UAAU,GAAG,UAACnB,KAAa,EAAEC,KAAa;IAC/C,WAAIF,SAAS,CAACC,KAAK,EAAEC,KAAK,CAAC;EAA3B,CAA2B;EAyC/B,OAAAF,SAAC;CAAA,CA3CD;AA6CA,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}