{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/studentdata.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentData() {\n  _s();\n  const {\n    applicationId\n  } = useParams(); // Get the application ID from the URL\n  const [studentData, setStudentData] = useState(null); // State to store student data\n  const [isLoading, setIsLoading] = useState(true); // State to track loading status\n\n  useEffect(() => {\n    // Function to fetch student data based on the application ID\n    const fetchStudentData = async () => {\n      try {\n        const response = await fetch(`http://49.206.252.212:5000/student-data/${applicationId}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setStudentData(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n        setIsLoading(false);\n      }\n    };\n\n    // Call fetchStudentData when the component mounts and when applicationId changes\n    fetchStudentData();\n  }, [applicationId]);\n\n  // Display loading message while fetching data\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold mb-4\",\n        children: [\"Student Data for Application ID: \", applicationId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Display student data when available\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-4\",\n      children: [\"Student Data for Application ID: \", applicationId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), studentData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", studentData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", studentData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No data available for application ID: \", applicationId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentData, \"LA1Hb4DP9yLeYu/NBKzn26VbY58=\", false, function () {\n  return [useParams];\n});\n_c = StudentData;\nexport default StudentData;\nvar _c;\n$RefreshReg$(_c, \"StudentData\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","StudentData","_s","applicationId","studentData","setStudentData","isLoading","setIsLoading","fetchStudentData","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","_c","$RefreshReg$"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/studentdata.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction StudentData() {\n  const { applicationId } = useParams(); // Get the application ID from the URL\n  const [studentData, setStudentData] = useState(null); // State to store student data\n  const [isLoading, setIsLoading] = useState(true); // State to track loading status\n\n  useEffect(() => {\n    // Function to fetch student data based on the application ID\n    const fetchStudentData = async () => {\n      try {\n        const response = await fetch(`http://49.206.252.212:5000/student-data/${applicationId}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setStudentData(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n        setIsLoading(false);\n      }\n    };\n\n    // Call fetchStudentData when the component mounts and when applicationId changes\n    fetchStudentData();\n  }, [applicationId]);\n\n  // Display loading message while fetching data\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto\">\n        <h1 className=\"text-3xl font-semibold mb-4\">Student Data for Application ID: {applicationId}</h1>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  // Display student data when available\n  return (\n    <div className=\"container mx-auto\">\n      <h1 className=\"text-3xl font-semibold mb-4\">Student Data for Application ID: {applicationId}</h1>\n      {studentData ? (\n        <div>\n          <p>Name: {studentData.name}</p>\n          <p>Email: {studentData.email}</p>\n          {/* Add more fields as needed */}\n        </div>\n      ) : (\n        <p>No data available for application ID: {applicationId}</p>\n      )}\n    </div>\n  );\n}\n\nexport default StudentData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}