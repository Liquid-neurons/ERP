{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar CharCodes_1 = tslib_1.__importDefault(require(\"../syntax/CharCodes\"));\nvar utils_1 = require(\"../../utils\");\nvar PDFHeader = /** @class */function () {\n  function PDFHeader(major, minor) {\n    this.major = String(major);\n    this.minor = String(minor);\n  }\n  PDFHeader.prototype.toString = function () {\n    var bc = utils_1.charFromCode(129);\n    return \"%PDF-\" + this.major + \".\" + this.minor + \"\\n%\" + bc + bc + bc + bc;\n  };\n  PDFHeader.prototype.sizeInBytes = function () {\n    return 12 + this.major.length + this.minor.length;\n  };\n  PDFHeader.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes_1.default.Percent;\n    buffer[offset++] = CharCodes_1.default.P;\n    buffer[offset++] = CharCodes_1.default.D;\n    buffer[offset++] = CharCodes_1.default.F;\n    buffer[offset++] = CharCodes_1.default.Dash;\n    offset += utils_1.copyStringIntoBuffer(this.major, buffer, offset);\n    buffer[offset++] = CharCodes_1.default.Period;\n    offset += utils_1.copyStringIntoBuffer(this.minor, buffer, offset);\n    buffer[offset++] = CharCodes_1.default.Newline;\n    buffer[offset++] = CharCodes_1.default.Percent;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    return offset - initialOffset;\n  };\n  PDFHeader.forVersion = function (major, minor) {\n    return new PDFHeader(major, minor);\n  };\n  return PDFHeader;\n}();\nexports.default = PDFHeader;","map":{"version":3,"names":["CharCodes_1","tslib_1","__importDefault","require","utils_1","PDFHeader","major","minor","String","prototype","toString","bc","charFromCode","sizeInBytes","length","copyBytesInto","buffer","offset","initialOffset","default","Percent","P","D","F","Dash","copyStringIntoBuffer","Period","Newline","forVersion","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/document/PDFHeader.ts"],"sourcesContent":["import CharCodes from 'src/core/syntax/CharCodes';\nimport { charFromCode, copyStringIntoBuffer } from 'src/utils';\n\nclass PDFHeader {\n  static forVersion = (major: number, minor: number) =>\n    new PDFHeader(major, minor);\n\n  private readonly major: string;\n  private readonly minor: string;\n\n  private constructor(major: number, minor: number) {\n    this.major = String(major);\n    this.minor = String(minor);\n  }\n\n  toString(): string {\n    const bc = charFromCode(129);\n    return `%PDF-${this.major}.${this.minor}\\n%${bc}${bc}${bc}${bc}`;\n  }\n\n  sizeInBytes(): number {\n    return 12 + this.major.length + this.minor.length;\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    const initialOffset = offset;\n\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.P;\n    buffer[offset++] = CharCodes.D;\n    buffer[offset++] = CharCodes.F;\n    buffer[offset++] = CharCodes.Dash;\n\n    offset += copyStringIntoBuffer(this.major, buffer, offset);\n    buffer[offset++] = CharCodes.Period;\n    offset += copyStringIntoBuffer(this.minor, buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n    buffer[offset++] = 129;\n\n    return offset - initialOffset;\n  }\n}\n\nexport default PDFHeader;\n"],"mappings":";;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA,IAAAE,SAAA;EAOE,SAAAA,UAAoBC,KAAa,EAAEC,KAAa;IAC9C,IAAI,CAACD,KAAK,GAAGE,MAAM,CAACF,KAAK,CAAC;IAC1B,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC;EAC5B;EAEAF,SAAA,CAAAI,SAAA,CAAAC,QAAQ,GAAR;IACE,IAAMC,EAAE,GAAGP,OAAA,CAAAQ,YAAY,CAAC,GAAG,CAAC;IAC5B,OAAO,UAAQ,IAAI,CAACN,KAAK,SAAI,IAAI,CAACC,KAAK,WAAMI,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAI;EAClE,CAAC;EAEDN,SAAA,CAAAI,SAAA,CAAAI,WAAW,GAAX;IACE,OAAO,EAAE,GAAG,IAAI,CAACP,KAAK,CAACQ,MAAM,GAAG,IAAI,CAACP,KAAK,CAACO,MAAM;EACnD,CAAC;EAEDT,SAAA,CAAAI,SAAA,CAAAM,aAAa,GAAb,UAAcC,MAAkB,EAAEC,MAAc;IAC9C,IAAMC,aAAa,GAAGD,MAAM;IAE5BD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACC,OAAO;IACpCJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACE,CAAC;IAC9BL,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACG,CAAC;IAC9BN,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACI,CAAC;IAC9BP,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACK,IAAI;IAEjCP,MAAM,IAAIb,OAAA,CAAAqB,oBAAoB,CAAC,IAAI,CAACnB,KAAK,EAAEU,MAAM,EAAEC,MAAM,CAAC;IAC1DD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACO,MAAM;IACnCT,MAAM,IAAIb,OAAA,CAAAqB,oBAAoB,CAAC,IAAI,CAAClB,KAAK,EAAES,MAAM,EAAEC,MAAM,CAAC;IAC1DD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACQ,OAAO;IAEpCX,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGjB,WAAA,CAAAmB,OAAS,CAACC,OAAO;IACpCJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IACtBD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IACtBD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IACtBD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAG,GAAG;IAEtB,OAAOA,MAAM,GAAGC,aAAa;EAC/B,CAAC;EAzCMb,SAAA,CAAAuB,UAAU,GAAG,UAACtB,KAAa,EAAEC,KAAa;IAC/C,WAAIF,SAAS,CAACC,KAAK,EAAEC,KAAK,CAAC;EAA3B,CAA2B;EAyC/B,OAAAF,SAAC;CAAA,CA3CD;AA6CAwB,OAAA,CAAAV,OAAA,GAAed,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}