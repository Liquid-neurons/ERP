{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/contexts/context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserEmailContext = /*#__PURE__*/createContext();\nexport const useUserEmail = () => {\n  _s();\n  return useContext(UserEmailContext);\n};\n_s(useUserEmail, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const UserEmailProvider = ({\n  children\n}) => {\n  _s2();\n  // Load user's email from session storage on component mount\n  const [userEmail, setUserEmailState] = useState(() => {\n    const storedEmail = sessionStorage.getItem('userEmail');\n    return storedEmail ? storedEmail : \"\";\n  });\n  const setUserEmail = newEmail => {\n    setUserEmailState(newEmail);\n    // Save new email to session storage\n    sessionStorage.setItem('userEmail', newEmail);\n  };\n  const resetUserEmail = () => {\n    setUserEmail(\"\");\n    // Remove email from session storage\n    sessionStorage.removeItem('userEmail');\n  };\n  return /*#__PURE__*/_jsxDEV(UserEmailContext.Provider, {\n    value: {\n      userEmail,\n      setUserEmail,\n      resetUserEmail\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserEmailProvider, \"PQpBtD/4i+DjFxn3kEcw/ywDtWc=\");\n_c = UserEmailProvider;\nvar _c;\n$RefreshReg$(_c, \"UserEmailProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","UserEmailContext","useUserEmail","_s","UserEmailProvider","children","_s2","userEmail","setUserEmailState","storedEmail","sessionStorage","getItem","setUserEmail","newEmail","setItem","resetUserEmail","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/contexts/context.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\n\nconst UserEmailContext = createContext();\n\nexport const useUserEmail = () => useContext(UserEmailContext);\n\nexport const UserEmailProvider = ({ children }) => {\n  // Load user's email from session storage on component mount\n  const [userEmail, setUserEmailState] = useState(() => {\n    const storedEmail = sessionStorage.getItem('userEmail');\n    return storedEmail ? storedEmail : \"\";\n  });\n\n  const setUserEmail = (newEmail) => {\n    setUserEmailState(newEmail);\n    // Save new email to session storage\n    sessionStorage.setItem('userEmail', newEmail);\n  };\n\n  const resetUserEmail = () => {\n    setUserEmail(\"\");\n    // Remove email from session storage\n    sessionStorage.removeItem('userEmail');\n  };\n\n  return (\n    <UserEmailContext.Provider value={{ userEmail, setUserEmail, resetUserEmail }}>\n      {children}\n    </UserEmailContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC,CAAC;AAExC,OAAO,MAAMO,YAAY,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,gBAAgB,CAAC;AAAA;AAACE,EAAA,CAAlDD,YAAY;AAEzB,OAAO,MAAME,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACjD;EACA,MAAM,CAACC,SAAS,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACpD,MAAMa,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IACvD,OAAOF,WAAW,GAAGA,WAAW,GAAG,EAAE;EACvC,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAIC,QAAQ,IAAK;IACjCL,iBAAiB,CAACK,QAAQ,CAAC;IAC3B;IACAH,cAAc,CAACI,OAAO,CAAC,WAAW,EAAED,QAAQ,CAAC;EAC/C,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BH,YAAY,CAAC,EAAE,CAAC;IAChB;IACAF,cAAc,CAACM,UAAU,CAAC,WAAW,CAAC;EACxC,CAAC;EAED,oBACEhB,OAAA,CAACC,gBAAgB,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEX,SAAS;MAAEK,YAAY;MAAEG;IAAe,CAAE;IAAAV,QAAA,EAC3EA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAChB,GAAA,CAxBWF,iBAAiB;AAAAmB,EAAA,GAAjBnB,iBAAiB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}