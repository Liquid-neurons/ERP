{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { MissingPageContentsEmbeddingError, UnrecognizedStreamTypeError } from \"../errors\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFRawStream from \"../objects/PDFRawStream\";\nimport PDFStream from \"../objects/PDFStream\";\nimport { decodePDFRawStream } from \"../streams/decode\";\nimport PDFContentStream from \"../structures/PDFContentStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { mergeIntoTypedArray } from \"../../utils\";\nvar fullPageBoundingBox = function (page) {\n  var mediaBox = page.MediaBox();\n  var width = mediaBox.lookup(2, PDFNumber).asNumber() - mediaBox.lookup(0, PDFNumber).asNumber();\n  var height = mediaBox.lookup(3, PDFNumber).asNumber() - mediaBox.lookup(1, PDFNumber).asNumber();\n  return {\n    left: 0,\n    bottom: 0,\n    right: width,\n    top: height\n  };\n};\n// Returns the identity matrix, modified to position the content of the given\n// bounding box at (0, 0).\nvar boundingBoxAdjustedMatrix = function (bb) {\n  return [1, 0, 0, 1, -bb.left, -bb.bottom];\n};\nvar PDFPageEmbedder = /** @class */function () {\n  function PDFPageEmbedder(page, boundingBox, transformationMatrix) {\n    this.page = page;\n    var bb = boundingBox !== null && boundingBox !== void 0 ? boundingBox : fullPageBoundingBox(page);\n    this.width = bb.right - bb.left;\n    this.height = bb.top - bb.bottom;\n    this.boundingBox = bb;\n    this.transformationMatrix = transformationMatrix !== null && transformationMatrix !== void 0 ? transformationMatrix : boundingBoxAdjustedMatrix(bb);\n  }\n  PDFPageEmbedder.for = function (page, boundingBox, transformationMatrix) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new PDFPageEmbedder(page, boundingBox, transformationMatrix)];\n      });\n    });\n  };\n  PDFPageEmbedder.prototype.embedIntoContext = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, Contents, Resources, decodedContents, _b, left, bottom, right, top, xObject;\n      return __generator(this, function (_c) {\n        _a = this.page.normalizedEntries(), Contents = _a.Contents, Resources = _a.Resources;\n        if (!Contents) throw new MissingPageContentsEmbeddingError();\n        decodedContents = this.decodeContents(Contents);\n        _b = this.boundingBox, left = _b.left, bottom = _b.bottom, right = _b.right, top = _b.top;\n        xObject = context.flateStream(decodedContents, {\n          Type: 'XObject',\n          Subtype: 'Form',\n          FormType: 1,\n          BBox: [left, bottom, right, top],\n          Matrix: this.transformationMatrix,\n          Resources: Resources\n        });\n        if (ref) {\n          context.assign(ref, xObject);\n          return [2 /*return*/, ref];\n        } else {\n          return [2 /*return*/, context.register(xObject)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  // `contents` is an array of streams which are merged to include them in the XObject.\n  // This methods extracts each stream and joins them with a newline character.\n  PDFPageEmbedder.prototype.decodeContents = function (contents) {\n    var newline = Uint8Array.of(CharCodes.Newline);\n    var decodedContents = [];\n    for (var idx = 0, len = contents.size(); idx < len; idx++) {\n      var stream = contents.lookup(idx, PDFStream);\n      var content = void 0;\n      if (stream instanceof PDFRawStream) {\n        content = decodePDFRawStream(stream).decode();\n      } else if (stream instanceof PDFContentStream) {\n        content = stream.getUnencodedContents();\n      } else {\n        throw new UnrecognizedStreamTypeError(stream);\n      }\n      decodedContents.push(content, newline);\n    }\n    return mergeIntoTypedArray.apply(void 0, decodedContents);\n  };\n  return PDFPageEmbedder;\n}();\nexport default PDFPageEmbedder;","map":{"version":3,"names":["MissingPageContentsEmbeddingError","UnrecognizedStreamTypeError","PDFNumber","PDFRawStream","PDFStream","decodePDFRawStream","PDFContentStream","CharCodes","mergeIntoTypedArray","fullPageBoundingBox","page","mediaBox","MediaBox","width","lookup","asNumber","height","left","bottom","right","top","boundingBoxAdjustedMatrix","bb","PDFPageEmbedder","boundingBox","transformationMatrix","for","prototype","embedIntoContext","context","ref","_a","normalizedEntries","Contents","Resources","decodedContents","decodeContents","_b","xObject","flateStream","Type","Subtype","FormType","BBox","Matrix","assign","register","contents","newline","Uint8Array","of","Newline","idx","len","size","stream","content","decode","getUnencodedContents","push","apply"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/embedders/PDFPageEmbedder.ts"],"sourcesContent":["import {\n  MissingPageContentsEmbeddingError,\n  UnrecognizedStreamTypeError,\n} from 'src/core/errors';\nimport PDFArray from 'src/core/objects/PDFArray';\nimport PDFNumber from 'src/core/objects/PDFNumber';\nimport PDFRawStream from 'src/core/objects/PDFRawStream';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport PDFStream from 'src/core/objects/PDFStream';\nimport PDFContext from 'src/core/PDFContext';\nimport { decodePDFRawStream } from 'src/core/streams/decode';\nimport PDFContentStream from 'src/core/structures/PDFContentStream';\nimport PDFPageLeaf from 'src/core/structures/PDFPageLeaf';\nimport CharCodes from 'src/core/syntax/CharCodes';\nimport { TransformationMatrix } from 'src/types/matrix';\nimport { mergeIntoTypedArray } from 'src/utils';\n\n/**\n * Represents a page bounding box.\n * Usually `left` and `bottom` are 0 and right, top are equal\n * to width, height if you want to clip to the whole page.\n *\n *       y\n *       ^\n *       | +--------+ (width,height)\n *       | |        |\n *       | |  Page  |\n *       | |        |\n *       | |        |\n * (0,0) | +--------+\n *       +----------> x\n */\nexport interface PageBoundingBox {\n  left: number /** The left of the bounding box */;\n  bottom: number /** The bottom of the bounding box */;\n  right: number /** The right of the bounding box */;\n  top: number /** The top of the bounding box */;\n}\n\nconst fullPageBoundingBox = (page: PDFPageLeaf) => {\n  const mediaBox = page.MediaBox();\n\n  const width =\n    mediaBox.lookup(2, PDFNumber).asNumber() -\n    mediaBox.lookup(0, PDFNumber).asNumber();\n\n  const height =\n    mediaBox.lookup(3, PDFNumber).asNumber() -\n    mediaBox.lookup(1, PDFNumber).asNumber();\n\n  return { left: 0, bottom: 0, right: width, top: height };\n};\n\n// Returns the identity matrix, modified to position the content of the given\n// bounding box at (0, 0).\nconst boundingBoxAdjustedMatrix = (\n  bb: PageBoundingBox,\n): TransformationMatrix => [1, 0, 0, 1, -bb.left, -bb.bottom];\n\nclass PDFPageEmbedder {\n  static async for(\n    page: PDFPageLeaf,\n    boundingBox?: PageBoundingBox,\n    transformationMatrix?: TransformationMatrix,\n  ) {\n    return new PDFPageEmbedder(page, boundingBox, transformationMatrix);\n  }\n\n  readonly width: number;\n  readonly height: number;\n  readonly boundingBox: PageBoundingBox;\n  readonly transformationMatrix: TransformationMatrix;\n\n  private readonly page: PDFPageLeaf;\n\n  private constructor(\n    page: PDFPageLeaf,\n    boundingBox?: PageBoundingBox,\n    transformationMatrix?: TransformationMatrix,\n  ) {\n    this.page = page;\n\n    const bb = boundingBox ?? fullPageBoundingBox(page);\n\n    this.width = bb.right - bb.left;\n    this.height = bb.top - bb.bottom;\n    this.boundingBox = bb;\n    this.transformationMatrix =\n      transformationMatrix ?? boundingBoxAdjustedMatrix(bb);\n  }\n\n  async embedIntoContext(context: PDFContext, ref?: PDFRef): Promise<PDFRef> {\n    const { Contents, Resources } = this.page.normalizedEntries();\n\n    if (!Contents) throw new MissingPageContentsEmbeddingError();\n    const decodedContents = this.decodeContents(Contents);\n\n    const { left, bottom, right, top } = this.boundingBox;\n    const xObject = context.flateStream(decodedContents, {\n      Type: 'XObject',\n      Subtype: 'Form',\n      FormType: 1,\n      BBox: [left, bottom, right, top],\n      Matrix: this.transformationMatrix,\n      Resources,\n    });\n\n    if (ref) {\n      context.assign(ref, xObject);\n      return ref;\n    } else {\n      return context.register(xObject);\n    }\n  }\n\n  // `contents` is an array of streams which are merged to include them in the XObject.\n  // This methods extracts each stream and joins them with a newline character.\n  private decodeContents(contents: PDFArray) {\n    const newline = Uint8Array.of(CharCodes.Newline);\n    const decodedContents: Uint8Array[] = [];\n\n    for (let idx = 0, len = contents.size(); idx < len; idx++) {\n      const stream = contents.lookup(idx, PDFStream);\n\n      let content: Uint8Array;\n      if (stream instanceof PDFRawStream) {\n        content = decodePDFRawStream(stream).decode();\n      } else if (stream instanceof PDFContentStream) {\n        content = stream.getUnencodedContents();\n      } else {\n        throw new UnrecognizedStreamTypeError(stream);\n      }\n\n      decodedContents.push(content, newline);\n    }\n\n    return mergeIntoTypedArray(...decodedContents);\n  }\n}\n\nexport default PDFPageEmbedder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}