{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/Applicant/ListStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useUser } from '../contexts/context';\nimport { getConfig } from '../contexts/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListStatus() {\n  _s();\n  const {\n    userEmail\n  } = useUser();\n  const [applicationStatus, setApplicationStatus] = useState([]);\n  const {\n    api\n  } = getConfig();\n\n  // Fetch application IDs and status codes from backend when component mounts\n  useEffect(() => {\n    fetchApplicationStatus();\n  }, []);\n\n  // Function to fetch application IDs and status codes from backend\n  const fetchApplicationStatus = async () => {\n    try {\n      const UserEmail = userEmail; // Get user's email from the context\n      const response = await fetch(`${api.base_url}/status-application-ids`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          UserEmail\n        }) // Send user's email in the request body\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(data);\n      setApplicationStatus(data);\n    } catch (error) {\n      console.error('Error fetching application status:', error);\n      // Optionally, you can handle errors here\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Submitted':\n        return 'text-yellow-500';\n      case 'Accepted':\n        return 'text-green-500';\n      case 'Rejected':\n        return 'text-red-500';\n      default:\n        return 'text-gray-500';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-4 flex justify-center\",\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Application ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: applicationStatus.length > 0 ? applicationStatus.map(({\n          application_id,\n          status\n        }) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: application_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/view-application/${application_id}`,\n              className: \"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-6 rounded\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `border px-4 py-2 ${getStatusColor(status)}`,\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, application_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            colSpan: \"3\",\n            children: \"No new applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ListStatus, \"hL0iPtxl4/6RbgXnbCTk9FCyjcU=\", false, function () {\n  return [useUser];\n});\n_c = ListStatus;\nexport default ListStatus;\nvar _c;\n$RefreshReg$(_c, \"ListStatus\");","map":{"version":3,"names":["React","useState","useEffect","Link","useUser","getConfig","jsxDEV","_jsxDEV","ListStatus","_s","userEmail","applicationStatus","setApplicationStatus","api","fetchApplicationStatus","UserEmail","response","fetch","base_url","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","getStatusColor","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","application_id","to","colSpan","_c","$RefreshReg$"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/Applicant/ListStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useUser } from '../contexts/context';\nimport { getConfig } from '../contexts/config';\n\nfunction ListStatus() {\n  const { userEmail } = useUser();\n  const [applicationStatus, setApplicationStatus] = useState([]);\n  const { api } = getConfig();\n\n  // Fetch application IDs and status codes from backend when component mounts\n  useEffect(() => {\n    fetchApplicationStatus();\n  }, []);\n\n  // Function to fetch application IDs and status codes from backend\n  const fetchApplicationStatus = async () => {\n    try {\n      const UserEmail = userEmail; // Get user's email from the context\n      const response = await fetch(`${api.base_url}/status-application-ids`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ UserEmail }) // Send user's email in the request body\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(data);\n      setApplicationStatus(data);\n    } catch (error) {\n      console.error('Error fetching application status:', error);\n      // Optionally, you can handle errors here\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'Submitted':\n        return 'text-yellow-500';\n      case 'Accepted':\n        return 'text-green-500';\n      case 'Rejected':\n        return 'text-red-500';\n      default:\n        return 'text-gray-500';\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto\">\n      <h1 className=\"text-3xl font-semibold mb-4 flex justify-center\">Applications</h1>\n      <table className=\"table-auto mx-auto\">\n        <thead>\n          <tr>\n            <th className=\"border px-9 py-2\">Application ID</th>\n            <th className=\"border px-9 py-2\">Review</th>\n            <th className=\"border px-9 py-2\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {applicationStatus.length > 0 ? (\n            applicationStatus.map(({ application_id, status }) => (\n              <tr key={application_id}>\n                <td className=\"border px-4 py-2\">{application_id}</td>\n                <td className=\"border px-4 py-2\">\n                  <Link to={`/view-application/${application_id}`} className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-6 rounded\">\n                    View\n                  </Link>\n                </td>\n                <td className={`border px-4 py-2 ${getStatusColor(status)}`}>{status}</td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td className=\"border px-4 py-2\" colSpan=\"3\">No new applications</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListStatus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}