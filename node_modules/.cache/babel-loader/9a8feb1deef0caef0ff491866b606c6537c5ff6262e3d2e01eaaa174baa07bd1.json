{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/studentdata.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentData() {\n  _s();\n  const {\n    applicationId\n  } = useParams(); // Get the application ID from the URL\n  const [isLoading, setIsLoading] = useState(true); // State to track loading status\n  const [error, setError] = useState(null); // State to track errors\n\n  useEffect(() => {\n    // Function to fetch student data based on the application ID\n    const fetchStudentData = async () => {\n      try {\n        const response = await fetch('http://49.206.252.212:5000/student-data', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            applicationId\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    // Call fetchStudentData when the component mounts and when applicationId changes\n    fetchStudentData();\n  }, [applicationId]);\n\n  // Display loading message while fetching data\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold mb-4\",\n        children: [\"Student Data for Application ID: \", applicationId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Display error message if an error occurred\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold mb-4\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Display student data when available\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-4\",\n      children: [\"Student Data for Application ID: \", applicationId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentData, \"lwFtMMuXnA3M5So28U0og8cEgLk=\", false, function () {\n  return [useParams];\n});\n_c = StudentData;\nexport default StudentData;\nvar _c;\n$RefreshReg$(_c, \"StudentData\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","StudentData","_s","applicationId","isLoading","setIsLoading","error","setError","fetchStudentData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/studentdata.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction StudentData() {\n  const { applicationId } = useParams(); // Get the application ID from the URL\n  const [isLoading, setIsLoading] = useState(true); // State to track loading status\n  const [error, setError] = useState(null); // State to track errors\n\n  useEffect(() => {\n    // Function to fetch student data based on the application ID\n    const fetchStudentData = async () => {\n      try {\n        const response = await fetch('http://49.206.252.212:5000/student-data', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ applicationId })\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    // Call fetchStudentData when the component mounts and when applicationId changes\n    fetchStudentData();\n  }, [applicationId]);\n\n  // Display loading message while fetching data\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto\">\n        <h1 className=\"text-3xl font-semibold mb-4\">Student Data for Application ID: {applicationId}</h1>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  // Display error message if an error occurred\n  if (error) {\n    return (\n      <div className=\"container mx-auto\">\n        <h1 className=\"text-3xl font-semibold mb-4\">Error</h1>\n        <p>{error.message}</p>\n      </div>\n    );\n  }\n\n  // Display student data when available\n  return (\n    <div className=\"container mx-auto\">\n      <h1 className=\"text-3xl font-semibold mb-4\">Student Data for Application ID: {applicationId}</h1>\n      {/* Use data directly here */}\n      {/* Example: <p>{data.APPLICATION_ID}</p> */}\n    </div>\n  );\n}\n\nexport default StudentData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}