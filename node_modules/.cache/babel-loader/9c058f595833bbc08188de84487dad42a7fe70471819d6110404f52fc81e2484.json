{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar PDFNumber_1 = tslib_1.__importDefault(require(\"./PDFNumber\"));\nvar PDFObject_1 = tslib_1.__importDefault(require(\"./PDFObject\"));\nvar CharCodes_1 = tslib_1.__importDefault(require(\"../syntax/CharCodes\"));\nvar errors_1 = require(\"../errors\");\nvar PDFArray = /** @class */function (_super) {\n  tslib_1.__extends(PDFArray, _super);\n  function PDFArray(context) {\n    var _this = _super.call(this) || this;\n    _this.array = [];\n    _this.context = context;\n    return _this;\n  }\n  PDFArray.prototype.size = function () {\n    return this.array.length;\n  };\n  PDFArray.prototype.push = function (object) {\n    this.array.push(object);\n  };\n  PDFArray.prototype.insert = function (index, object) {\n    this.array.splice(index, 0, object);\n  };\n  PDFArray.prototype.indexOf = function (object) {\n    var index = this.array.indexOf(object);\n    return index === -1 ? undefined : index;\n  };\n  PDFArray.prototype.remove = function (index) {\n    this.array.splice(index, 1);\n  };\n  PDFArray.prototype.set = function (idx, object) {\n    this.array[idx] = object;\n  };\n  PDFArray.prototype.get = function (index) {\n    return this.array[index];\n  };\n  PDFArray.prototype.lookupMaybe = function (index) {\n    var _a;\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    return (_a = this.context).lookupMaybe.apply(_a, tslib_1.__spreadArrays([this.get(index)], types));\n  };\n  PDFArray.prototype.lookup = function (index) {\n    var _a;\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    return (_a = this.context).lookup.apply(_a, tslib_1.__spreadArrays([this.get(index)], types));\n  };\n  PDFArray.prototype.asRectangle = function () {\n    if (this.size() !== 4) throw new errors_1.PDFArrayIsNotRectangleError(this.size());\n    var lowerLeftX = this.lookup(0, PDFNumber_1.default).asNumber();\n    var lowerLeftY = this.lookup(1, PDFNumber_1.default).asNumber();\n    var upperRightX = this.lookup(2, PDFNumber_1.default).asNumber();\n    var upperRightY = this.lookup(3, PDFNumber_1.default).asNumber();\n    var x = lowerLeftX;\n    var y = lowerLeftY;\n    var width = upperRightX - lowerLeftX;\n    var height = upperRightY - lowerLeftY;\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  PDFArray.prototype.asArray = function () {\n    return this.array.slice();\n  };\n  PDFArray.prototype.clone = function (context) {\n    var clone = PDFArray.withContext(context || this.context);\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      clone.push(this.array[idx]);\n    }\n    return clone;\n  };\n  PDFArray.prototype.toString = function () {\n    var arrayString = '[ ';\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      arrayString += this.get(idx).toString();\n      arrayString += ' ';\n    }\n    arrayString += ']';\n    return arrayString;\n  };\n  PDFArray.prototype.sizeInBytes = function () {\n    var size = 3;\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      size += this.get(idx).sizeInBytes() + 1;\n    }\n    return size;\n  };\n  PDFArray.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes_1.default.LeftSquareBracket;\n    buffer[offset++] = CharCodes_1.default.Space;\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      offset += this.get(idx).copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes_1.default.Space;\n    }\n    buffer[offset++] = CharCodes_1.default.RightSquareBracket;\n    return offset - initialOffset;\n  };\n  PDFArray.prototype.scalePDFNumbers = function (x, y) {\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      var el = this.lookup(idx);\n      if (el instanceof PDFNumber_1.default) {\n        var factor = idx % 2 === 0 ? x : y;\n        this.set(idx, PDFNumber_1.default.of(el.asNumber() * factor));\n      }\n    }\n  };\n  PDFArray.withContext = function (context) {\n    return new PDFArray(context);\n  };\n  return PDFArray;\n}(PDFObject_1.default);\nexports.default = PDFArray;","map":{"version":3,"names":["PDFNumber_1","tslib_1","__importDefault","require","PDFObject_1","CharCodes_1","errors_1","PDFArray","_super","__extends","context","_this","call","array","prototype","size","length","push","object","insert","index","splice","indexOf","undefined","remove","set","idx","get","lookupMaybe","types","_i","arguments","_a","apply","__spreadArrays","lookup","asRectangle","PDFArrayIsNotRectangleError","lowerLeftX","default","asNumber","lowerLeftY","upperRightX","upperRightY","x","y","width","height","asArray","slice","clone","withContext","len","toString","arrayString","sizeInBytes","copyBytesInto","buffer","offset","initialOffset","LeftSquareBracket","Space","RightSquareBracket","scalePDFNumbers","el","factor","of","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/objects/PDFArray.ts"],"sourcesContent":["import PDFBool from 'src/core/objects/PDFBool';\nimport PDFDict from 'src/core/objects/PDFDict';\nimport PDFHexString from 'src/core/objects/PDFHexString';\nimport PDFName from 'src/core/objects/PDFName';\nimport PDFNull from 'src/core/objects/PDFNull';\nimport PDFNumber from 'src/core/objects/PDFNumber';\nimport PDFObject from 'src/core/objects/PDFObject';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport PDFStream from 'src/core/objects/PDFStream';\nimport PDFString from 'src/core/objects/PDFString';\nimport PDFContext from 'src/core/PDFContext';\nimport CharCodes from 'src/core/syntax/CharCodes';\nimport { PDFArrayIsNotRectangleError } from 'src/core/errors';\nimport PDFRawStream from 'src/core/objects/PDFRawStream';\n\nclass PDFArray extends PDFObject {\n  static withContext = (context: PDFContext) => new PDFArray(context);\n\n  private readonly array: PDFObject[];\n  private readonly context: PDFContext;\n\n  private constructor(context: PDFContext) {\n    super();\n    this.array = [];\n    this.context = context;\n  }\n\n  size(): number {\n    return this.array.length;\n  }\n\n  push(object: PDFObject): void {\n    this.array.push(object);\n  }\n\n  insert(index: number, object: PDFObject): void {\n    this.array.splice(index, 0, object);\n  }\n\n  indexOf(object: PDFObject): number | undefined {\n    const index = this.array.indexOf(object);\n    return index === -1 ? undefined : index;\n  }\n\n  remove(index: number): void {\n    this.array.splice(index, 1);\n  }\n\n  set(idx: number, object: PDFObject): void {\n    this.array[idx] = object;\n  }\n\n  get(index: number): PDFObject {\n    return this.array[index];\n  }\n\n  lookupMaybe(index: number, type: typeof PDFArray): PDFArray | undefined;\n  lookupMaybe(index: number, type: typeof PDFBool): PDFBool | undefined;\n  lookupMaybe(index: number, type: typeof PDFDict): PDFDict | undefined;\n  lookupMaybe(\n    index: number,\n    type: typeof PDFHexString,\n  ): PDFHexString | undefined;\n  lookupMaybe(index: number, type: typeof PDFName): PDFName | undefined;\n  lookupMaybe(index: number, type: typeof PDFNull): typeof PDFNull | undefined;\n  lookupMaybe(index: number, type: typeof PDFNumber): PDFNumber | undefined;\n  lookupMaybe(index: number, type: typeof PDFStream): PDFStream | undefined;\n  lookupMaybe(\n    index: number,\n    type: typeof PDFRawStream,\n  ): PDFRawStream | undefined;\n  lookupMaybe(index: number, type: typeof PDFRef): PDFRef | undefined;\n  lookupMaybe(index: number, type: typeof PDFString): PDFString | undefined;\n  lookupMaybe(\n    index: number,\n    type1: typeof PDFString,\n    type2: typeof PDFHexString,\n  ): PDFString | PDFHexString | undefined;\n\n  lookupMaybe(index: number, ...types: any[]) {\n    return this.context.lookupMaybe(\n      this.get(index),\n      // @ts-ignore\n      ...types,\n    ) as any;\n  }\n\n  lookup(index: number): PDFObject | undefined;\n  lookup(index: number, type: typeof PDFArray): PDFArray;\n  lookup(index: number, type: typeof PDFBool): PDFBool;\n  lookup(index: number, type: typeof PDFDict): PDFDict;\n  lookup(index: number, type: typeof PDFHexString): PDFHexString;\n  lookup(index: number, type: typeof PDFName): PDFName;\n  lookup(index: number, type: typeof PDFNull): typeof PDFNull;\n  lookup(index: number, type: typeof PDFNumber): PDFNumber;\n  lookup(index: number, type: typeof PDFStream): PDFStream;\n  lookup(index: number, type: typeof PDFRawStream): PDFRawStream;\n  lookup(index: number, type: typeof PDFRef): PDFRef;\n  lookup(index: number, type: typeof PDFString): PDFString;\n  lookup(\n    index: number,\n    type1: typeof PDFString,\n    type2: typeof PDFHexString,\n  ): PDFString | PDFHexString;\n\n  lookup(index: number, ...types: any[]) {\n    return this.context.lookup(\n      this.get(index),\n      // @ts-ignore\n      ...types,\n    ) as any;\n  }\n\n  asRectangle(): { x: number; y: number; width: number; height: number } {\n    if (this.size() !== 4) throw new PDFArrayIsNotRectangleError(this.size());\n\n    const lowerLeftX = this.lookup(0, PDFNumber).asNumber();\n    const lowerLeftY = this.lookup(1, PDFNumber).asNumber();\n    const upperRightX = this.lookup(2, PDFNumber).asNumber();\n    const upperRightY = this.lookup(3, PDFNumber).asNumber();\n\n    const x = lowerLeftX;\n    const y = lowerLeftY;\n    const width = upperRightX - lowerLeftX;\n    const height = upperRightY - lowerLeftY;\n\n    return { x, y, width, height };\n  }\n\n  asArray(): PDFObject[] {\n    return this.array.slice();\n  }\n\n  clone(context?: PDFContext): PDFArray {\n    const clone = PDFArray.withContext(context || this.context);\n    for (let idx = 0, len = this.size(); idx < len; idx++) {\n      clone.push(this.array[idx]);\n    }\n    return clone;\n  }\n\n  toString(): string {\n    let arrayString = '[ ';\n    for (let idx = 0, len = this.size(); idx < len; idx++) {\n      arrayString += this.get(idx).toString();\n      arrayString += ' ';\n    }\n    arrayString += ']';\n    return arrayString;\n  }\n\n  sizeInBytes(): number {\n    let size = 3;\n    for (let idx = 0, len = this.size(); idx < len; idx++) {\n      size += this.get(idx).sizeInBytes() + 1;\n    }\n    return size;\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    const initialOffset = offset;\n\n    buffer[offset++] = CharCodes.LeftSquareBracket;\n    buffer[offset++] = CharCodes.Space;\n    for (let idx = 0, len = this.size(); idx < len; idx++) {\n      offset += this.get(idx).copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n    }\n    buffer[offset++] = CharCodes.RightSquareBracket;\n\n    return offset - initialOffset;\n  }\n\n  scalePDFNumbers(x: number, y: number): void {\n    for (let idx = 0, len = this.size(); idx < len; idx++) {\n      const el = this.lookup(idx);\n      if (el instanceof PDFNumber) {\n        const factor = idx % 2 === 0 ? x : y;\n        this.set(idx, PDFNumber.of(el.asNumber() * factor));\n      }\n    }\n  }\n}\n\nexport default PDFArray;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}