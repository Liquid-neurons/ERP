{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"../errors\");\nvar PDFName_1 = tslib_1.__importDefault(require(\"../objects/PDFName\"));\nvar PDFNumber_1 = tslib_1.__importDefault(require(\"../objects/PDFNumber\"));\nvar PDFRef_1 = tslib_1.__importDefault(require(\"../objects/PDFRef\"));\nvar ByteStream_1 = tslib_1.__importDefault(require(\"./ByteStream\"));\nvar PDFObjectParser_1 = tslib_1.__importDefault(require(\"./PDFObjectParser\"));\nvar utils_1 = require(\"../../utils\");\nvar PDFObjectStreamParser = /** @class */function (_super) {\n  tslib_1.__extends(PDFObjectStreamParser, _super);\n  function PDFObjectStreamParser(rawStream, shouldWaitForTick) {\n    var _this = _super.call(this, ByteStream_1.default.fromPDFRawStream(rawStream), rawStream.dict.context) || this;\n    var dict = rawStream.dict;\n    _this.alreadyParsed = false;\n    _this.shouldWaitForTick = shouldWaitForTick || function () {\n      return false;\n    };\n    _this.firstOffset = dict.lookup(PDFName_1.default.of('First'), PDFNumber_1.default).asNumber();\n    _this.objectCount = dict.lookup(PDFName_1.default.of('N'), PDFNumber_1.default).asNumber();\n    return _this;\n  }\n  PDFObjectStreamParser.prototype.parseIntoContext = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var offsetsAndObjectNumbers, idx, len, _a, objectNumber, offset, object, ref;\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (this.alreadyParsed) {\n              throw new errors_1.ReparseError('PDFObjectStreamParser', 'parseIntoContext');\n            }\n            this.alreadyParsed = true;\n            offsetsAndObjectNumbers = this.parseOffsetsAndObjectNumbers();\n            idx = 0, len = offsetsAndObjectNumbers.length;\n            _b.label = 1;\n          case 1:\n            if (!(idx < len)) return [3 /*break*/, 4];\n            _a = offsetsAndObjectNumbers[idx], objectNumber = _a.objectNumber, offset = _a.offset;\n            this.bytes.moveTo(this.firstOffset + offset);\n            object = this.parseObject();\n            ref = PDFRef_1.default.of(objectNumber, 0);\n            this.context.assign(ref, object);\n            if (!this.shouldWaitForTick()) return [3 /*break*/, 3];\n            return [4 /*yield*/, utils_1.waitForTick()];\n          case 2:\n            _b.sent();\n            _b.label = 3;\n          case 3:\n            idx++;\n            return [3 /*break*/, 1];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  PDFObjectStreamParser.prototype.parseOffsetsAndObjectNumbers = function () {\n    var offsetsAndObjectNumbers = [];\n    for (var idx = 0, len = this.objectCount; idx < len; idx++) {\n      this.skipWhitespaceAndComments();\n      var objectNumber = this.parseRawInt();\n      this.skipWhitespaceAndComments();\n      var offset = this.parseRawInt();\n      offsetsAndObjectNumbers.push({\n        objectNumber: objectNumber,\n        offset: offset\n      });\n    }\n    return offsetsAndObjectNumbers;\n  };\n  PDFObjectStreamParser.forStream = function (rawStream, shouldWaitForTick) {\n    return new PDFObjectStreamParser(rawStream, shouldWaitForTick);\n  };\n  return PDFObjectStreamParser;\n}(PDFObjectParser_1.default);\nexports.default = PDFObjectStreamParser;","map":{"version":3,"names":["errors_1","require","PDFName_1","tslib_1","__importDefault","PDFNumber_1","PDFRef_1","ByteStream_1","PDFObjectParser_1","utils_1","PDFObjectStreamParser","_super","__extends","rawStream","shouldWaitForTick","_this","call","default","fromPDFRawStream","dict","context","alreadyParsed","firstOffset","lookup","of","asNumber","objectCount","prototype","parseIntoContext","ReparseError","offsetsAndObjectNumbers","parseOffsetsAndObjectNumbers","idx","len","length","_a","objectNumber","offset","bytes","moveTo","object","parseObject","ref","assign","waitForTick","_b","sent","skipWhitespaceAndComments","parseRawInt","push","forStream","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/parser/PDFObjectStreamParser.ts"],"sourcesContent":["import { ReparseError } from 'src/core/errors';\nimport PDFName from 'src/core/objects/PDFName';\nimport PDFNumber from 'src/core/objects/PDFNumber';\nimport PDFRawStream from 'src/core/objects/PDFRawStream';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport ByteStream from 'src/core/parser/ByteStream';\nimport PDFObjectParser from 'src/core/parser/PDFObjectParser';\nimport { waitForTick } from 'src/utils';\n\nclass PDFObjectStreamParser extends PDFObjectParser {\n  static forStream = (\n    rawStream: PDFRawStream,\n    shouldWaitForTick?: () => boolean,\n  ) => new PDFObjectStreamParser(rawStream, shouldWaitForTick);\n\n  private alreadyParsed: boolean;\n  private readonly shouldWaitForTick: () => boolean;\n  private readonly firstOffset: number;\n  private readonly objectCount: number;\n\n  constructor(rawStream: PDFRawStream, shouldWaitForTick?: () => boolean) {\n    super(ByteStream.fromPDFRawStream(rawStream), rawStream.dict.context);\n\n    const { dict } = rawStream;\n\n    this.alreadyParsed = false;\n    this.shouldWaitForTick = shouldWaitForTick || (() => false);\n    this.firstOffset = dict.lookup(PDFName.of('First'), PDFNumber).asNumber();\n    this.objectCount = dict.lookup(PDFName.of('N'), PDFNumber).asNumber();\n  }\n\n  async parseIntoContext(): Promise<void> {\n    if (this.alreadyParsed) {\n      throw new ReparseError('PDFObjectStreamParser', 'parseIntoContext');\n    }\n    this.alreadyParsed = true;\n\n    const offsetsAndObjectNumbers = this.parseOffsetsAndObjectNumbers();\n    for (let idx = 0, len = offsetsAndObjectNumbers.length; idx < len; idx++) {\n      const { objectNumber, offset } = offsetsAndObjectNumbers[idx];\n      this.bytes.moveTo(this.firstOffset + offset);\n      const object = this.parseObject();\n      const ref = PDFRef.of(objectNumber, 0);\n      this.context.assign(ref, object);\n      if (this.shouldWaitForTick()) await waitForTick();\n    }\n  }\n\n  private parseOffsetsAndObjectNumbers(): {\n    objectNumber: number;\n    offset: number;\n  }[] {\n    const offsetsAndObjectNumbers = [];\n    for (let idx = 0, len = this.objectCount; idx < len; idx++) {\n      this.skipWhitespaceAndComments();\n      const objectNumber = this.parseRawInt();\n\n      this.skipWhitespaceAndComments();\n      const offset = this.parseRawInt();\n\n      offsetsAndObjectNumbers.push({ objectNumber, offset });\n    }\n    return offsetsAndObjectNumbers;\n  }\n}\n\nexport default PDFObjectStreamParser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}