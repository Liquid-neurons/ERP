{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar CharCodes_1 = tslib_1.__importDefault(require(\"../syntax/CharCodes\"));\nvar utils_1 = require(\"../../utils\");\nvar PDFTrailer = /** @class */function () {\n  function PDFTrailer(lastXRefOffset) {\n    this.lastXRefOffset = String(lastXRefOffset);\n  }\n  PDFTrailer.prototype.toString = function () {\n    return \"startxref\\n\" + this.lastXRefOffset + \"\\n%%EOF\";\n  };\n  PDFTrailer.prototype.sizeInBytes = function () {\n    return 16 + this.lastXRefOffset.length;\n  };\n  PDFTrailer.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes_1.default.s;\n    buffer[offset++] = CharCodes_1.default.t;\n    buffer[offset++] = CharCodes_1.default.a;\n    buffer[offset++] = CharCodes_1.default.r;\n    buffer[offset++] = CharCodes_1.default.t;\n    buffer[offset++] = CharCodes_1.default.x;\n    buffer[offset++] = CharCodes_1.default.r;\n    buffer[offset++] = CharCodes_1.default.e;\n    buffer[offset++] = CharCodes_1.default.f;\n    buffer[offset++] = CharCodes_1.default.Newline;\n    offset += utils_1.copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\n    buffer[offset++] = CharCodes_1.default.Newline;\n    buffer[offset++] = CharCodes_1.default.Percent;\n    buffer[offset++] = CharCodes_1.default.Percent;\n    buffer[offset++] = CharCodes_1.default.E;\n    buffer[offset++] = CharCodes_1.default.O;\n    buffer[offset++] = CharCodes_1.default.F;\n    return offset - initialOffset;\n  };\n  PDFTrailer.forLastCrossRefSectionOffset = function (offset) {\n    return new PDFTrailer(offset);\n  };\n  return PDFTrailer;\n}();\nexports.default = PDFTrailer;","map":{"version":3,"names":["CharCodes_1","tslib_1","__importDefault","require","utils_1","PDFTrailer","lastXRefOffset","String","prototype","toString","sizeInBytes","length","copyBytesInto","buffer","offset","initialOffset","default","s","t","a","r","x","e","f","Newline","copyStringIntoBuffer","Percent","E","O","F","forLastCrossRefSectionOffset","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/document/PDFTrailer.ts"],"sourcesContent":["import CharCodes from 'src/core/syntax/CharCodes';\nimport { copyStringIntoBuffer } from 'src/utils';\n\nclass PDFTrailer {\n  static forLastCrossRefSectionOffset = (offset: number) =>\n    new PDFTrailer(offset);\n\n  private readonly lastXRefOffset: string;\n\n  private constructor(lastXRefOffset: number) {\n    this.lastXRefOffset = String(lastXRefOffset);\n  }\n\n  toString(): string {\n    return `startxref\\n${this.lastXRefOffset}\\n%%EOF`;\n  }\n\n  sizeInBytes(): number {\n    return 16 + this.lastXRefOffset.length;\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    const initialOffset = offset;\n\n    buffer[offset++] = CharCodes.s;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.x;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.f;\n    buffer[offset++] = CharCodes.Newline;\n\n    offset += copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\n\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.E;\n    buffer[offset++] = CharCodes.O;\n    buffer[offset++] = CharCodes.F;\n\n    return offset - initialOffset;\n  }\n}\n\nexport default PDFTrailer;\n"],"mappings":";;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA,IAAAE,UAAA;EAME,SAAAA,WAAoBC,cAAsB;IACxC,IAAI,CAACA,cAAc,GAAGC,MAAM,CAACD,cAAc,CAAC;EAC9C;EAEAD,UAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR;IACE,OAAO,gBAAc,IAAI,CAACH,cAAc,YAAS;EACnD,CAAC;EAEDD,UAAA,CAAAG,SAAA,CAAAE,WAAW,GAAX;IACE,OAAO,EAAE,GAAG,IAAI,CAACJ,cAAc,CAACK,MAAM;EACxC,CAAC;EAEDN,UAAA,CAAAG,SAAA,CAAAI,aAAa,GAAb,UAAcC,MAAkB,EAAEC,MAAc;IAC9C,IAAMC,aAAa,GAAGD,MAAM;IAE5BD,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACC,CAAC;IAC9BJ,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACE,CAAC;IAC9BL,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACG,CAAC;IAC9BN,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACI,CAAC;IAC9BP,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACE,CAAC;IAC9BL,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACK,CAAC;IAC9BR,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACI,CAAC;IAC9BP,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACM,CAAC;IAC9BT,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACO,CAAC;IAC9BV,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACQ,OAAO;IAEpCV,MAAM,IAAIV,OAAA,CAAAqB,oBAAoB,CAAC,IAAI,CAACnB,cAAc,EAAEO,MAAM,EAAEC,MAAM,CAAC;IAEnED,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACQ,OAAO;IACpCX,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACU,OAAO;IACpCb,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACU,OAAO;IACpCb,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACW,CAAC;IAC9Bd,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACY,CAAC;IAC9Bf,MAAM,CAACC,MAAM,EAAE,CAAC,GAAGd,WAAA,CAAAgB,OAAS,CAACa,CAAC;IAE9B,OAAOf,MAAM,GAAGC,aAAa;EAC/B,CAAC;EAzCMV,UAAA,CAAAyB,4BAA4B,GAAG,UAAChB,MAAc;IACnD,WAAIT,UAAU,CAACS,MAAM,CAAC;EAAtB,CAAsB;EAyC1B,OAAAT,UAAC;CAAA,CA3CD;AA6CA0B,OAAA,CAAAf,OAAA,GAAeX,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}