{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar PDFStream_1 = tslib_1.__importDefault(require(\"./PDFStream\"));\nvar utils_1 = require(\"../../utils\");\nvar PDFRawStream = /** @class */function (_super) {\n  tslib_1.__extends(PDFRawStream, _super);\n  function PDFRawStream(dict, contents) {\n    var _this = _super.call(this, dict) || this;\n    _this.contents = contents;\n    return _this;\n  }\n  PDFRawStream.prototype.asUint8Array = function () {\n    return this.contents.slice();\n  };\n  PDFRawStream.prototype.clone = function (context) {\n    return PDFRawStream.of(this.dict.clone(context), this.contents.slice());\n  };\n  PDFRawStream.prototype.getContentsString = function () {\n    return utils_1.arrayAsString(this.contents);\n  };\n  PDFRawStream.prototype.getContents = function () {\n    return this.contents;\n  };\n  PDFRawStream.prototype.getContentsSize = function () {\n    return this.contents.length;\n  };\n  PDFRawStream.of = function (dict, contents) {\n    return new PDFRawStream(dict, contents);\n  };\n  return PDFRawStream;\n}(PDFStream_1.default);\nexports.default = PDFRawStream;","map":{"version":3,"names":["PDFStream_1","tslib_1","__importDefault","require","utils_1","PDFRawStream","_super","__extends","dict","contents","_this","call","prototype","asUint8Array","slice","clone","context","of","getContentsString","arrayAsString","getContents","getContentsSize","length","default","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/objects/PDFRawStream.ts"],"sourcesContent":["import PDFDict from 'src/core/objects/PDFDict';\nimport PDFStream from 'src/core/objects/PDFStream';\nimport PDFContext from 'src/core/PDFContext';\nimport { arrayAsString } from 'src/utils';\n\nclass PDFRawStream extends PDFStream {\n  static of = (dict: PDFDict, contents: Uint8Array) =>\n    new PDFRawStream(dict, contents);\n\n  readonly contents: Uint8Array;\n\n  private constructor(dict: PDFDict, contents: Uint8Array) {\n    super(dict);\n    this.contents = contents;\n  }\n\n  asUint8Array(): Uint8Array {\n    return this.contents.slice();\n  }\n\n  clone(context?: PDFContext): PDFRawStream {\n    return PDFRawStream.of(this.dict.clone(context), this.contents.slice());\n  }\n\n  getContentsString(): string {\n    return arrayAsString(this.contents);\n  }\n\n  getContents(): Uint8Array {\n    return this.contents;\n  }\n\n  getContentsSize(): number {\n    return this.contents.length;\n  }\n}\n\nexport default PDFRawStream;\n"],"mappings":";;;;;;AACA,IAAAA,WAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AAEA,IAAAE,YAAA,0BAAAC,MAAA;EAA2BL,OAAA,CAAAM,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAMzB,SAAAD,aAAoBG,IAAa,EAAEC,QAAoB;IAAvD,IAAAC,KAAA,GACEJ,MAAA,CAAAK,IAAA,OAAMH,IAAI,CAAC;IACXE,KAAI,CAACD,QAAQ,GAAGA,QAAQ;;EAC1B;EAEAJ,YAAA,CAAAO,SAAA,CAAAC,YAAY,GAAZ;IACE,OAAO,IAAI,CAACJ,QAAQ,CAACK,KAAK,EAAE;EAC9B,CAAC;EAEDT,YAAA,CAAAO,SAAA,CAAAG,KAAK,GAAL,UAAMC,OAAoB;IACxB,OAAOX,YAAY,CAACY,EAAE,CAAC,IAAI,CAACT,IAAI,CAACO,KAAK,CAACC,OAAO,CAAC,EAAE,IAAI,CAACP,QAAQ,CAACK,KAAK,EAAE,CAAC;EACzE,CAAC;EAEDT,YAAA,CAAAO,SAAA,CAAAM,iBAAiB,GAAjB;IACE,OAAOd,OAAA,CAAAe,aAAa,CAAC,IAAI,CAACV,QAAQ,CAAC;EACrC,CAAC;EAEDJ,YAAA,CAAAO,SAAA,CAAAQ,WAAW,GAAX;IACE,OAAO,IAAI,CAACX,QAAQ;EACtB,CAAC;EAEDJ,YAAA,CAAAO,SAAA,CAAAS,eAAe,GAAf;IACE,OAAO,IAAI,CAACZ,QAAQ,CAACa,MAAM;EAC7B,CAAC;EA5BMjB,YAAA,CAAAY,EAAE,GAAG,UAACT,IAAa,EAAEC,QAAoB;IAC9C,WAAIJ,YAAY,CAACG,IAAI,EAAEC,QAAQ,CAAC;EAAhC,CAAgC;EA4BpC,OAAAJ,YAAC;CAAA,CA9B0BL,WAAA,CAAAuB,OAAS;AAgCpCC,OAAA,CAAAD,OAAA,GAAelB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}