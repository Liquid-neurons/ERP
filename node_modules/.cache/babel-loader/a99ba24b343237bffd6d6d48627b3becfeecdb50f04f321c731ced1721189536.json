{"ast":null,"code":"// tslint:disable: max-classes-per-file\nimport { __extends } from \"tslib\";\n// TODO: Include link to documentation with example\nvar EncryptedPDFError = /** @class */function (_super) {\n  __extends(EncryptedPDFError, _super);\n  function EncryptedPDFError() {\n    var _this = this;\n    var msg = 'Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return EncryptedPDFError;\n}(Error);\nexport { EncryptedPDFError };\n// TODO: Include link to documentation with example\nvar FontkitNotRegisteredError = /** @class */function (_super) {\n  __extends(FontkitNotRegisteredError, _super);\n  function FontkitNotRegisteredError() {\n    var _this = this;\n    var msg = 'Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FontkitNotRegisteredError;\n}(Error);\nexport { FontkitNotRegisteredError };\n// TODO: Include link to documentation with example\nvar ForeignPageError = /** @class */function (_super) {\n  __extends(ForeignPageError, _super);\n  function ForeignPageError() {\n    var _this = this;\n    var msg = 'A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ForeignPageError;\n}(Error);\nexport { ForeignPageError };\n// TODO: Include link to documentation with example\nvar RemovePageFromEmptyDocumentError = /** @class */function (_super) {\n  __extends(RemovePageFromEmptyDocumentError, _super);\n  function RemovePageFromEmptyDocumentError() {\n    var _this = this;\n    var msg = 'PDFDocument has no pages so `PDFDocument.removePage` cannot be called';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return RemovePageFromEmptyDocumentError;\n}(Error);\nexport { RemovePageFromEmptyDocumentError };\nvar NoSuchFieldError = /** @class */function (_super) {\n  __extends(NoSuchFieldError, _super);\n  function NoSuchFieldError(name) {\n    var _this = this;\n    var msg = \"PDFDocument has no form field with the name \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return NoSuchFieldError;\n}(Error);\nexport { NoSuchFieldError };\nvar UnexpectedFieldTypeError = /** @class */function (_super) {\n  __extends(UnexpectedFieldTypeError, _super);\n  function UnexpectedFieldTypeError(name, expected, actual) {\n    var _a, _b;\n    var _this = this;\n    var expectedType = expected === null || expected === void 0 ? void 0 : expected.name;\n    var actualType = (_b = (_a = actual === null || actual === void 0 ? void 0 : actual.constructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : actual;\n    var msg = \"Expected field \\\"\" + name + \"\\\" to be of type \" + expectedType + \", \" + (\"but it is actually of type \" + actualType);\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnexpectedFieldTypeError;\n}(Error);\nexport { UnexpectedFieldTypeError };\nvar MissingOnValueCheckError = /** @class */function (_super) {\n  __extends(MissingOnValueCheckError, _super);\n  function MissingOnValueCheckError(onValue) {\n    var _this = this;\n    var msg = \"Failed to select check box due to missing onValue: \\\"\" + onValue + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingOnValueCheckError;\n}(Error);\nexport { MissingOnValueCheckError };\nvar FieldAlreadyExistsError = /** @class */function (_super) {\n  __extends(FieldAlreadyExistsError, _super);\n  function FieldAlreadyExistsError(name) {\n    var _this = this;\n    var msg = \"A field already exists with the specified name: \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FieldAlreadyExistsError;\n}(Error);\nexport { FieldAlreadyExistsError };\nvar InvalidFieldNamePartError = /** @class */function (_super) {\n  __extends(InvalidFieldNamePartError, _super);\n  function InvalidFieldNamePartError(namePart) {\n    var _this = this;\n    var msg = \"Field name contains invalid component: \\\"\" + namePart + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidFieldNamePartError;\n}(Error);\nexport { InvalidFieldNamePartError };\nvar FieldExistsAsNonTerminalError = /** @class */function (_super) {\n  __extends(FieldExistsAsNonTerminalError, _super);\n  function FieldExistsAsNonTerminalError(name) {\n    var _this = this;\n    var msg = \"A non-terminal field already exists with the specified name: \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FieldExistsAsNonTerminalError;\n}(Error);\nexport { FieldExistsAsNonTerminalError };\nvar RichTextFieldReadError = /** @class */function (_super) {\n  __extends(RichTextFieldReadError, _super);\n  function RichTextFieldReadError(fieldName) {\n    var _this = this;\n    var msg = \"Reading rich text fields is not supported: Attempted to read rich text field: \" + fieldName;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return RichTextFieldReadError;\n}(Error);\nexport { RichTextFieldReadError };\nvar CombedTextLayoutError = /** @class */function (_super) {\n  __extends(CombedTextLayoutError, _super);\n  function CombedTextLayoutError(lineLength, cellCount) {\n    var _this = this;\n    var msg = \"Failed to layout combed text as lineLength=\" + lineLength + \" is greater than cellCount=\" + cellCount;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return CombedTextLayoutError;\n}(Error);\nexport { CombedTextLayoutError };\nvar ExceededMaxLengthError = /** @class */function (_super) {\n  __extends(ExceededMaxLengthError, _super);\n  function ExceededMaxLengthError(textLength, maxLength, name) {\n    var _this = this;\n    var msg = \"Attempted to set text with length=\" + textLength + \" for TextField with maxLength=\" + maxLength + \" and name=\" + name;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ExceededMaxLengthError;\n}(Error);\nexport { ExceededMaxLengthError };\nvar InvalidMaxLengthError = /** @class */function (_super) {\n  __extends(InvalidMaxLengthError, _super);\n  function InvalidMaxLengthError(textLength, maxLength, name) {\n    var _this = this;\n    var msg = \"Attempted to set maxLength=\" + maxLength + \", which is less than \" + textLength + \", the length of this field's current value (name=\" + name + \")\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidMaxLengthError;\n}(Error);\nexport { InvalidMaxLengthError };","map":{"version":3,"names":["EncryptedPDFError","_super","__extends","_this","msg","call","Error","FontkitNotRegisteredError","ForeignPageError","RemovePageFromEmptyDocumentError","NoSuchFieldError","name","UnexpectedFieldTypeError","expected","actual","expectedType","actualType","_b","_a","constructor","MissingOnValueCheckError","onValue","FieldAlreadyExistsError","InvalidFieldNamePartError","namePart","FieldExistsAsNonTerminalError","RichTextFieldReadError","fieldName","CombedTextLayoutError","lineLength","cellCount","ExceededMaxLengthError","textLength","maxLength","InvalidMaxLengthError"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/api/errors.ts"],"sourcesContent":["// tslint:disable: max-classes-per-file\n\n// TODO: Include link to documentation with example\nexport class EncryptedPDFError extends Error {\n  constructor() {\n    const msg =\n      'Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.';\n    super(msg);\n  }\n}\n\n// TODO: Include link to documentation with example\nexport class FontkitNotRegisteredError extends Error {\n  constructor() {\n    const msg =\n      'Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.';\n    super(msg);\n  }\n}\n\n// TODO: Include link to documentation with example\nexport class ForeignPageError extends Error {\n  constructor() {\n    const msg =\n      'A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.';\n    super(msg);\n  }\n}\n\n// TODO: Include link to documentation with example\nexport class RemovePageFromEmptyDocumentError extends Error {\n  constructor() {\n    const msg =\n      'PDFDocument has no pages so `PDFDocument.removePage` cannot be called';\n    super(msg);\n  }\n}\n\nexport class NoSuchFieldError extends Error {\n  constructor(name: string) {\n    const msg = `PDFDocument has no form field with the name \"${name}\"`;\n    super(msg);\n  }\n}\n\nexport class UnexpectedFieldTypeError extends Error {\n  constructor(name: string, expected: any, actual: any) {\n    const expectedType = expected?.name;\n    const actualType = actual?.constructor?.name ?? actual;\n    const msg =\n      `Expected field \"${name}\" to be of type ${expectedType}, ` +\n      `but it is actually of type ${actualType}`;\n    super(msg);\n  }\n}\n\nexport class MissingOnValueCheckError extends Error {\n  constructor(onValue: any) {\n    const msg = `Failed to select check box due to missing onValue: \"${onValue}\"`;\n    super(msg);\n  }\n}\n\nexport class FieldAlreadyExistsError extends Error {\n  constructor(name: string) {\n    const msg = `A field already exists with the specified name: \"${name}\"`;\n    super(msg);\n  }\n}\n\nexport class InvalidFieldNamePartError extends Error {\n  constructor(namePart: string) {\n    const msg = `Field name contains invalid component: \"${namePart}\"`;\n    super(msg);\n  }\n}\n\nexport class FieldExistsAsNonTerminalError extends Error {\n  constructor(name: string) {\n    const msg = `A non-terminal field already exists with the specified name: \"${name}\"`;\n    super(msg);\n  }\n}\n\nexport class RichTextFieldReadError extends Error {\n  constructor(fieldName: string) {\n    const msg = `Reading rich text fields is not supported: Attempted to read rich text field: ${fieldName}`;\n    super(msg);\n  }\n}\n\nexport class CombedTextLayoutError extends Error {\n  constructor(lineLength: number, cellCount: number) {\n    const msg = `Failed to layout combed text as lineLength=${lineLength} is greater than cellCount=${cellCount}`;\n    super(msg);\n  }\n}\n\nexport class ExceededMaxLengthError extends Error {\n  constructor(textLength: number, maxLength: number, name: string) {\n    const msg = `Attempted to set text with length=${textLength} for TextField with maxLength=${maxLength} and name=${name}`;\n    super(msg);\n  }\n}\n\nexport class InvalidMaxLengthError extends Error {\n  constructor(textLength: number, maxLength: number, name: string) {\n    const msg = `Attempted to set maxLength=${maxLength}, which is less than ${textLength}, the length of this field's current value (name=${name})`;\n    super(msg);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}