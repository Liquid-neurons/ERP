{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colorToComponents = exports.componentsToColor = exports.setStrokingColor = exports.setFillingColor = exports.cmyk = exports.rgb = exports.grayscale = exports.ColorTypes = void 0;\nvar operators_1 = require(\"./operators\");\nvar utils_1 = require(\"../utils\");\nvar ColorTypes;\n(function (ColorTypes) {\n  ColorTypes[\"Grayscale\"] = \"Grayscale\";\n  ColorTypes[\"RGB\"] = \"RGB\";\n  ColorTypes[\"CMYK\"] = \"CMYK\";\n})(ColorTypes = exports.ColorTypes || (exports.ColorTypes = {}));\nexports.grayscale = function (gray) {\n  utils_1.assertRange(gray, 'gray', 0.0, 1.0);\n  return {\n    type: ColorTypes.Grayscale,\n    gray: gray\n  };\n};\nexports.rgb = function (red, green, blue) {\n  utils_1.assertRange(red, 'red', 0, 1);\n  utils_1.assertRange(green, 'green', 0, 1);\n  utils_1.assertRange(blue, 'blue', 0, 1);\n  return {\n    type: ColorTypes.RGB,\n    red: red,\n    green: green,\n    blue: blue\n  };\n};\nexports.cmyk = function (cyan, magenta, yellow, key) {\n  utils_1.assertRange(cyan, 'cyan', 0, 1);\n  utils_1.assertRange(magenta, 'magenta', 0, 1);\n  utils_1.assertRange(yellow, 'yellow', 0, 1);\n  utils_1.assertRange(key, 'key', 0, 1);\n  return {\n    type: ColorTypes.CMYK,\n    cyan: cyan,\n    magenta: magenta,\n    yellow: yellow,\n    key: key\n  };\n};\nvar Grayscale = ColorTypes.Grayscale,\n  RGB = ColorTypes.RGB,\n  CMYK = ColorTypes.CMYK;\n// prettier-ignore\nexports.setFillingColor = function (color) {\n  return color.type === Grayscale ? operators_1.setFillingGrayscaleColor(color.gray) : color.type === RGB ? operators_1.setFillingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? operators_1.setFillingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : utils_1.error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexports.setStrokingColor = function (color) {\n  return color.type === Grayscale ? operators_1.setStrokingGrayscaleColor(color.gray) : color.type === RGB ? operators_1.setStrokingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? operators_1.setStrokingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : utils_1.error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexports.componentsToColor = function (comps, scale) {\n  if (scale === void 0) {\n    scale = 1;\n  }\n  return (comps === null || comps === void 0 ? void 0 : comps.length) === 1 ? exports.grayscale(comps[0] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 3 ? exports.rgb(comps[0] * scale, comps[1] * scale, comps[2] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 4 ? exports.cmyk(comps[0] * scale, comps[1] * scale, comps[2] * scale, comps[3] * scale) : undefined;\n};\n// prettier-ignore\nexports.colorToComponents = function (color) {\n  return color.type === Grayscale ? [color.gray] : color.type === RGB ? [color.red, color.green, color.blue] : color.type === CMYK ? [color.cyan, color.magenta, color.yellow, color.key] : utils_1.error(\"Invalid color: \" + JSON.stringify(color));\n};","map":{"version":3,"names":["operators_1","require","utils_1","ColorTypes","exports","grayscale","gray","assertRange","type","Grayscale","rgb","red","green","blue","RGB","cmyk","cyan","magenta","yellow","key","CMYK","setFillingColor","color","setFillingGrayscaleColor","setFillingRgbColor","setFillingCmykColor","error","JSON","stringify","setStrokingColor","setStrokingGrayscaleColor","setStrokingRgbColor","setStrokingCmykColor","componentsToColor","comps","scale","length","undefined","colorToComponents"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/api/colors.ts"],"sourcesContent":["import {\n  setFillingCmykColor,\n  setFillingGrayscaleColor,\n  setFillingRgbColor,\n  setStrokingCmykColor,\n  setStrokingGrayscaleColor,\n  setStrokingRgbColor,\n} from 'src/api/operators';\nimport { assertRange, error } from 'src/utils';\n\nexport enum ColorTypes {\n  Grayscale = 'Grayscale',\n  RGB = 'RGB',\n  CMYK = 'CMYK',\n}\n\nexport interface Grayscale {\n  type: ColorTypes.Grayscale;\n  gray: number;\n}\n\nexport interface RGB {\n  type: ColorTypes.RGB;\n  red: number;\n  green: number;\n  blue: number;\n}\n\nexport interface CMYK {\n  type: ColorTypes.CMYK;\n  cyan: number;\n  magenta: number;\n  yellow: number;\n  key: number;\n}\n\nexport type Color = Grayscale | RGB | CMYK;\n\nexport const grayscale = (gray: number): Grayscale => {\n  assertRange(gray, 'gray', 0.0, 1.0);\n  return { type: ColorTypes.Grayscale, gray };\n};\n\nexport const rgb = (red: number, green: number, blue: number): RGB => {\n  assertRange(red, 'red', 0, 1);\n  assertRange(green, 'green', 0, 1);\n  assertRange(blue, 'blue', 0, 1);\n  return { type: ColorTypes.RGB, red, green, blue };\n};\n\nexport const cmyk = (\n  cyan: number,\n  magenta: number,\n  yellow: number,\n  key: number,\n): CMYK => {\n  assertRange(cyan, 'cyan', 0, 1);\n  assertRange(magenta, 'magenta', 0, 1);\n  assertRange(yellow, 'yellow', 0, 1);\n  assertRange(key, 'key', 0, 1);\n  return { type: ColorTypes.CMYK, cyan, magenta, yellow, key };\n};\n\nconst { Grayscale, RGB, CMYK } = ColorTypes;\n\n// prettier-ignore\nexport const setFillingColor = (color: Color) => \n    color.type === Grayscale ? setFillingGrayscaleColor(color.gray)\n  : color.type === RGB       ? setFillingRgbColor(color.red, color.green, color.blue)\n  : color.type === CMYK      ? setFillingCmykColor(color.cyan, color.magenta, color.yellow, color.key)\n  : error(`Invalid color: ${JSON.stringify(color)}`);\n\n// prettier-ignore\nexport const setStrokingColor = (color: Color) => \n    color.type === Grayscale ? setStrokingGrayscaleColor(color.gray)\n  : color.type === RGB       ? setStrokingRgbColor(color.red, color.green, color.blue)\n  : color.type === CMYK      ? setStrokingCmykColor(color.cyan, color.magenta, color.yellow, color.key)\n  : error(`Invalid color: ${JSON.stringify(color)}`);\n\n// prettier-ignore\nexport const componentsToColor = (comps?: number[], scale = 1) => (\n    comps?.length === 1 ? grayscale(\n      comps[0] * scale,\n    )\n  : comps?.length === 3 ? rgb(\n      comps[0] * scale, \n      comps[1] * scale, \n      comps[2] * scale,\n    )\n  : comps?.length === 4 ? cmyk(\n      comps[0] * scale, \n      comps[1] * scale, \n      comps[2] * scale, \n      comps[3] * scale,\n    )\n  : undefined\n);\n\n// prettier-ignore\nexport const colorToComponents = (color: Color) =>\n    color.type === Grayscale ? [color.gray]\n  : color.type === RGB       ? [color.red, color.green, color.blue]\n  : color.type === CMYK      ? [color.cyan, color.magenta, color.yellow, color.key]\n  : error(`Invalid color: ${JSON.stringify(color)}`);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}