{"ast":null,"code":"import CharCodes from \"./CharCodes\";\nimport { IsDelimiter } from \"./Delimiters\";\nimport { IsWhitespace } from \"./Whitespace\";\nexport var IsIrregular = new Uint8Array(256);\nfor (var idx = 0, len = 256; idx < len; idx++) {\n  IsIrregular[idx] = IsWhitespace[idx] || IsDelimiter[idx] ? 1 : 0;\n}\nIsIrregular[CharCodes.Hash] = 1;","map":{"version":3,"names":["CharCodes","IsDelimiter","IsWhitespace","IsIrregular","Uint8Array","idx","len","Hash"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/syntax/Irregular.ts"],"sourcesContent":["import CharCodes from 'src/core/syntax/CharCodes';\nimport { IsDelimiter } from 'src/core/syntax/Delimiters';\nimport { IsWhitespace } from 'src/core/syntax/Whitespace';\n\nexport const IsIrregular = new Uint8Array(256);\n\nfor (let idx = 0, len = 256; idx < len; idx++) {\n  IsIrregular[idx] = IsWhitespace[idx] || IsDelimiter[idx] ? 1 : 0;\n}\nIsIrregular[CharCodes.Hash] = 1;\n"],"mappings":"AAAA,OAAOA,SAAS;AAChB,SAASC,WAAW,QAAE;AACtB,SAASC,YAAY,QAAE;AAEvB,OAAO,IAAMC,WAAW,GAAG,IAAIC,UAAU,CAAC,GAAG,CAAC;AAE9C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,GAAG,EAAED,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;EAC7CF,WAAW,CAACE,GAAG,CAAC,GAAGH,YAAY,CAACG,GAAG,CAAC,IAAIJ,WAAW,CAACI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;;AAElEF,WAAW,CAACH,SAAS,CAACO,IAAI,CAAC,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}