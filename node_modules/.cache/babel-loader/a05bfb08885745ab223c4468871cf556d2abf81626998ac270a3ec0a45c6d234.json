{"ast":null,"code":"import { asNumber, asPDFName, asPDFNumber } from \"./objects\";\nimport { degreesToRadians } from \"./rotations\";\nimport { PDFOperator, PDFOperatorNames as Ops } from \"../core\";\n/* ==================== Clipping Path Operators ==================== */\nexport var clip = function () {\n  return PDFOperator.of(Ops.ClipNonZero);\n};\nexport var clipEvenOdd = function () {\n  return PDFOperator.of(Ops.ClipEvenOdd);\n};\n/* ==================== Graphics State Operators ==================== */\nvar cos = Math.cos,\n  sin = Math.sin,\n  tan = Math.tan;\nexport var concatTransformationMatrix = function (a, b, c, d, e, f) {\n  return PDFOperator.of(Ops.ConcatTransformationMatrix, [asPDFNumber(a), asPDFNumber(b), asPDFNumber(c), asPDFNumber(d), asPDFNumber(e), asPDFNumber(f)]);\n};\nexport var translate = function (xPos, yPos) {\n  return concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n};\nexport var scale = function (xPos, yPos) {\n  return concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n};\nexport var rotateRadians = function (angle) {\n  return concatTransformationMatrix(cos(asNumber(angle)), sin(asNumber(angle)), -sin(asNumber(angle)), cos(asNumber(angle)), 0, 0);\n};\nexport var rotateDegrees = function (angle) {\n  return rotateRadians(degreesToRadians(asNumber(angle)));\n};\nexport var skewRadians = function (xSkewAngle, ySkewAngle) {\n  return concatTransformationMatrix(1, tan(asNumber(xSkewAngle)), tan(asNumber(ySkewAngle)), 1, 0, 0);\n};\nexport var skewDegrees = function (xSkewAngle, ySkewAngle) {\n  return skewRadians(degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)));\n};\nexport var setDashPattern = function (dashArray, dashPhase) {\n  return PDFOperator.of(Ops.SetLineDashPattern, [\"[\" + dashArray.map(asPDFNumber).join(' ') + \"]\", asPDFNumber(dashPhase)]);\n};\nexport var restoreDashPattern = function () {\n  return setDashPattern([], 0);\n};\nexport var LineCapStyle;\n(function (LineCapStyle) {\n  LineCapStyle[LineCapStyle[\"Butt\"] = 0] = \"Butt\";\n  LineCapStyle[LineCapStyle[\"Round\"] = 1] = \"Round\";\n  LineCapStyle[LineCapStyle[\"Projecting\"] = 2] = \"Projecting\";\n})(LineCapStyle || (LineCapStyle = {}));\nexport var setLineCap = function (style) {\n  return PDFOperator.of(Ops.SetLineCapStyle, [asPDFNumber(style)]);\n};\nexport var LineJoinStyle;\n(function (LineJoinStyle) {\n  LineJoinStyle[LineJoinStyle[\"Miter\"] = 0] = \"Miter\";\n  LineJoinStyle[LineJoinStyle[\"Round\"] = 1] = \"Round\";\n  LineJoinStyle[LineJoinStyle[\"Bevel\"] = 2] = \"Bevel\";\n})(LineJoinStyle || (LineJoinStyle = {}));\nexport var setLineJoin = function (style) {\n  return PDFOperator.of(Ops.SetLineJoinStyle, [asPDFNumber(style)]);\n};\nexport var setGraphicsState = function (state) {\n  return PDFOperator.of(Ops.SetGraphicsStateParams, [asPDFName(state)]);\n};\nexport var pushGraphicsState = function () {\n  return PDFOperator.of(Ops.PushGraphicsState);\n};\nexport var popGraphicsState = function () {\n  return PDFOperator.of(Ops.PopGraphicsState);\n};\nexport var setLineWidth = function (width) {\n  return PDFOperator.of(Ops.SetLineWidth, [asPDFNumber(width)]);\n};\n/* ==================== Path Construction Operators ==================== */\nexport var appendBezierCurve = function (x1, y1, x2, y2, x3, y3) {\n  return PDFOperator.of(Ops.AppendBezierCurve, [asPDFNumber(x1), asPDFNumber(y1), asPDFNumber(x2), asPDFNumber(y2), asPDFNumber(x3), asPDFNumber(y3)]);\n};\nexport var appendQuadraticCurve = function (x1, y1, x2, y2) {\n  return PDFOperator.of(Ops.CurveToReplicateInitialPoint, [asPDFNumber(x1), asPDFNumber(y1), asPDFNumber(x2), asPDFNumber(y2)]);\n};\nexport var closePath = function () {\n  return PDFOperator.of(Ops.ClosePath);\n};\nexport var moveTo = function (xPos, yPos) {\n  return PDFOperator.of(Ops.MoveTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\nexport var lineTo = function (xPos, yPos) {\n  return PDFOperator.of(Ops.LineTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\nexport var rectangle = function (xPos, yPos, width, height) {\n  return PDFOperator.of(Ops.AppendRectangle, [asPDFNumber(xPos), asPDFNumber(yPos), asPDFNumber(width), asPDFNumber(height)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\nexport var square = function (xPos, yPos, size) {\n  return rectangle(xPos, yPos, size, size);\n};\n/* ==================== Path Painting Operators ==================== */\nexport var stroke = function () {\n  return PDFOperator.of(Ops.StrokePath);\n};\nexport var fill = function () {\n  return PDFOperator.of(Ops.FillNonZero);\n};\nexport var fillAndStroke = function () {\n  return PDFOperator.of(Ops.FillNonZeroAndStroke);\n};\nexport var endPath = function () {\n  return PDFOperator.of(Ops.EndPath);\n};\n/* ==================== Text Positioning Operators ==================== */\nexport var nextLine = function () {\n  return PDFOperator.of(Ops.NextLine);\n};\nexport var moveText = function (x, y) {\n  return PDFOperator.of(Ops.MoveText, [asPDFNumber(x), asPDFNumber(y)]);\n};\n/* ==================== Text Showing Operators ==================== */\nexport var showText = function (text) {\n  return PDFOperator.of(Ops.ShowText, [text]);\n};\n/* ==================== Text State Operators ==================== */\nexport var beginText = function () {\n  return PDFOperator.of(Ops.BeginText);\n};\nexport var endText = function () {\n  return PDFOperator.of(Ops.EndText);\n};\nexport var setFontAndSize = function (name, size) {\n  return PDFOperator.of(Ops.SetFontAndSize, [asPDFName(name), asPDFNumber(size)]);\n};\nexport var setCharacterSpacing = function (spacing) {\n  return PDFOperator.of(Ops.SetCharacterSpacing, [asPDFNumber(spacing)]);\n};\nexport var setWordSpacing = function (spacing) {\n  return PDFOperator.of(Ops.SetWordSpacing, [asPDFNumber(spacing)]);\n};\n/** @param squeeze horizontal character spacing */\nexport var setCharacterSqueeze = function (squeeze) {\n  return PDFOperator.of(Ops.SetTextHorizontalScaling, [asPDFNumber(squeeze)]);\n};\nexport var setLineHeight = function (lineHeight) {\n  return PDFOperator.of(Ops.SetTextLineHeight, [asPDFNumber(lineHeight)]);\n};\nexport var setTextRise = function (rise) {\n  return PDFOperator.of(Ops.SetTextRise, [asPDFNumber(rise)]);\n};\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n  TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n  TextRenderingMode[TextRenderingMode[\"Outline\"] = 1] = \"Outline\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutline\"] = 2] = \"FillAndOutline\";\n  TextRenderingMode[TextRenderingMode[\"Invisible\"] = 3] = \"Invisible\";\n  TextRenderingMode[TextRenderingMode[\"FillAndClip\"] = 4] = \"FillAndClip\";\n  TextRenderingMode[TextRenderingMode[\"OutlineAndClip\"] = 5] = \"OutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutlineAndClip\"] = 6] = \"FillAndOutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\nexport var setTextRenderingMode = function (mode) {\n  return PDFOperator.of(Ops.SetTextRenderingMode, [asPDFNumber(mode)]);\n};\nexport var setTextMatrix = function (a, b, c, d, e, f) {\n  return PDFOperator.of(Ops.SetTextMatrix, [asPDFNumber(a), asPDFNumber(b), asPDFNumber(c), asPDFNumber(d), asPDFNumber(e), asPDFNumber(f)]);\n};\nexport var rotateAndSkewTextRadiansAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return setTextMatrix(cos(asNumber(rotationAngle)), sin(asNumber(rotationAngle)) + tan(asNumber(xSkewAngle)), -sin(asNumber(rotationAngle)) + tan(asNumber(ySkewAngle)), cos(asNumber(rotationAngle)), x, y);\n};\nexport var rotateAndSkewTextDegreesAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return rotateAndSkewTextRadiansAndTranslate(degreesToRadians(asNumber(rotationAngle)), degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)), x, y);\n};\n/* ==================== XObject Operator ==================== */\nexport var drawObject = function (name) {\n  return PDFOperator.of(Ops.DrawObject, [asPDFName(name)]);\n};\n/* ==================== Color Operators ==================== */\nexport var setFillingGrayscaleColor = function (gray) {\n  return PDFOperator.of(Ops.NonStrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setStrokingGrayscaleColor = function (gray) {\n  return PDFOperator.of(Ops.StrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setFillingRgbColor = function (red, green, blue) {\n  return PDFOperator.of(Ops.NonStrokingColorRgb, [asPDFNumber(red), asPDFNumber(green), asPDFNumber(blue)]);\n};\nexport var setStrokingRgbColor = function (red, green, blue) {\n  return PDFOperator.of(Ops.StrokingColorRgb, [asPDFNumber(red), asPDFNumber(green), asPDFNumber(blue)]);\n};\nexport var setFillingCmykColor = function (cyan, magenta, yellow, key) {\n  return PDFOperator.of(Ops.NonStrokingColorCmyk, [asPDFNumber(cyan), asPDFNumber(magenta), asPDFNumber(yellow), asPDFNumber(key)]);\n};\nexport var setStrokingCmykColor = function (cyan, magenta, yellow, key) {\n  return PDFOperator.of(Ops.StrokingColorCmyk, [asPDFNumber(cyan), asPDFNumber(magenta), asPDFNumber(yellow), asPDFNumber(key)]);\n};\n/* ==================== Marked Content Operators ==================== */\nexport var beginMarkedContent = function (tag) {\n  return PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\n};\nexport var endMarkedContent = function () {\n  return PDFOperator.of(Ops.EndMarkedContent);\n};","map":{"version":3,"names":["asNumber","asPDFName","asPDFNumber","degreesToRadians","PDFOperator","PDFOperatorNames","Ops","clip","of","ClipNonZero","clipEvenOdd","ClipEvenOdd","cos","Math","sin","tan","concatTransformationMatrix","a","b","c","d","e","f","ConcatTransformationMatrix","translate","xPos","yPos","scale","rotateRadians","angle","rotateDegrees","skewRadians","xSkewAngle","ySkewAngle","skewDegrees","setDashPattern","dashArray","dashPhase","SetLineDashPattern","map","join","restoreDashPattern","LineCapStyle","setLineCap","style","SetLineCapStyle","LineJoinStyle","setLineJoin","SetLineJoinStyle","setGraphicsState","state","SetGraphicsStateParams","pushGraphicsState","PushGraphicsState","popGraphicsState","PopGraphicsState","setLineWidth","width","SetLineWidth","appendBezierCurve","x1","y1","x2","y2","x3","y3","AppendBezierCurve","appendQuadraticCurve","CurveToReplicateInitialPoint","closePath","ClosePath","moveTo","MoveTo","lineTo","LineTo","rectangle","height","AppendRectangle","square","size","stroke","StrokePath","fill","FillNonZero","fillAndStroke","FillNonZeroAndStroke","endPath","EndPath","nextLine","NextLine","moveText","x","y","MoveText","showText","text","ShowText","beginText","BeginText","endText","EndText","setFontAndSize","name","SetFontAndSize","setCharacterSpacing","spacing","SetCharacterSpacing","setWordSpacing","SetWordSpacing","setCharacterSqueeze","squeeze","SetTextHorizontalScaling","setLineHeight","lineHeight","SetTextLineHeight","setTextRise","rise","SetTextRise","TextRenderingMode","setTextRenderingMode","mode","SetTextRenderingMode","setTextMatrix","SetTextMatrix","rotateAndSkewTextRadiansAndTranslate","rotationAngle","rotateAndSkewTextDegreesAndTranslate","drawObject","DrawObject","setFillingGrayscaleColor","gray","NonStrokingColorGray","setStrokingGrayscaleColor","StrokingColorGray","setFillingRgbColor","red","green","blue","NonStrokingColorRgb","setStrokingRgbColor","StrokingColorRgb","setFillingCmykColor","cyan","magenta","yellow","key","NonStrokingColorCmyk","setStrokingCmykColor","StrokingColorCmyk","beginMarkedContent","tag","BeginMarkedContent","endMarkedContent","EndMarkedContent"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/api/operators.ts"],"sourcesContent":["import { asNumber, asPDFName, asPDFNumber } from 'src/api/objects';\nimport { degreesToRadians } from 'src/api/rotations';\nimport {\n  PDFHexString,\n  PDFName,\n  PDFNumber,\n  PDFOperator,\n  PDFOperatorNames as Ops,\n} from 'src/core';\n\n/* ==================== Clipping Path Operators ==================== */\n\nexport const clip = () => PDFOperator.of(Ops.ClipNonZero);\nexport const clipEvenOdd = () => PDFOperator.of(Ops.ClipEvenOdd);\n\n/* ==================== Graphics State Operators ==================== */\n\nconst { cos, sin, tan } = Math;\n\nexport const concatTransformationMatrix = (\n  a: number | PDFNumber,\n  b: number | PDFNumber,\n  c: number | PDFNumber,\n  d: number | PDFNumber,\n  e: number | PDFNumber,\n  f: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.ConcatTransformationMatrix, [\n    asPDFNumber(a),\n    asPDFNumber(b),\n    asPDFNumber(c),\n    asPDFNumber(d),\n    asPDFNumber(e),\n    asPDFNumber(f),\n  ]);\n\nexport const translate = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n\nexport const scale = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n\nexport const rotateRadians = (angle: number | PDFNumber) =>\n  concatTransformationMatrix(\n    cos(asNumber(angle)),\n    sin(asNumber(angle)),\n    -sin(asNumber(angle)),\n    cos(asNumber(angle)),\n    0,\n    0,\n  );\n\nexport const rotateDegrees = (angle: number | PDFNumber) =>\n  rotateRadians(degreesToRadians(asNumber(angle)));\n\nexport const skewRadians = (\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n) =>\n  concatTransformationMatrix(\n    1,\n    tan(asNumber(xSkewAngle)),\n    tan(asNumber(ySkewAngle)),\n    1,\n    0,\n    0,\n  );\n\nexport const skewDegrees = (\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n) =>\n  skewRadians(\n    degreesToRadians(asNumber(xSkewAngle)),\n    degreesToRadians(asNumber(ySkewAngle)),\n  );\n\nexport const setDashPattern = (\n  dashArray: (number | PDFNumber)[],\n  dashPhase: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.SetLineDashPattern, [\n    `[${dashArray.map(asPDFNumber).join(' ')}]`,\n    asPDFNumber(dashPhase),\n  ]);\n\nexport const restoreDashPattern = () => setDashPattern([], 0);\n\nexport enum LineCapStyle {\n  Butt = 0,\n  Round = 1,\n  Projecting = 2,\n}\n\nexport const setLineCap = (style: LineCapStyle) =>\n  PDFOperator.of(Ops.SetLineCapStyle, [asPDFNumber(style)]);\n\nexport enum LineJoinStyle {\n  Miter = 0,\n  Round = 1,\n  Bevel = 2,\n}\n\nexport const setLineJoin = (style: LineJoinStyle) =>\n  PDFOperator.of(Ops.SetLineJoinStyle, [asPDFNumber(style)]);\n\nexport const setGraphicsState = (state: string | PDFName) =>\n  PDFOperator.of(Ops.SetGraphicsStateParams, [asPDFName(state)]);\n\nexport const pushGraphicsState = () => PDFOperator.of(Ops.PushGraphicsState);\n\nexport const popGraphicsState = () => PDFOperator.of(Ops.PopGraphicsState);\n\nexport const setLineWidth = (width: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetLineWidth, [asPDFNumber(width)]);\n\n/* ==================== Path Construction Operators ==================== */\n\nexport const appendBezierCurve = (\n  x1: number | PDFNumber,\n  y1: number | PDFNumber,\n  x2: number | PDFNumber,\n  y2: number | PDFNumber,\n  x3: number | PDFNumber,\n  y3: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.AppendBezierCurve, [\n    asPDFNumber(x1),\n    asPDFNumber(y1),\n    asPDFNumber(x2),\n    asPDFNumber(y2),\n    asPDFNumber(x3),\n    asPDFNumber(y3),\n  ]);\n\nexport const appendQuadraticCurve = (\n  x1: number | PDFNumber,\n  y1: number | PDFNumber,\n  x2: number | PDFNumber,\n  y2: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.CurveToReplicateInitialPoint, [\n    asPDFNumber(x1),\n    asPDFNumber(y1),\n    asPDFNumber(x2),\n    asPDFNumber(y2),\n  ]);\n\nexport const closePath = () => PDFOperator.of(Ops.ClosePath);\n\nexport const moveTo = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  PDFOperator.of(Ops.MoveTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n\nexport const lineTo = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  PDFOperator.of(Ops.LineTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\nexport const rectangle = (\n  xPos: number | PDFNumber,\n  yPos: number | PDFNumber,\n  width: number | PDFNumber,\n  height: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.AppendRectangle, [\n    asPDFNumber(xPos),\n    asPDFNumber(yPos),\n    asPDFNumber(width),\n    asPDFNumber(height),\n  ]);\n\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\nexport const square = (xPos: number, yPos: number, size: number) =>\n  rectangle(xPos, yPos, size, size);\n\n/* ==================== Path Painting Operators ==================== */\n\nexport const stroke = () => PDFOperator.of(Ops.StrokePath);\n\nexport const fill = () => PDFOperator.of(Ops.FillNonZero);\n\nexport const fillAndStroke = () => PDFOperator.of(Ops.FillNonZeroAndStroke);\n\nexport const endPath = () => PDFOperator.of(Ops.EndPath);\n\n/* ==================== Text Positioning Operators ==================== */\n\nexport const nextLine = () => PDFOperator.of(Ops.NextLine);\n\nexport const moveText = (x: number | PDFNumber, y: number | PDFNumber) =>\n  PDFOperator.of(Ops.MoveText, [asPDFNumber(x), asPDFNumber(y)]);\n\n/* ==================== Text Showing Operators ==================== */\n\nexport const showText = (text: PDFHexString) =>\n  PDFOperator.of(Ops.ShowText, [text]);\n\n/* ==================== Text State Operators ==================== */\n\nexport const beginText = () => PDFOperator.of(Ops.BeginText);\nexport const endText = () => PDFOperator.of(Ops.EndText);\n\nexport const setFontAndSize = (\n  name: string | PDFName,\n  size: number | PDFNumber,\n) => PDFOperator.of(Ops.SetFontAndSize, [asPDFName(name), asPDFNumber(size)]);\n\nexport const setCharacterSpacing = (spacing: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetCharacterSpacing, [asPDFNumber(spacing)]);\n\nexport const setWordSpacing = (spacing: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetWordSpacing, [asPDFNumber(spacing)]);\n\n/** @param squeeze horizontal character spacing */\nexport const setCharacterSqueeze = (squeeze: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetTextHorizontalScaling, [asPDFNumber(squeeze)]);\n\nexport const setLineHeight = (lineHeight: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetTextLineHeight, [asPDFNumber(lineHeight)]);\n\nexport const setTextRise = (rise: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetTextRise, [asPDFNumber(rise)]);\n\nexport enum TextRenderingMode {\n  Fill = 0,\n  Outline = 1,\n  FillAndOutline = 2,\n  Invisible = 3,\n  FillAndClip = 4,\n  OutlineAndClip = 5,\n  FillAndOutlineAndClip = 6,\n  Clip = 7,\n}\n\nexport const setTextRenderingMode = (mode: TextRenderingMode) =>\n  PDFOperator.of(Ops.SetTextRenderingMode, [asPDFNumber(mode)]);\n\nexport const setTextMatrix = (\n  a: number | PDFNumber,\n  b: number | PDFNumber,\n  c: number | PDFNumber,\n  d: number | PDFNumber,\n  e: number | PDFNumber,\n  f: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.SetTextMatrix, [\n    asPDFNumber(a),\n    asPDFNumber(b),\n    asPDFNumber(c),\n    asPDFNumber(d),\n    asPDFNumber(e),\n    asPDFNumber(f),\n  ]);\n\nexport const rotateAndSkewTextRadiansAndTranslate = (\n  rotationAngle: number | PDFNumber,\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n  x: number | PDFNumber,\n  y: number | PDFNumber,\n) =>\n  setTextMatrix(\n    cos(asNumber(rotationAngle)),\n    sin(asNumber(rotationAngle)) + tan(asNumber(xSkewAngle)),\n    -sin(asNumber(rotationAngle)) + tan(asNumber(ySkewAngle)),\n    cos(asNumber(rotationAngle)),\n    x,\n    y,\n  );\n\nexport const rotateAndSkewTextDegreesAndTranslate = (\n  rotationAngle: number | PDFNumber,\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n  x: number | PDFNumber,\n  y: number | PDFNumber,\n) =>\n  rotateAndSkewTextRadiansAndTranslate(\n    degreesToRadians(asNumber(rotationAngle)),\n    degreesToRadians(asNumber(xSkewAngle)),\n    degreesToRadians(asNumber(ySkewAngle)),\n    x,\n    y,\n  );\n\n/* ==================== XObject Operator ==================== */\n\nexport const drawObject = (name: string | PDFName) =>\n  PDFOperator.of(Ops.DrawObject, [asPDFName(name)]);\n\n/* ==================== Color Operators ==================== */\n\nexport const setFillingGrayscaleColor = (gray: number | PDFNumber) =>\n  PDFOperator.of(Ops.NonStrokingColorGray, [asPDFNumber(gray)]);\n\nexport const setStrokingGrayscaleColor = (gray: number | PDFNumber) =>\n  PDFOperator.of(Ops.StrokingColorGray, [asPDFNumber(gray)]);\n\nexport const setFillingRgbColor = (\n  red: number | PDFNumber,\n  green: number | PDFNumber,\n  blue: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.NonStrokingColorRgb, [\n    asPDFNumber(red),\n    asPDFNumber(green),\n    asPDFNumber(blue),\n  ]);\n\nexport const setStrokingRgbColor = (\n  red: number | PDFNumber,\n  green: number | PDFNumber,\n  blue: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.StrokingColorRgb, [\n    asPDFNumber(red),\n    asPDFNumber(green),\n    asPDFNumber(blue),\n  ]);\n\nexport const setFillingCmykColor = (\n  cyan: number | PDFNumber,\n  magenta: number | PDFNumber,\n  yellow: number | PDFNumber,\n  key: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.NonStrokingColorCmyk, [\n    asPDFNumber(cyan),\n    asPDFNumber(magenta),\n    asPDFNumber(yellow),\n    asPDFNumber(key),\n  ]);\n\nexport const setStrokingCmykColor = (\n  cyan: number | PDFNumber,\n  magenta: number | PDFNumber,\n  yellow: number | PDFNumber,\n  key: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.StrokingColorCmyk, [\n    asPDFNumber(cyan),\n    asPDFNumber(magenta),\n    asPDFNumber(yellow),\n    asPDFNumber(key),\n  ]);\n\n/* ==================== Marked Content Operators ==================== */\n\nexport const beginMarkedContent = (tag: string | PDFName) =>\n  PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\n\nexport const endMarkedContent = () => PDFOperator.of(Ops.EndMarkedContent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}