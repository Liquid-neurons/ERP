{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar PDFNumber_1 = tslib_1.__importDefault(require(\"../objects/PDFNumber\"));\nvar PDFString_1 = tslib_1.__importDefault(require(\"../objects/PDFString\"));\nvar PDFHexString_1 = tslib_1.__importDefault(require(\"../objects/PDFHexString\"));\nvar PDFName_1 = tslib_1.__importDefault(require(\"../objects/PDFName\"));\nvar PDFAcroTerminal_1 = tslib_1.__importDefault(require(\"./PDFAcroTerminal\"));\nvar PDFAcroText = /** @class */function (_super) {\n  tslib_1.__extends(PDFAcroText, _super);\n  function PDFAcroText() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFAcroText.prototype.MaxLen = function () {\n    var maxLen = this.dict.lookup(PDFName_1.default.of('MaxLen'));\n    if (maxLen instanceof PDFNumber_1.default) return maxLen;\n    return undefined;\n  };\n  PDFAcroText.prototype.Q = function () {\n    var q = this.dict.lookup(PDFName_1.default.of('Q'));\n    if (q instanceof PDFNumber_1.default) return q;\n    return undefined;\n  };\n  PDFAcroText.prototype.setMaxLength = function (maxLength) {\n    this.dict.set(PDFName_1.default.of('MaxLen'), PDFNumber_1.default.of(maxLength));\n  };\n  PDFAcroText.prototype.removeMaxLength = function () {\n    this.dict.delete(PDFName_1.default.of('MaxLen'));\n  };\n  PDFAcroText.prototype.getMaxLength = function () {\n    var _a;\n    return (_a = this.MaxLen()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n  PDFAcroText.prototype.setQuadding = function (quadding) {\n    this.dict.set(PDFName_1.default.of('Q'), PDFNumber_1.default.of(quadding));\n  };\n  PDFAcroText.prototype.getQuadding = function () {\n    var _a;\n    return (_a = this.Q()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n  PDFAcroText.prototype.setValue = function (value) {\n    this.dict.set(PDFName_1.default.of('V'), value);\n    // const widgets = this.getWidgets();\n    // for (let idx = 0, len = widgets.length; idx < len; idx++) {\n    //   const widget = widgets[idx];\n    //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n    //   widget.setAppearanceState(state);\n    // }\n  };\n  PDFAcroText.prototype.removeValue = function () {\n    this.dict.delete(PDFName_1.default.of('V'));\n  };\n  PDFAcroText.prototype.getValue = function () {\n    var v = this.V();\n    if (v instanceof PDFString_1.default || v instanceof PDFHexString_1.default) return v;\n    return undefined;\n  };\n  PDFAcroText.fromDict = function (dict, ref) {\n    return new PDFAcroText(dict, ref);\n  };\n  PDFAcroText.create = function (context) {\n    var dict = context.obj({\n      FT: 'Tx',\n      Kids: []\n    });\n    var ref = context.register(dict);\n    return new PDFAcroText(dict, ref);\n  };\n  return PDFAcroText;\n}(PDFAcroTerminal_1.default);\nexports.default = PDFAcroText;","map":{"version":3,"names":["PDFNumber_1","tslib_1","__importDefault","require","PDFString_1","PDFHexString_1","PDFName_1","PDFAcroTerminal_1","PDFAcroText","_super","__extends","prototype","MaxLen","maxLen","dict","lookup","default","of","undefined","Q","q","setMaxLength","maxLength","set","removeMaxLength","delete","getMaxLength","_a","asNumber","setQuadding","quadding","getQuadding","setValue","value","removeValue","getValue","v","V","fromDict","ref","create","context","obj","FT","Kids","register","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/acroform/PDFAcroText.ts"],"sourcesContent":["import PDFContext from 'src/core/PDFContext';\nimport PDFDict from 'src/core/objects/PDFDict';\nimport PDFNumber from 'src/core/objects/PDFNumber';\nimport PDFString from 'src/core/objects/PDFString';\nimport PDFHexString from 'src/core/objects/PDFHexString';\nimport PDFName from 'src/core/objects/PDFName';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport PDFAcroTerminal from 'src/core/acroform/PDFAcroTerminal';\n\nclass PDFAcroText extends PDFAcroTerminal {\n  static fromDict = (dict: PDFDict, ref: PDFRef) => new PDFAcroText(dict, ref);\n\n  static create = (context: PDFContext) => {\n    const dict = context.obj({\n      FT: 'Tx',\n      Kids: [],\n    });\n    const ref = context.register(dict);\n    return new PDFAcroText(dict, ref);\n  };\n\n  MaxLen(): PDFNumber | undefined {\n    const maxLen = this.dict.lookup(PDFName.of('MaxLen'));\n    if (maxLen instanceof PDFNumber) return maxLen;\n    return undefined;\n  }\n\n  Q(): PDFNumber | undefined {\n    const q = this.dict.lookup(PDFName.of('Q'));\n    if (q instanceof PDFNumber) return q;\n    return undefined;\n  }\n\n  setMaxLength(maxLength: number) {\n    this.dict.set(PDFName.of('MaxLen'), PDFNumber.of(maxLength));\n  }\n\n  removeMaxLength() {\n    this.dict.delete(PDFName.of('MaxLen'));\n  }\n\n  getMaxLength(): number | undefined {\n    return this.MaxLen()?.asNumber();\n  }\n\n  setQuadding(quadding: 0 | 1 | 2) {\n    this.dict.set(PDFName.of('Q'), PDFNumber.of(quadding));\n  }\n\n  getQuadding(): number | undefined {\n    return this.Q()?.asNumber();\n  }\n\n  setValue(value: PDFHexString | PDFString) {\n    this.dict.set(PDFName.of('V'), value);\n\n    // const widgets = this.getWidgets();\n    // for (let idx = 0, len = widgets.length; idx < len; idx++) {\n    //   const widget = widgets[idx];\n    //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n    //   widget.setAppearanceState(state);\n    // }\n  }\n\n  removeValue() {\n    this.dict.delete(PDFName.of('V'));\n  }\n\n  getValue(): PDFString | PDFHexString | undefined {\n    const v = this.V();\n    if (v instanceof PDFString || v instanceof PDFHexString) return v;\n    return undefined;\n  }\n}\n\nexport default PDFAcroText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}