{"ast":null,"code":"import { decompressJson } from './utils';\nimport CourierBoldCompressed from './Courier-Bold.compressed.json';\nimport CourierBoldObliqueCompressed from './Courier-BoldOblique.compressed.json';\nimport CourierObliqueCompressed from './Courier-Oblique.compressed.json';\nimport CourierCompressed from './Courier.compressed.json';\nimport HelveticaBoldCompressed from './Helvetica-Bold.compressed.json';\nimport HelveticaBoldObliqueCompressed from './Helvetica-BoldOblique.compressed.json';\nimport HelveticaObliqueCompressed from './Helvetica-Oblique.compressed.json';\nimport HelveticaCompressed from './Helvetica.compressed.json';\nimport TimesBoldCompressed from './Times-Bold.compressed.json';\nimport TimesBoldItalicCompressed from './Times-BoldItalic.compressed.json';\nimport TimesItalicCompressed from './Times-Italic.compressed.json';\nimport TimesRomanCompressed from './Times-Roman.compressed.json';\nimport SymbolCompressed from './Symbol.compressed.json';\nimport ZapfDingbatsCompressed from './ZapfDingbats.compressed.json';\n// prettier-ignore\nvar compressedJsonForFontName = {\n  'Courier': CourierCompressed,\n  'Courier-Bold': CourierBoldCompressed,\n  'Courier-Oblique': CourierObliqueCompressed,\n  'Courier-BoldOblique': CourierBoldObliqueCompressed,\n  'Helvetica': HelveticaCompressed,\n  'Helvetica-Bold': HelveticaBoldCompressed,\n  'Helvetica-Oblique': HelveticaObliqueCompressed,\n  'Helvetica-BoldOblique': HelveticaBoldObliqueCompressed,\n  'Times-Roman': TimesRomanCompressed,\n  'Times-Bold': TimesBoldCompressed,\n  'Times-Italic': TimesItalicCompressed,\n  'Times-BoldItalic': TimesBoldItalicCompressed,\n  'Symbol': SymbolCompressed,\n  'ZapfDingbats': ZapfDingbatsCompressed\n};\nexport var FontNames;\n(function (FontNames) {\n  FontNames[\"Courier\"] = \"Courier\";\n  FontNames[\"CourierBold\"] = \"Courier-Bold\";\n  FontNames[\"CourierOblique\"] = \"Courier-Oblique\";\n  FontNames[\"CourierBoldOblique\"] = \"Courier-BoldOblique\";\n  FontNames[\"Helvetica\"] = \"Helvetica\";\n  FontNames[\"HelveticaBold\"] = \"Helvetica-Bold\";\n  FontNames[\"HelveticaOblique\"] = \"Helvetica-Oblique\";\n  FontNames[\"HelveticaBoldOblique\"] = \"Helvetica-BoldOblique\";\n  FontNames[\"TimesRoman\"] = \"Times-Roman\";\n  FontNames[\"TimesRomanBold\"] = \"Times-Bold\";\n  FontNames[\"TimesRomanItalic\"] = \"Times-Italic\";\n  FontNames[\"TimesRomanBoldItalic\"] = \"Times-BoldItalic\";\n  FontNames[\"Symbol\"] = \"Symbol\";\n  FontNames[\"ZapfDingbats\"] = \"ZapfDingbats\";\n})(FontNames || (FontNames = {}));\nvar fontCache = {};\nvar Font = /** @class */function () {\n  function Font() {\n    var _this = this;\n    this.getWidthOfGlyph = function (glyphName) {\n      return _this.CharWidths[glyphName];\n    };\n    this.getXAxisKerningForPair = function (leftGlyphName, rightGlyphName) {\n      return (_this.KernPairXAmounts[leftGlyphName] || {})[rightGlyphName];\n    };\n  }\n  Font.load = function (fontName) {\n    var cachedFont = fontCache[fontName];\n    if (cachedFont) return cachedFont;\n    var json = decompressJson(compressedJsonForFontName[fontName]);\n    var font = Object.assign(new Font(), JSON.parse(json));\n    font.CharWidths = font.CharMetrics.reduce(function (acc, metric) {\n      acc[metric.N] = metric.WX;\n      return acc;\n    }, {});\n    font.KernPairXAmounts = font.KernPairs.reduce(function (acc, _a) {\n      var name1 = _a[0],\n        name2 = _a[1],\n        width = _a[2];\n      if (!acc[name1]) acc[name1] = {};\n      acc[name1][name2] = width;\n      return acc;\n    }, {});\n    fontCache[fontName] = font;\n    return font;\n  };\n  return Font;\n}();\nexport { Font };","map":{"version":3,"names":["decompressJson","CourierBoldCompressed","CourierBoldObliqueCompressed","CourierObliqueCompressed","CourierCompressed","HelveticaBoldCompressed","HelveticaBoldObliqueCompressed","HelveticaObliqueCompressed","HelveticaCompressed","TimesBoldCompressed","TimesBoldItalicCompressed","TimesItalicCompressed","TimesRomanCompressed","SymbolCompressed","ZapfDingbatsCompressed","compressedJsonForFontName","FontNames","fontCache","Font","_this","getWidthOfGlyph","glyphName","CharWidths","getXAxisKerningForPair","leftGlyphName","rightGlyphName","KernPairXAmounts","load","fontName","cachedFont","json","font","Object","assign","JSON","parse","CharMetrics","reduce","acc","metric","N","WX","KernPairs","_a","name1","name2","width"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/@pdf-lib/standard-fonts/es/Font.js"],"sourcesContent":["import { decompressJson } from './utils';\nimport CourierBoldCompressed from './Courier-Bold.compressed.json';\nimport CourierBoldObliqueCompressed from './Courier-BoldOblique.compressed.json';\nimport CourierObliqueCompressed from './Courier-Oblique.compressed.json';\nimport CourierCompressed from './Courier.compressed.json';\nimport HelveticaBoldCompressed from './Helvetica-Bold.compressed.json';\nimport HelveticaBoldObliqueCompressed from './Helvetica-BoldOblique.compressed.json';\nimport HelveticaObliqueCompressed from './Helvetica-Oblique.compressed.json';\nimport HelveticaCompressed from './Helvetica.compressed.json';\nimport TimesBoldCompressed from './Times-Bold.compressed.json';\nimport TimesBoldItalicCompressed from './Times-BoldItalic.compressed.json';\nimport TimesItalicCompressed from './Times-Italic.compressed.json';\nimport TimesRomanCompressed from './Times-Roman.compressed.json';\nimport SymbolCompressed from './Symbol.compressed.json';\nimport ZapfDingbatsCompressed from './ZapfDingbats.compressed.json';\n// prettier-ignore\nvar compressedJsonForFontName = {\n    'Courier': CourierCompressed,\n    'Courier-Bold': CourierBoldCompressed,\n    'Courier-Oblique': CourierObliqueCompressed,\n    'Courier-BoldOblique': CourierBoldObliqueCompressed,\n    'Helvetica': HelveticaCompressed,\n    'Helvetica-Bold': HelveticaBoldCompressed,\n    'Helvetica-Oblique': HelveticaObliqueCompressed,\n    'Helvetica-BoldOblique': HelveticaBoldObliqueCompressed,\n    'Times-Roman': TimesRomanCompressed,\n    'Times-Bold': TimesBoldCompressed,\n    'Times-Italic': TimesItalicCompressed,\n    'Times-BoldItalic': TimesBoldItalicCompressed,\n    'Symbol': SymbolCompressed,\n    'ZapfDingbats': ZapfDingbatsCompressed,\n};\nexport var FontNames;\n(function (FontNames) {\n    FontNames[\"Courier\"] = \"Courier\";\n    FontNames[\"CourierBold\"] = \"Courier-Bold\";\n    FontNames[\"CourierOblique\"] = \"Courier-Oblique\";\n    FontNames[\"CourierBoldOblique\"] = \"Courier-BoldOblique\";\n    FontNames[\"Helvetica\"] = \"Helvetica\";\n    FontNames[\"HelveticaBold\"] = \"Helvetica-Bold\";\n    FontNames[\"HelveticaOblique\"] = \"Helvetica-Oblique\";\n    FontNames[\"HelveticaBoldOblique\"] = \"Helvetica-BoldOblique\";\n    FontNames[\"TimesRoman\"] = \"Times-Roman\";\n    FontNames[\"TimesRomanBold\"] = \"Times-Bold\";\n    FontNames[\"TimesRomanItalic\"] = \"Times-Italic\";\n    FontNames[\"TimesRomanBoldItalic\"] = \"Times-BoldItalic\";\n    FontNames[\"Symbol\"] = \"Symbol\";\n    FontNames[\"ZapfDingbats\"] = \"ZapfDingbats\";\n})(FontNames || (FontNames = {}));\nvar fontCache = {};\nvar Font = /** @class */ (function () {\n    function Font() {\n        var _this = this;\n        this.getWidthOfGlyph = function (glyphName) {\n            return _this.CharWidths[glyphName];\n        };\n        this.getXAxisKerningForPair = function (leftGlyphName, rightGlyphName) {\n            return (_this.KernPairXAmounts[leftGlyphName] || {})[rightGlyphName];\n        };\n    }\n    Font.load = function (fontName) {\n        var cachedFont = fontCache[fontName];\n        if (cachedFont)\n            return cachedFont;\n        var json = decompressJson(compressedJsonForFontName[fontName]);\n        var font = Object.assign(new Font(), JSON.parse(json));\n        font.CharWidths = font.CharMetrics.reduce(function (acc, metric) {\n            acc[metric.N] = metric.WX;\n            return acc;\n        }, {});\n        font.KernPairXAmounts = font.KernPairs.reduce(function (acc, _a) {\n            var name1 = _a[0], name2 = _a[1], width = _a[2];\n            if (!acc[name1])\n                acc[name1] = {};\n            acc[name1][name2] = width;\n            return acc;\n        }, {});\n        fontCache[fontName] = font;\n        return font;\n    };\n    return Font;\n}());\nexport { Font };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}