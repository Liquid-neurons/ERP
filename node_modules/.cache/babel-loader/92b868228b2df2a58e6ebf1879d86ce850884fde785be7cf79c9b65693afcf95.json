{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar index_1 = require(\"../../utils/index\");\nvar PDFObject_1 = tslib_1.__importDefault(require(\"./PDFObject\"));\nvar PDFNumber = /** @class */function (_super) {\n  tslib_1.__extends(PDFNumber, _super);\n  function PDFNumber(value) {\n    var _this = _super.call(this) || this;\n    _this.numberValue = value;\n    _this.stringValue = index_1.numberToString(value);\n    return _this;\n  }\n  PDFNumber.prototype.asNumber = function () {\n    return this.numberValue;\n  };\n  /** @deprecated in favor of [[PDFNumber.asNumber]] */\n  PDFNumber.prototype.value = function () {\n    return this.numberValue;\n  };\n  PDFNumber.prototype.clone = function () {\n    return PDFNumber.of(this.numberValue);\n  };\n  PDFNumber.prototype.toString = function () {\n    return this.stringValue;\n  };\n  PDFNumber.prototype.sizeInBytes = function () {\n    return this.stringValue.length;\n  };\n  PDFNumber.prototype.copyBytesInto = function (buffer, offset) {\n    offset += index_1.copyStringIntoBuffer(this.stringValue, buffer, offset);\n    return this.stringValue.length;\n  };\n  PDFNumber.of = function (value) {\n    return new PDFNumber(value);\n  };\n  return PDFNumber;\n}(PDFObject_1.default);\nexports.default = PDFNumber;","map":{"version":3,"names":["index_1","require","PDFObject_1","tslib_1","__importDefault","PDFNumber","_super","__extends","value","_this","call","numberValue","stringValue","numberToString","prototype","asNumber","clone","of","toString","sizeInBytes","length","copyBytesInto","buffer","offset","copyStringIntoBuffer","default","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/objects/PDFNumber.ts"],"sourcesContent":["import { copyStringIntoBuffer, numberToString } from 'src/utils/index';\n\nimport PDFObject from 'src/core/objects/PDFObject';\n\nclass PDFNumber extends PDFObject {\n  static of = (value: number) => new PDFNumber(value);\n\n  private readonly numberValue: number;\n  private readonly stringValue: string;\n\n  private constructor(value: number) {\n    super();\n    this.numberValue = value;\n    this.stringValue = numberToString(value);\n  }\n\n  asNumber(): number {\n    return this.numberValue;\n  }\n\n  /** @deprecated in favor of [[PDFNumber.asNumber]] */\n  value(): number {\n    return this.numberValue;\n  }\n\n  clone(): PDFNumber {\n    return PDFNumber.of(this.numberValue);\n  }\n\n  toString(): string {\n    return this.stringValue;\n  }\n\n  sizeInBytes(): number {\n    return this.stringValue.length;\n  }\n\n  copyBytesInto(buffer: Uint8Array, offset: number): number {\n    offset += copyStringIntoBuffer(this.stringValue, buffer, offset);\n    return this.stringValue.length;\n  }\n}\n\nexport default PDFNumber;\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAH,OAAA;AAEA,IAAAI,SAAA,0BAAAC,MAAA;EAAwBH,OAAA,CAAAI,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAMtB,SAAAD,UAAoBG,KAAa;IAAjC,IAAAC,KAAA,GACEH,MAAA,CAAAI,IAAA,MAAO;IACPD,KAAI,CAACE,WAAW,GAAGH,KAAK;IACxBC,KAAI,CAACG,WAAW,GAAGZ,OAAA,CAAAa,cAAc,CAACL,KAAK,CAAC;;EAC1C;EAEAH,SAAA,CAAAS,SAAA,CAAAC,QAAQ,GAAR;IACE,OAAO,IAAI,CAACJ,WAAW;EACzB,CAAC;EAED;EACAN,SAAA,CAAAS,SAAA,CAAAN,KAAK,GAAL;IACE,OAAO,IAAI,CAACG,WAAW;EACzB,CAAC;EAEDN,SAAA,CAAAS,SAAA,CAAAE,KAAK,GAAL;IACE,OAAOX,SAAS,CAACY,EAAE,CAAC,IAAI,CAACN,WAAW,CAAC;EACvC,CAAC;EAEDN,SAAA,CAAAS,SAAA,CAAAI,QAAQ,GAAR;IACE,OAAO,IAAI,CAACN,WAAW;EACzB,CAAC;EAEDP,SAAA,CAAAS,SAAA,CAAAK,WAAW,GAAX;IACE,OAAO,IAAI,CAACP,WAAW,CAACQ,MAAM;EAChC,CAAC;EAEDf,SAAA,CAAAS,SAAA,CAAAO,aAAa,GAAb,UAAcC,MAAkB,EAAEC,MAAc;IAC9CA,MAAM,IAAIvB,OAAA,CAAAwB,oBAAoB,CAAC,IAAI,CAACZ,WAAW,EAAEU,MAAM,EAAEC,MAAM,CAAC;IAChE,OAAO,IAAI,CAACX,WAAW,CAACQ,MAAM;EAChC,CAAC;EAnCMf,SAAA,CAAAY,EAAE,GAAG,UAACT,KAAa;IAAK,WAAIH,SAAS,CAACG,KAAK,CAAC;EAApB,CAAoB;EAoCrD,OAAAH,SAAC;CAAA,CArCuBH,WAAA,CAAAuB,OAAS;AAuCjCC,OAAA,CAAAD,OAAA,GAAepB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}