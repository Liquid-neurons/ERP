{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"../errors\");\nvar decode_1 = require(\"../streams/decode\");\nvar CharCodes_1 = tslib_1.__importDefault(require(\"../syntax/CharCodes\"));\n// TODO: See how line/col tracking affects performance\nvar ByteStream = /** @class */function () {\n  function ByteStream(bytes) {\n    this.idx = 0;\n    this.line = 0;\n    this.column = 0;\n    this.bytes = bytes;\n    this.length = this.bytes.length;\n  }\n  ByteStream.prototype.moveTo = function (offset) {\n    this.idx = offset;\n  };\n  ByteStream.prototype.next = function () {\n    var byte = this.bytes[this.idx++];\n    if (byte === CharCodes_1.default.Newline) {\n      this.line += 1;\n      this.column = 0;\n    } else {\n      this.column += 1;\n    }\n    return byte;\n  };\n  ByteStream.prototype.assertNext = function (expected) {\n    if (this.peek() !== expected) {\n      throw new errors_1.NextByteAssertionError(this.position(), expected, this.peek());\n    }\n    return this.next();\n  };\n  ByteStream.prototype.peek = function () {\n    return this.bytes[this.idx];\n  };\n  ByteStream.prototype.peekAhead = function (steps) {\n    return this.bytes[this.idx + steps];\n  };\n  ByteStream.prototype.peekAt = function (offset) {\n    return this.bytes[offset];\n  };\n  ByteStream.prototype.done = function () {\n    return this.idx >= this.length;\n  };\n  ByteStream.prototype.offset = function () {\n    return this.idx;\n  };\n  ByteStream.prototype.slice = function (start, end) {\n    return this.bytes.slice(start, end);\n  };\n  ByteStream.prototype.position = function () {\n    return {\n      line: this.line,\n      column: this.column,\n      offset: this.idx\n    };\n  };\n  ByteStream.of = function (bytes) {\n    return new ByteStream(bytes);\n  };\n  ByteStream.fromPDFRawStream = function (rawStream) {\n    return ByteStream.of(decode_1.decodePDFRawStream(rawStream).decode());\n  };\n  return ByteStream;\n}();\nexports.default = ByteStream;","map":{"version":3,"names":["errors_1","require","decode_1","CharCodes_1","tslib_1","__importDefault","ByteStream","bytes","idx","line","column","length","prototype","moveTo","offset","next","byte","default","Newline","assertNext","expected","peek","NextByteAssertionError","position","peekAhead","steps","peekAt","done","slice","start","end","of","fromPDFRawStream","rawStream","decodePDFRawStream","decode","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/parser/ByteStream.ts"],"sourcesContent":["import { NextByteAssertionError } from 'src/core/errors';\nimport PDFRawStream from 'src/core/objects/PDFRawStream';\nimport { decodePDFRawStream } from 'src/core/streams/decode';\nimport CharCodes from 'src/core/syntax/CharCodes';\n\n// TODO: See how line/col tracking affects performance\nclass ByteStream {\n  static of = (bytes: Uint8Array) => new ByteStream(bytes);\n\n  static fromPDFRawStream = (rawStream: PDFRawStream) =>\n    ByteStream.of(decodePDFRawStream(rawStream).decode());\n\n  private readonly bytes: Uint8Array;\n  private readonly length: number;\n\n  private idx = 0;\n  private line = 0;\n  private column = 0;\n\n  constructor(bytes: Uint8Array) {\n    this.bytes = bytes;\n    this.length = this.bytes.length;\n  }\n\n  moveTo(offset: number): void {\n    this.idx = offset;\n  }\n\n  next(): number {\n    const byte = this.bytes[this.idx++];\n    if (byte === CharCodes.Newline) {\n      this.line += 1;\n      this.column = 0;\n    } else {\n      this.column += 1;\n    }\n    return byte;\n  }\n\n  assertNext(expected: number): number {\n    if (this.peek() !== expected) {\n      throw new NextByteAssertionError(this.position(), expected, this.peek());\n    }\n    return this.next();\n  }\n\n  peek(): number {\n    return this.bytes[this.idx];\n  }\n\n  peekAhead(steps: number) {\n    return this.bytes[this.idx + steps];\n  }\n\n  peekAt(offset: number) {\n    return this.bytes[offset];\n  }\n\n  done(): boolean {\n    return this.idx >= this.length;\n  }\n\n  offset(): number {\n    return this.idx;\n  }\n\n  slice(start: number, end: number): Uint8Array {\n    return this.bytes.slice(start, end);\n  }\n\n  position(): { line: number; column: number; offset: number } {\n    return { line: this.line, column: this.column, offset: this.idx };\n  }\n}\n\nexport default ByteStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}