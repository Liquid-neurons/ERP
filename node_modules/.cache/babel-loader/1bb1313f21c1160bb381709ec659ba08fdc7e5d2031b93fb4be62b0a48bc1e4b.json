{"ast":null,"code":"import { __assign } from \"tslib\";\nimport pako from 'pako';\nimport PDFHeader from \"./document/PDFHeader\";\nimport { UnexpectedObjectTypeError } from \"./errors\";\nimport PDFArray from \"./objects/PDFArray\";\nimport PDFBool from \"./objects/PDFBool\";\nimport PDFDict from \"./objects/PDFDict\";\nimport PDFName from \"./objects/PDFName\";\nimport PDFNull from \"./objects/PDFNull\";\nimport PDFNumber from \"./objects/PDFNumber\";\nimport PDFObject from \"./objects/PDFObject\";\nimport PDFRawStream from \"./objects/PDFRawStream\";\nimport PDFRef from \"./objects/PDFRef\";\nimport PDFOperator from \"./operators/PDFOperator\";\nimport Ops from \"./operators/PDFOperatorNames\";\nimport PDFContentStream from \"./structures/PDFContentStream\";\nimport { typedArrayFor } from \"../utils\";\nimport { SimpleRNG } from \"../utils/rng\";\nvar byAscendingObjectNumber = function (_a, _b) {\n  var a = _a[0];\n  var b = _b[0];\n  return a.objectNumber - b.objectNumber;\n};\nvar PDFContext = /** @class */function () {\n  function PDFContext() {\n    this.largestObjectNumber = 0;\n    this.header = PDFHeader.forVersion(1, 7);\n    this.trailerInfo = {};\n    this.indirectObjects = new Map();\n    this.rng = SimpleRNG.withSeed(1);\n  }\n  PDFContext.prototype.assign = function (ref, object) {\n    this.indirectObjects.set(ref, object);\n    if (ref.objectNumber > this.largestObjectNumber) {\n      this.largestObjectNumber = ref.objectNumber;\n    }\n  };\n  PDFContext.prototype.nextRef = function () {\n    this.largestObjectNumber += 1;\n    return PDFRef.of(this.largestObjectNumber);\n  };\n  PDFContext.prototype.register = function (object) {\n    var ref = this.nextRef();\n    this.assign(ref, object);\n    return ref;\n  };\n  PDFContext.prototype.delete = function (ref) {\n    return this.indirectObjects.delete(ref);\n  };\n  PDFContext.prototype.lookupMaybe = function (ref) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    // TODO: `preservePDFNull` is for backwards compatibility. Should be\n    // removed in next breaking API change.\n    var preservePDFNull = types.includes(PDFNull);\n    var result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n    if (!result || result === PDFNull && !preservePDFNull) return undefined;\n    for (var idx = 0, len = types.length; idx < len; idx++) {\n      var type = types[idx];\n      if (type === PDFNull) {\n        if (result === PDFNull) return result;\n      } else {\n        if (result instanceof type) return result;\n      }\n    }\n    throw new UnexpectedObjectTypeError(types, result);\n  };\n  PDFContext.prototype.lookup = function (ref) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    var result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n    if (types.length === 0) return result;\n    for (var idx = 0, len = types.length; idx < len; idx++) {\n      var type = types[idx];\n      if (type === PDFNull) {\n        if (result === PDFNull) return result;\n      } else {\n        if (result instanceof type) return result;\n      }\n    }\n    throw new UnexpectedObjectTypeError(types, result);\n  };\n  PDFContext.prototype.getObjectRef = function (pdfObject) {\n    var entries = Array.from(this.indirectObjects.entries());\n    for (var idx = 0, len = entries.length; idx < len; idx++) {\n      var _a = entries[idx],\n        ref = _a[0],\n        object = _a[1];\n      if (object === pdfObject) {\n        return ref;\n      }\n    }\n    return undefined;\n  };\n  PDFContext.prototype.enumerateIndirectObjects = function () {\n    return Array.from(this.indirectObjects.entries()).sort(byAscendingObjectNumber);\n  };\n  PDFContext.prototype.obj = function (literal) {\n    if (literal instanceof PDFObject) {\n      return literal;\n    } else if (literal === null || literal === undefined) {\n      return PDFNull;\n    } else if (typeof literal === 'string') {\n      return PDFName.of(literal);\n    } else if (typeof literal === 'number') {\n      return PDFNumber.of(literal);\n    } else if (typeof literal === 'boolean') {\n      return literal ? PDFBool.True : PDFBool.False;\n    } else if (Array.isArray(literal)) {\n      var array = PDFArray.withContext(this);\n      for (var idx = 0, len = literal.length; idx < len; idx++) {\n        array.push(this.obj(literal[idx]));\n      }\n      return array;\n    } else {\n      var dict = PDFDict.withContext(this);\n      var keys = Object.keys(literal);\n      for (var idx = 0, len = keys.length; idx < len; idx++) {\n        var key = keys[idx];\n        var value = literal[key];\n        if (value !== undefined) dict.set(PDFName.of(key), this.obj(value));\n      }\n      return dict;\n    }\n  };\n  PDFContext.prototype.stream = function (contents, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n    return PDFRawStream.of(this.obj(dict), typedArrayFor(contents));\n  };\n  PDFContext.prototype.flateStream = function (contents, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n    return this.stream(pako.deflate(typedArrayFor(contents)), __assign(__assign({}, dict), {\n      Filter: 'FlateDecode'\n    }));\n  };\n  PDFContext.prototype.contentStream = function (operators, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n    return PDFContentStream.of(this.obj(dict), operators);\n  };\n  PDFContext.prototype.formXObject = function (operators, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n    return this.contentStream(operators, __assign(__assign({\n      BBox: this.obj([0, 0, 0, 0]),\n      Matrix: this.obj([1, 0, 0, 1, 0, 0])\n    }, dict), {\n      Type: 'XObject',\n      Subtype: 'Form'\n    }));\n  };\n  /*\n   * Reference to PDFContentStream that contains a single PDFOperator: `q`.\n   * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n   * added to a modified PDF, they start in the default, unchanged graphics\n   * state.\n   */\n  PDFContext.prototype.getPushGraphicsStateContentStream = function () {\n    if (this.pushGraphicsStateContentStreamRef) {\n      return this.pushGraphicsStateContentStreamRef;\n    }\n    var dict = this.obj({});\n    var op = PDFOperator.of(Ops.PushGraphicsState);\n    var stream = PDFContentStream.of(dict, [op]);\n    this.pushGraphicsStateContentStreamRef = this.register(stream);\n    return this.pushGraphicsStateContentStreamRef;\n  };\n  /*\n   * Reference to PDFContentStream that contains a single PDFOperator: `Q`.\n   * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n   * added to a modified PDF, they start in the default, unchanged graphics\n   * state.\n   */\n  PDFContext.prototype.getPopGraphicsStateContentStream = function () {\n    if (this.popGraphicsStateContentStreamRef) {\n      return this.popGraphicsStateContentStreamRef;\n    }\n    var dict = this.obj({});\n    var op = PDFOperator.of(Ops.PopGraphicsState);\n    var stream = PDFContentStream.of(dict, [op]);\n    this.popGraphicsStateContentStreamRef = this.register(stream);\n    return this.popGraphicsStateContentStreamRef;\n  };\n  PDFContext.prototype.addRandomSuffix = function (prefix, suffixLength) {\n    if (suffixLength === void 0) {\n      suffixLength = 4;\n    }\n    return prefix + \"-\" + Math.floor(this.rng.nextInt() * Math.pow(10, suffixLength));\n  };\n  PDFContext.create = function () {\n    return new PDFContext();\n  };\n  return PDFContext;\n}();\nexport default PDFContext;","map":{"version":3,"names":["pako","PDFHeader","UnexpectedObjectTypeError","PDFArray","PDFBool","PDFDict","PDFName","PDFNull","PDFNumber","PDFObject","PDFRawStream","PDFRef","PDFOperator","Ops","PDFContentStream","typedArrayFor","SimpleRNG","byAscendingObjectNumber","_a","_b","a","b","objectNumber","PDFContext","largestObjectNumber","header","forVersion","trailerInfo","indirectObjects","Map","rng","withSeed","prototype","assign","ref","object","set","nextRef","of","register","delete","lookupMaybe","types","_i","arguments","length","preservePDFNull","includes","result","get","undefined","idx","len","type","lookup","getObjectRef","pdfObject","entries","Array","from","enumerateIndirectObjects","sort","obj","literal","True","False","isArray","array","withContext","push","dict","keys","Object","key","value","stream","contents","flateStream","deflate","__assign","Filter","contentStream","operators","formXObject","BBox","Matrix","Type","Subtype","getPushGraphicsStateContentStream","pushGraphicsStateContentStreamRef","op","PushGraphicsState","getPopGraphicsStateContentStream","popGraphicsStateContentStreamRef","PopGraphicsState","addRandomSuffix","prefix","suffixLength","Math","floor","nextInt","pow","create"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/PDFContext.ts"],"sourcesContent":["import pako from 'pako';\n\nimport PDFHeader from 'src/core/document/PDFHeader';\nimport { UnexpectedObjectTypeError } from 'src/core/errors';\nimport PDFArray from 'src/core/objects/PDFArray';\nimport PDFBool from 'src/core/objects/PDFBool';\nimport PDFDict from 'src/core/objects/PDFDict';\nimport PDFHexString from 'src/core/objects/PDFHexString';\nimport PDFName from 'src/core/objects/PDFName';\nimport PDFNull from 'src/core/objects/PDFNull';\nimport PDFNumber from 'src/core/objects/PDFNumber';\nimport PDFObject from 'src/core/objects/PDFObject';\nimport PDFRawStream from 'src/core/objects/PDFRawStream';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport PDFStream from 'src/core/objects/PDFStream';\nimport PDFString from 'src/core/objects/PDFString';\nimport PDFOperator from 'src/core/operators/PDFOperator';\nimport Ops from 'src/core/operators/PDFOperatorNames';\nimport PDFContentStream from 'src/core/structures/PDFContentStream';\nimport { typedArrayFor } from 'src/utils';\nimport { SimpleRNG } from 'src/utils/rng';\n\ntype LookupKey = PDFRef | PDFObject | undefined;\n\ninterface LiteralObject {\n  [name: string]: Literal | PDFObject;\n}\n\ninterface LiteralArray {\n  [index: number]: Literal | PDFObject;\n}\n\ntype Literal =\n  | LiteralObject\n  | LiteralArray\n  | string\n  | number\n  | boolean\n  | null\n  | undefined;\n\nconst byAscendingObjectNumber = (\n  [a]: [PDFRef, PDFObject],\n  [b]: [PDFRef, PDFObject],\n) => a.objectNumber - b.objectNumber;\n\nclass PDFContext {\n  static create = () => new PDFContext();\n\n  largestObjectNumber: number;\n  header: PDFHeader;\n  trailerInfo: {\n    Root?: PDFObject;\n    Encrypt?: PDFObject;\n    Info?: PDFObject;\n    ID?: PDFObject;\n  };\n  rng: SimpleRNG;\n\n  private readonly indirectObjects: Map<PDFRef, PDFObject>;\n\n  private pushGraphicsStateContentStreamRef?: PDFRef;\n  private popGraphicsStateContentStreamRef?: PDFRef;\n\n  private constructor() {\n    this.largestObjectNumber = 0;\n    this.header = PDFHeader.forVersion(1, 7);\n    this.trailerInfo = {};\n\n    this.indirectObjects = new Map();\n    this.rng = SimpleRNG.withSeed(1);\n  }\n\n  assign(ref: PDFRef, object: PDFObject): void {\n    this.indirectObjects.set(ref, object);\n    if (ref.objectNumber > this.largestObjectNumber) {\n      this.largestObjectNumber = ref.objectNumber;\n    }\n  }\n\n  nextRef(): PDFRef {\n    this.largestObjectNumber += 1;\n    return PDFRef.of(this.largestObjectNumber);\n  }\n\n  register(object: PDFObject): PDFRef {\n    const ref = this.nextRef();\n    this.assign(ref, object);\n    return ref;\n  }\n\n  delete(ref: PDFRef): boolean {\n    return this.indirectObjects.delete(ref);\n  }\n\n  lookupMaybe(ref: LookupKey, type: typeof PDFArray): PDFArray | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFBool): PDFBool | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFDict): PDFDict | undefined;\n  lookupMaybe(\n    ref: LookupKey,\n    type: typeof PDFHexString,\n  ): PDFHexString | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFName): PDFName | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFNull): typeof PDFNull | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFNumber): PDFNumber | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFStream): PDFStream | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFRef): PDFRef | undefined;\n  lookupMaybe(ref: LookupKey, type: typeof PDFString): PDFString | undefined;\n  lookupMaybe(\n    ref: LookupKey,\n    type1: typeof PDFString,\n    type2: typeof PDFHexString,\n  ): PDFString | PDFHexString | undefined;\n\n  lookupMaybe(ref: LookupKey, ...types: any[]) {\n    // TODO: `preservePDFNull` is for backwards compatibility. Should be\n    // removed in next breaking API change.\n    const preservePDFNull = types.includes(PDFNull);\n\n    const result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n\n    if (!result || (result === PDFNull && !preservePDFNull)) return undefined;\n\n    for (let idx = 0, len = types.length; idx < len; idx++) {\n      const type = types[idx];\n      if (type === PDFNull) {\n        if (result === PDFNull) return result;\n      } else {\n        if (result instanceof type) return result;\n      }\n    }\n    throw new UnexpectedObjectTypeError(types, result);\n  }\n\n  lookup(ref: LookupKey): PDFObject | undefined;\n  lookup(ref: LookupKey, type: typeof PDFArray): PDFArray;\n  lookup(ref: LookupKey, type: typeof PDFBool): PDFBool;\n  lookup(ref: LookupKey, type: typeof PDFDict): PDFDict;\n  lookup(ref: LookupKey, type: typeof PDFHexString): PDFHexString;\n  lookup(ref: LookupKey, type: typeof PDFName): PDFName;\n  lookup(ref: LookupKey, type: typeof PDFNull): typeof PDFNull;\n  lookup(ref: LookupKey, type: typeof PDFNumber): PDFNumber;\n  lookup(ref: LookupKey, type: typeof PDFStream): PDFStream;\n  lookup(ref: LookupKey, type: typeof PDFRef): PDFRef;\n  lookup(ref: LookupKey, type: typeof PDFString): PDFString;\n  lookup(\n    ref: LookupKey,\n    type1: typeof PDFString,\n    type2: typeof PDFHexString,\n  ): PDFString | PDFHexString;\n\n  lookup(ref: LookupKey, ...types: any[]) {\n    const result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n\n    if (types.length === 0) return result;\n\n    for (let idx = 0, len = types.length; idx < len; idx++) {\n      const type = types[idx];\n      if (type === PDFNull) {\n        if (result === PDFNull) return result;\n      } else {\n        if (result instanceof type) return result;\n      }\n    }\n\n    throw new UnexpectedObjectTypeError(types, result);\n  }\n\n  getObjectRef(pdfObject: PDFObject): PDFRef | undefined {\n    const entries = Array.from(this.indirectObjects.entries());\n    for (let idx = 0, len = entries.length; idx < len; idx++) {\n      const [ref, object] = entries[idx];\n      if (object === pdfObject) {\n        return ref;\n      }\n    }\n\n    return undefined;\n  }\n\n  enumerateIndirectObjects(): [PDFRef, PDFObject][] {\n    return Array.from(this.indirectObjects.entries()).sort(\n      byAscendingObjectNumber,\n    );\n  }\n\n  obj(literal: null | undefined): typeof PDFNull;\n  obj(literal: string): PDFName;\n  obj(literal: number): PDFNumber;\n  obj(literal: boolean): PDFBool;\n  obj(literal: LiteralObject): PDFDict;\n  obj(literal: LiteralArray): PDFArray;\n\n  obj(literal: Literal) {\n    if (literal instanceof PDFObject) {\n      return literal;\n    } else if (literal === null || literal === undefined) {\n      return PDFNull;\n    } else if (typeof literal === 'string') {\n      return PDFName.of(literal);\n    } else if (typeof literal === 'number') {\n      return PDFNumber.of(literal);\n    } else if (typeof literal === 'boolean') {\n      return literal ? PDFBool.True : PDFBool.False;\n    } else if (Array.isArray(literal)) {\n      const array = PDFArray.withContext(this);\n      for (let idx = 0, len = literal.length; idx < len; idx++) {\n        array.push(this.obj(literal[idx]));\n      }\n      return array;\n    } else {\n      const dict = PDFDict.withContext(this);\n      const keys = Object.keys(literal);\n      for (let idx = 0, len = keys.length; idx < len; idx++) {\n        const key = keys[idx];\n        const value = (literal as LiteralObject)[key] as any;\n        if (value !== undefined) dict.set(PDFName.of(key), this.obj(value));\n      }\n      return dict;\n    }\n  }\n\n  stream(\n    contents: string | Uint8Array,\n    dict: LiteralObject = {},\n  ): PDFRawStream {\n    return PDFRawStream.of(this.obj(dict), typedArrayFor(contents));\n  }\n\n  flateStream(\n    contents: string | Uint8Array,\n    dict: LiteralObject = {},\n  ): PDFRawStream {\n    return this.stream(pako.deflate(typedArrayFor(contents)), {\n      ...dict,\n      Filter: 'FlateDecode',\n    });\n  }\n\n  contentStream(\n    operators: PDFOperator[],\n    dict: LiteralObject = {},\n  ): PDFContentStream {\n    return PDFContentStream.of(this.obj(dict), operators);\n  }\n\n  formXObject(\n    operators: PDFOperator[],\n    dict: LiteralObject = {},\n  ): PDFContentStream {\n    return this.contentStream(operators, {\n      BBox: this.obj([0, 0, 0, 0]),\n      Matrix: this.obj([1, 0, 0, 1, 0, 0]),\n      ...dict,\n      Type: 'XObject',\n      Subtype: 'Form',\n    });\n  }\n\n  /*\n   * Reference to PDFContentStream that contains a single PDFOperator: `q`.\n   * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n   * added to a modified PDF, they start in the default, unchanged graphics\n   * state.\n   */\n  getPushGraphicsStateContentStream(): PDFRef {\n    if (this.pushGraphicsStateContentStreamRef) {\n      return this.pushGraphicsStateContentStreamRef;\n    }\n    const dict = this.obj({});\n    const op = PDFOperator.of(Ops.PushGraphicsState);\n    const stream = PDFContentStream.of(dict, [op]);\n    this.pushGraphicsStateContentStreamRef = this.register(stream);\n    return this.pushGraphicsStateContentStreamRef;\n  }\n\n  /*\n   * Reference to PDFContentStream that contains a single PDFOperator: `Q`.\n   * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n   * added to a modified PDF, they start in the default, unchanged graphics\n   * state.\n   */\n  getPopGraphicsStateContentStream(): PDFRef {\n    if (this.popGraphicsStateContentStreamRef) {\n      return this.popGraphicsStateContentStreamRef;\n    }\n    const dict = this.obj({});\n    const op = PDFOperator.of(Ops.PopGraphicsState);\n    const stream = PDFContentStream.of(dict, [op]);\n    this.popGraphicsStateContentStreamRef = this.register(stream);\n    return this.popGraphicsStateContentStreamRef;\n  }\n\n  addRandomSuffix(prefix: string, suffixLength = 4): string {\n    return `${prefix}-${Math.floor(this.rng.nextInt() * 10 ** suffixLength)}`;\n  }\n}\n\nexport default PDFContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}