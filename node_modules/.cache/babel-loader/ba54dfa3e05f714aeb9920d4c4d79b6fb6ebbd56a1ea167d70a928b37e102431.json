{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFStream from \"../objects/PDFStream\";\nvar PDFPageLeaf = /** @class */function (_super) {\n  __extends(PDFPageLeaf, _super);\n  function PDFPageLeaf(map, context, autoNormalizeCTM) {\n    if (autoNormalizeCTM === void 0) {\n      autoNormalizeCTM = true;\n    }\n    var _this = _super.call(this, map, context) || this;\n    _this.normalized = false;\n    _this.autoNormalizeCTM = autoNormalizeCTM;\n    return _this;\n  }\n  PDFPageLeaf.prototype.clone = function (context) {\n    var clone = PDFPageLeaf.fromMapWithContext(new Map(), context || this.context, this.autoNormalizeCTM);\n    var entries = this.entries();\n    for (var idx = 0, len = entries.length; idx < len; idx++) {\n      var _a = entries[idx],\n        key = _a[0],\n        value = _a[1];\n      clone.set(key, value);\n    }\n    return clone;\n  };\n  PDFPageLeaf.prototype.Parent = function () {\n    return this.lookupMaybe(PDFName.Parent, PDFDict);\n  };\n  PDFPageLeaf.prototype.Contents = function () {\n    return this.lookup(PDFName.of('Contents'));\n  };\n  PDFPageLeaf.prototype.Annots = function () {\n    return this.lookupMaybe(PDFName.Annots, PDFArray);\n  };\n  PDFPageLeaf.prototype.BleedBox = function () {\n    return this.lookupMaybe(PDFName.BleedBox, PDFArray);\n  };\n  PDFPageLeaf.prototype.TrimBox = function () {\n    return this.lookupMaybe(PDFName.TrimBox, PDFArray);\n  };\n  PDFPageLeaf.prototype.ArtBox = function () {\n    return this.lookupMaybe(PDFName.ArtBox, PDFArray);\n  };\n  PDFPageLeaf.prototype.Resources = function () {\n    var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    return this.context.lookupMaybe(dictOrRef, PDFDict);\n  };\n  PDFPageLeaf.prototype.MediaBox = function () {\n    var arrayOrRef = this.getInheritableAttribute(PDFName.MediaBox);\n    return this.context.lookup(arrayOrRef, PDFArray);\n  };\n  PDFPageLeaf.prototype.CropBox = function () {\n    var arrayOrRef = this.getInheritableAttribute(PDFName.CropBox);\n    return this.context.lookupMaybe(arrayOrRef, PDFArray);\n  };\n  PDFPageLeaf.prototype.Rotate = function () {\n    var numberOrRef = this.getInheritableAttribute(PDFName.Rotate);\n    return this.context.lookupMaybe(numberOrRef, PDFNumber);\n  };\n  PDFPageLeaf.prototype.getInheritableAttribute = function (name) {\n    var attribute;\n    this.ascend(function (node) {\n      if (!attribute) attribute = node.get(name);\n    });\n    return attribute;\n  };\n  PDFPageLeaf.prototype.setParent = function (parentRef) {\n    this.set(PDFName.Parent, parentRef);\n  };\n  PDFPageLeaf.prototype.addContentStream = function (contentStreamRef) {\n    var Contents = this.normalizedEntries().Contents || this.context.obj([]);\n    this.set(PDFName.Contents, Contents);\n    Contents.push(contentStreamRef);\n  };\n  PDFPageLeaf.prototype.wrapContentStreams = function (startStream, endStream) {\n    var Contents = this.Contents();\n    if (Contents instanceof PDFArray) {\n      Contents.insert(0, startStream);\n      Contents.push(endStream);\n      return true;\n    }\n    return false;\n  };\n  PDFPageLeaf.prototype.addAnnot = function (annotRef) {\n    var Annots = this.normalizedEntries().Annots;\n    Annots.push(annotRef);\n  };\n  PDFPageLeaf.prototype.removeAnnot = function (annotRef) {\n    var Annots = this.normalizedEntries().Annots;\n    var index = Annots.indexOf(annotRef);\n    if (index !== undefined) {\n      Annots.remove(index);\n    }\n  };\n  PDFPageLeaf.prototype.setFontDictionary = function (name, fontDictRef) {\n    var Font = this.normalizedEntries().Font;\n    Font.set(name, fontDictRef);\n  };\n  PDFPageLeaf.prototype.newFontDictionaryKey = function (tag) {\n    var Font = this.normalizedEntries().Font;\n    return Font.uniqueKey(tag);\n  };\n  PDFPageLeaf.prototype.newFontDictionary = function (tag, fontDictRef) {\n    var key = this.newFontDictionaryKey(tag);\n    this.setFontDictionary(key, fontDictRef);\n    return key;\n  };\n  PDFPageLeaf.prototype.setXObject = function (name, xObjectRef) {\n    var XObject = this.normalizedEntries().XObject;\n    XObject.set(name, xObjectRef);\n  };\n  PDFPageLeaf.prototype.newXObjectKey = function (tag) {\n    var XObject = this.normalizedEntries().XObject;\n    return XObject.uniqueKey(tag);\n  };\n  PDFPageLeaf.prototype.newXObject = function (tag, xObjectRef) {\n    var key = this.newXObjectKey(tag);\n    this.setXObject(key, xObjectRef);\n    return key;\n  };\n  PDFPageLeaf.prototype.setExtGState = function (name, extGStateRef) {\n    var ExtGState = this.normalizedEntries().ExtGState;\n    ExtGState.set(name, extGStateRef);\n  };\n  PDFPageLeaf.prototype.newExtGStateKey = function (tag) {\n    var ExtGState = this.normalizedEntries().ExtGState;\n    return ExtGState.uniqueKey(tag);\n  };\n  PDFPageLeaf.prototype.newExtGState = function (tag, extGStateRef) {\n    var key = this.newExtGStateKey(tag);\n    this.setExtGState(key, extGStateRef);\n    return key;\n  };\n  PDFPageLeaf.prototype.ascend = function (visitor) {\n    visitor(this);\n    var Parent = this.Parent();\n    if (Parent) Parent.ascend(visitor);\n  };\n  PDFPageLeaf.prototype.normalize = function () {\n    if (this.normalized) return;\n    var context = this.context;\n    var contentsRef = this.get(PDFName.Contents);\n    var contents = this.context.lookup(contentsRef);\n    if (contents instanceof PDFStream) {\n      this.set(PDFName.Contents, context.obj([contentsRef]));\n    }\n    if (this.autoNormalizeCTM) {\n      this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(), this.context.getPopGraphicsStateContentStream());\n    }\n    // TODO: Clone `Resources` if it is inherited\n    var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    var Resources = context.lookupMaybe(dictOrRef, PDFDict) || context.obj({});\n    this.set(PDFName.Resources, Resources);\n    // TODO: Clone `Font` if it is inherited\n    var Font = Resources.lookupMaybe(PDFName.Font, PDFDict) || context.obj({});\n    Resources.set(PDFName.Font, Font);\n    // TODO: Clone `XObject` if it is inherited\n    var XObject = Resources.lookupMaybe(PDFName.XObject, PDFDict) || context.obj({});\n    Resources.set(PDFName.XObject, XObject);\n    // TODO: Clone `ExtGState` if it is inherited\n    var ExtGState = Resources.lookupMaybe(PDFName.ExtGState, PDFDict) || context.obj({});\n    Resources.set(PDFName.ExtGState, ExtGState);\n    var Annots = this.Annots() || context.obj([]);\n    this.set(PDFName.Annots, Annots);\n    this.normalized = true;\n  };\n  PDFPageLeaf.prototype.normalizedEntries = function () {\n    this.normalize();\n    var Annots = this.Annots();\n    var Resources = this.Resources();\n    var Contents = this.Contents();\n    return {\n      Annots: Annots,\n      Resources: Resources,\n      Contents: Contents,\n      Font: Resources.lookup(PDFName.Font, PDFDict),\n      XObject: Resources.lookup(PDFName.XObject, PDFDict),\n      ExtGState: Resources.lookup(PDFName.ExtGState, PDFDict)\n    };\n  };\n  PDFPageLeaf.InheritableEntries = ['Resources', 'MediaBox', 'CropBox', 'Rotate'];\n  PDFPageLeaf.withContextAndParent = function (context, parent) {\n    var dict = new Map();\n    dict.set(PDFName.Type, PDFName.Page);\n    dict.set(PDFName.Parent, parent);\n    dict.set(PDFName.Resources, context.obj({}));\n    dict.set(PDFName.MediaBox, context.obj([0, 0, 612, 792]));\n    return new PDFPageLeaf(dict, context, false);\n  };\n  PDFPageLeaf.fromMapWithContext = function (map, context, autoNormalizeCTM) {\n    if (autoNormalizeCTM === void 0) {\n      autoNormalizeCTM = true;\n    }\n    return new PDFPageLeaf(map, context, autoNormalizeCTM);\n  };\n  return PDFPageLeaf;\n}(PDFDict);\nexport default PDFPageLeaf;","map":{"version":3,"names":["PDFArray","PDFDict","PDFName","PDFNumber","PDFStream","PDFPageLeaf","_super","__extends","map","context","autoNormalizeCTM","_this","call","normalized","prototype","clone","fromMapWithContext","Map","entries","idx","len","length","_a","key","value","set","Parent","lookupMaybe","Contents","lookup","of","Annots","BleedBox","TrimBox","ArtBox","Resources","dictOrRef","getInheritableAttribute","MediaBox","arrayOrRef","CropBox","Rotate","numberOrRef","name","attribute","ascend","node","get","setParent","parentRef","addContentStream","contentStreamRef","normalizedEntries","obj","push","wrapContentStreams","startStream","endStream","insert","addAnnot","annotRef","removeAnnot","index","indexOf","undefined","remove","setFontDictionary","fontDictRef","Font","newFontDictionaryKey","tag","uniqueKey","newFontDictionary","setXObject","xObjectRef","XObject","newXObjectKey","newXObject","setExtGState","extGStateRef","ExtGState","newExtGStateKey","newExtGState","visitor","normalize","contentsRef","contents","getPushGraphicsStateContentStream","getPopGraphicsStateContentStream","InheritableEntries","withContextAndParent","parent","dict","Type","Page"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/structures/PDFPageLeaf.ts"],"sourcesContent":["import PDFArray from 'src/core/objects/PDFArray';\nimport PDFDict, { DictMap } from 'src/core/objects/PDFDict';\nimport PDFName from 'src/core/objects/PDFName';\nimport PDFNumber from 'src/core/objects/PDFNumber';\nimport PDFObject from 'src/core/objects/PDFObject';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport PDFStream from 'src/core/objects/PDFStream';\nimport PDFContext from 'src/core/PDFContext';\nimport PDFPageTree from 'src/core/structures/PDFPageTree';\n\nclass PDFPageLeaf extends PDFDict {\n  static readonly InheritableEntries = [\n    'Resources',\n    'MediaBox',\n    'CropBox',\n    'Rotate',\n  ];\n\n  static withContextAndParent = (context: PDFContext, parent: PDFRef) => {\n    const dict = new Map();\n    dict.set(PDFName.Type, PDFName.Page);\n    dict.set(PDFName.Parent, parent);\n    dict.set(PDFName.Resources, context.obj({}));\n    dict.set(PDFName.MediaBox, context.obj([0, 0, 612, 792]));\n    return new PDFPageLeaf(dict, context, false);\n  };\n\n  static fromMapWithContext = (\n    map: DictMap,\n    context: PDFContext,\n    autoNormalizeCTM = true,\n  ) => new PDFPageLeaf(map, context, autoNormalizeCTM);\n\n  private normalized = false;\n  private readonly autoNormalizeCTM: boolean;\n\n  private constructor(\n    map: DictMap,\n    context: PDFContext,\n    autoNormalizeCTM = true,\n  ) {\n    super(map, context);\n    this.autoNormalizeCTM = autoNormalizeCTM;\n  }\n\n  clone(context?: PDFContext): PDFPageLeaf {\n    const clone = PDFPageLeaf.fromMapWithContext(\n      new Map(),\n      context || this.context,\n      this.autoNormalizeCTM,\n    );\n    const entries = this.entries();\n    for (let idx = 0, len = entries.length; idx < len; idx++) {\n      const [key, value] = entries[idx];\n      clone.set(key, value);\n    }\n    return clone;\n  }\n\n  Parent(): PDFPageTree | undefined {\n    return this.lookupMaybe(PDFName.Parent, PDFDict) as PDFPageTree | undefined;\n  }\n\n  Contents(): PDFStream | PDFArray | undefined {\n    return this.lookup(PDFName.of('Contents')) as\n      | PDFStream\n      | PDFArray\n      | undefined;\n  }\n\n  Annots(): PDFArray | undefined {\n    return this.lookupMaybe(PDFName.Annots, PDFArray);\n  }\n\n  BleedBox(): PDFArray | undefined {\n    return this.lookupMaybe(PDFName.BleedBox, PDFArray);\n  }\n\n  TrimBox(): PDFArray | undefined {\n    return this.lookupMaybe(PDFName.TrimBox, PDFArray);\n  }\n\n  ArtBox(): PDFArray | undefined {\n    return this.lookupMaybe(PDFName.ArtBox, PDFArray);\n  }\n\n  Resources(): PDFDict | undefined {\n    const dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    return this.context.lookupMaybe(dictOrRef, PDFDict);\n  }\n\n  MediaBox(): PDFArray {\n    const arrayOrRef = this.getInheritableAttribute(PDFName.MediaBox);\n    return this.context.lookup(arrayOrRef, PDFArray);\n  }\n\n  CropBox(): PDFArray | undefined {\n    const arrayOrRef = this.getInheritableAttribute(PDFName.CropBox);\n    return this.context.lookupMaybe(arrayOrRef, PDFArray);\n  }\n\n  Rotate(): PDFNumber | undefined {\n    const numberOrRef = this.getInheritableAttribute(PDFName.Rotate);\n    return this.context.lookupMaybe(numberOrRef, PDFNumber);\n  }\n\n  getInheritableAttribute(name: PDFName): PDFObject | undefined {\n    let attribute: PDFObject | undefined;\n    this.ascend((node) => {\n      if (!attribute) attribute = node.get(name);\n    });\n    return attribute;\n  }\n\n  setParent(parentRef: PDFRef): void {\n    this.set(PDFName.Parent, parentRef);\n  }\n\n  addContentStream(contentStreamRef: PDFRef): void {\n    const Contents = this.normalizedEntries().Contents || this.context.obj([]);\n    this.set(PDFName.Contents, Contents);\n    Contents.push(contentStreamRef);\n  }\n\n  wrapContentStreams(startStream: PDFRef, endStream: PDFRef): boolean {\n    const Contents = this.Contents();\n    if (Contents instanceof PDFArray) {\n      Contents.insert(0, startStream);\n      Contents.push(endStream);\n      return true;\n    }\n    return false;\n  }\n\n  addAnnot(annotRef: PDFRef): void {\n    const { Annots } = this.normalizedEntries();\n    Annots.push(annotRef);\n  }\n\n  removeAnnot(annotRef: PDFRef) {\n    const { Annots } = this.normalizedEntries();\n    const index = Annots.indexOf(annotRef);\n    if (index !== undefined) {\n      Annots.remove(index);\n    }\n  }\n\n  setFontDictionary(name: PDFName, fontDictRef: PDFRef): void {\n    const { Font } = this.normalizedEntries();\n    Font.set(name, fontDictRef);\n  }\n\n  newFontDictionaryKey(tag: string): PDFName {\n    const { Font } = this.normalizedEntries();\n    return Font.uniqueKey(tag);\n  }\n\n  newFontDictionary(tag: string, fontDictRef: PDFRef): PDFName {\n    const key = this.newFontDictionaryKey(tag);\n    this.setFontDictionary(key, fontDictRef);\n    return key;\n  }\n\n  setXObject(name: PDFName, xObjectRef: PDFRef): void {\n    const { XObject } = this.normalizedEntries();\n    XObject.set(name, xObjectRef);\n  }\n\n  newXObjectKey(tag: string): PDFName {\n    const { XObject } = this.normalizedEntries();\n    return XObject.uniqueKey(tag);\n  }\n\n  newXObject(tag: string, xObjectRef: PDFRef): PDFName {\n    const key = this.newXObjectKey(tag);\n    this.setXObject(key, xObjectRef);\n    return key;\n  }\n\n  setExtGState(name: PDFName, extGStateRef: PDFRef | PDFDict): void {\n    const { ExtGState } = this.normalizedEntries();\n    ExtGState.set(name, extGStateRef);\n  }\n\n  newExtGStateKey(tag: string): PDFName {\n    const { ExtGState } = this.normalizedEntries();\n    return ExtGState.uniqueKey(tag);\n  }\n\n  newExtGState(tag: string, extGStateRef: PDFRef | PDFDict): PDFName {\n    const key = this.newExtGStateKey(tag);\n    this.setExtGState(key, extGStateRef);\n    return key;\n  }\n\n  ascend(visitor: (node: PDFPageTree | PDFPageLeaf) => any): void {\n    visitor(this);\n    const Parent = this.Parent();\n    if (Parent) Parent.ascend(visitor);\n  }\n\n  normalize() {\n    if (this.normalized) return;\n\n    const { context } = this;\n\n    const contentsRef = this.get(PDFName.Contents);\n    const contents = this.context.lookup(contentsRef);\n    if (contents instanceof PDFStream) {\n      this.set(PDFName.Contents, context.obj([contentsRef]));\n    }\n\n    if (this.autoNormalizeCTM) {\n      this.wrapContentStreams(\n        this.context.getPushGraphicsStateContentStream(),\n        this.context.getPopGraphicsStateContentStream(),\n      );\n    }\n\n    // TODO: Clone `Resources` if it is inherited\n    const dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    const Resources =\n      context.lookupMaybe(dictOrRef, PDFDict) || context.obj({});\n    this.set(PDFName.Resources, Resources);\n\n    // TODO: Clone `Font` if it is inherited\n    const Font =\n      Resources.lookupMaybe(PDFName.Font, PDFDict) || context.obj({});\n    Resources.set(PDFName.Font, Font);\n\n    // TODO: Clone `XObject` if it is inherited\n    const XObject =\n      Resources.lookupMaybe(PDFName.XObject, PDFDict) || context.obj({});\n    Resources.set(PDFName.XObject, XObject);\n\n    // TODO: Clone `ExtGState` if it is inherited\n    const ExtGState =\n      Resources.lookupMaybe(PDFName.ExtGState, PDFDict) || context.obj({});\n    Resources.set(PDFName.ExtGState, ExtGState);\n\n    const Annots = this.Annots() || context.obj([]);\n    this.set(PDFName.Annots, Annots);\n\n    this.normalized = true;\n  }\n\n  normalizedEntries() {\n    this.normalize();\n    const Annots = this.Annots()!;\n    const Resources = this.Resources()!;\n    const Contents = this.Contents() as PDFArray | undefined;\n    return {\n      Annots,\n      Resources,\n      Contents,\n      Font: Resources.lookup(PDFName.Font, PDFDict),\n      XObject: Resources.lookup(PDFName.XObject, PDFDict),\n      ExtGState: Resources.lookup(PDFName.ExtGState, PDFDict),\n    };\n  }\n}\n\nexport default PDFPageLeaf;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}