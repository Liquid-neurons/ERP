{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/Applicant/ListStatus.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useUserEmail } from '../contexts/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListStatus() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [applicationIds, setApplicationIds] = useState([]);\n\n  // Fetch application IDs from backend when component mounts\n  _s(useEffect(_s(() => {\n    _s();\n    fetchApplicationIds();\n    const {\n      UserEmail\n    } = useUserEmail();\n  }, \"afFIo5QqvIAC3oz4RTxH8jFS9tg=\", false, function () {\n    return [useUserEmail];\n  }), []), \"afFIo5QqvIAC3oz4RTxH8jFS9tg=\", false, function () {\n    return [useUserEmail];\n  });\n\n  // Function to fetch application IDs from backend\n  const fetchApplicationIds = async () => {\n    try {\n      const userEmail = UserEmail; // Get user's email from the context\n      const response = await fetch('http://49.206.252.212:5000/status-application-ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userEmail\n        }) // Send user's email in the request body\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setApplicationIds(data);\n    } catch (error) {\n      console.error('Error fetching application IDs:', error);\n      // Optionally, you can handle errors here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-4 flex justify-center\",\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Application ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: applicationIds.length > 0 ? applicationIds.map(applicationId => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: applicationId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/student-data/${applicationId}`,\n              className: \" bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\",\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, applicationId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            colSpan: \"2\",\n            children: \"No new applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s2(ListStatus, \"qcAmsZ3ePUNoejH1Z8Ti3G6jDOA=\");\n_c = ListStatus;\nexport default ListStatus;\nvar _c;\n$RefreshReg$(_c, \"ListStatus\");","map":{"version":3,"names":["React","useState","useEffect","Link","useUserEmail","jsxDEV","_jsxDEV","ListStatus","_s2","_s","$RefreshSig$","applicationIds","setApplicationIds","fetchApplicationIds","UserEmail","userEmail","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","applicationId","to","colSpan","_c","$RefreshReg$"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/Applicant/ListStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useUserEmail } from '../contexts/context';\n\nfunction ListStatus() {\n  \n  const [applicationIds, setApplicationIds] = useState([]);\n\n\n  // Fetch application IDs from backend when component mounts\n  useEffect(() => {\n    fetchApplicationIds();\n    const { UserEmail } = useUserEmail();\n  }, []);\n\n  // Function to fetch application IDs from backend\n  const fetchApplicationIds = async () => {\n    try {\n      const userEmail = UserEmail; // Get user's email from the context\n      const response = await fetch('http://49.206.252.212:5000/status-application-ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ userEmail }) // Send user's email in the request body\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setApplicationIds(data);\n    } catch (error) {\n      console.error('Error fetching application IDs:', error);\n      // Optionally, you can handle errors here\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto\">\n      <h1 className=\"text-3xl font-semibold mb-4 flex justify-center\">Applications</h1>\n      <table className=\"table-auto mx-auto\">\n        <thead>\n          <tr>\n            <th className=\"border px-9 py-2\">Application ID</th>\n            <th className=\"border px-9 py-2\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {applicationIds.length > 0 ? (\n            applicationIds.map(applicationId => (\n              <tr key={applicationId}>\n                <td className=\"border px-4 py-2\">{applicationId}</td>\n                <td className=\"border px-4 py-2\">\n                <Link to={`/student-data/${applicationId}`} className=\" bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\">\n                    Review \n                  </Link>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td className=\"border px-4 py-2\" colSpan=\"2\">No new applications</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}