{"ast":null,"code":"\"use strict\";\n\n// tslint:disable: max-classes-per-file\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidMaxLengthError = exports.ExceededMaxLengthError = exports.CombedTextLayoutError = exports.RichTextFieldReadError = exports.FieldExistsAsNonTerminalError = exports.InvalidFieldNamePartError = exports.FieldAlreadyExistsError = exports.MissingOnValueCheckError = exports.UnexpectedFieldTypeError = exports.NoSuchFieldError = exports.RemovePageFromEmptyDocumentError = exports.ForeignPageError = exports.FontkitNotRegisteredError = exports.EncryptedPDFError = void 0;\nvar tslib_1 = require(\"tslib\");\n// TODO: Include link to documentation with example\nvar EncryptedPDFError = /** @class */function (_super) {\n  tslib_1.__extends(EncryptedPDFError, _super);\n  function EncryptedPDFError() {\n    var _this = this;\n    var msg = 'Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return EncryptedPDFError;\n}(Error);\nexports.EncryptedPDFError = EncryptedPDFError;\n// TODO: Include link to documentation with example\nvar FontkitNotRegisteredError = /** @class */function (_super) {\n  tslib_1.__extends(FontkitNotRegisteredError, _super);\n  function FontkitNotRegisteredError() {\n    var _this = this;\n    var msg = 'Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FontkitNotRegisteredError;\n}(Error);\nexports.FontkitNotRegisteredError = FontkitNotRegisteredError;\n// TODO: Include link to documentation with example\nvar ForeignPageError = /** @class */function (_super) {\n  tslib_1.__extends(ForeignPageError, _super);\n  function ForeignPageError() {\n    var _this = this;\n    var msg = 'A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ForeignPageError;\n}(Error);\nexports.ForeignPageError = ForeignPageError;\n// TODO: Include link to documentation with example\nvar RemovePageFromEmptyDocumentError = /** @class */function (_super) {\n  tslib_1.__extends(RemovePageFromEmptyDocumentError, _super);\n  function RemovePageFromEmptyDocumentError() {\n    var _this = this;\n    var msg = 'PDFDocument has no pages so `PDFDocument.removePage` cannot be called';\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return RemovePageFromEmptyDocumentError;\n}(Error);\nexports.RemovePageFromEmptyDocumentError = RemovePageFromEmptyDocumentError;\nvar NoSuchFieldError = /** @class */function (_super) {\n  tslib_1.__extends(NoSuchFieldError, _super);\n  function NoSuchFieldError(name) {\n    var _this = this;\n    var msg = \"PDFDocument has no form field with the name \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return NoSuchFieldError;\n}(Error);\nexports.NoSuchFieldError = NoSuchFieldError;\nvar UnexpectedFieldTypeError = /** @class */function (_super) {\n  tslib_1.__extends(UnexpectedFieldTypeError, _super);\n  function UnexpectedFieldTypeError(name, expected, actual) {\n    var _a, _b;\n    var _this = this;\n    var expectedType = expected === null || expected === void 0 ? void 0 : expected.name;\n    var actualType = (_b = (_a = actual === null || actual === void 0 ? void 0 : actual.constructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : actual;\n    var msg = \"Expected field \\\"\" + name + \"\\\" to be of type \" + expectedType + \", \" + (\"but it is actually of type \" + actualType);\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnexpectedFieldTypeError;\n}(Error);\nexports.UnexpectedFieldTypeError = UnexpectedFieldTypeError;\nvar MissingOnValueCheckError = /** @class */function (_super) {\n  tslib_1.__extends(MissingOnValueCheckError, _super);\n  function MissingOnValueCheckError(onValue) {\n    var _this = this;\n    var msg = \"Failed to select check box due to missing onValue: \\\"\" + onValue + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingOnValueCheckError;\n}(Error);\nexports.MissingOnValueCheckError = MissingOnValueCheckError;\nvar FieldAlreadyExistsError = /** @class */function (_super) {\n  tslib_1.__extends(FieldAlreadyExistsError, _super);\n  function FieldAlreadyExistsError(name) {\n    var _this = this;\n    var msg = \"A field already exists with the specified name: \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FieldAlreadyExistsError;\n}(Error);\nexports.FieldAlreadyExistsError = FieldAlreadyExistsError;\nvar InvalidFieldNamePartError = /** @class */function (_super) {\n  tslib_1.__extends(InvalidFieldNamePartError, _super);\n  function InvalidFieldNamePartError(namePart) {\n    var _this = this;\n    var msg = \"Field name contains invalid component: \\\"\" + namePart + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidFieldNamePartError;\n}(Error);\nexports.InvalidFieldNamePartError = InvalidFieldNamePartError;\nvar FieldExistsAsNonTerminalError = /** @class */function (_super) {\n  tslib_1.__extends(FieldExistsAsNonTerminalError, _super);\n  function FieldExistsAsNonTerminalError(name) {\n    var _this = this;\n    var msg = \"A non-terminal field already exists with the specified name: \\\"\" + name + \"\\\"\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return FieldExistsAsNonTerminalError;\n}(Error);\nexports.FieldExistsAsNonTerminalError = FieldExistsAsNonTerminalError;\nvar RichTextFieldReadError = /** @class */function (_super) {\n  tslib_1.__extends(RichTextFieldReadError, _super);\n  function RichTextFieldReadError(fieldName) {\n    var _this = this;\n    var msg = \"Reading rich text fields is not supported: Attempted to read rich text field: \" + fieldName;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return RichTextFieldReadError;\n}(Error);\nexports.RichTextFieldReadError = RichTextFieldReadError;\nvar CombedTextLayoutError = /** @class */function (_super) {\n  tslib_1.__extends(CombedTextLayoutError, _super);\n  function CombedTextLayoutError(lineLength, cellCount) {\n    var _this = this;\n    var msg = \"Failed to layout combed text as lineLength=\" + lineLength + \" is greater than cellCount=\" + cellCount;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return CombedTextLayoutError;\n}(Error);\nexports.CombedTextLayoutError = CombedTextLayoutError;\nvar ExceededMaxLengthError = /** @class */function (_super) {\n  tslib_1.__extends(ExceededMaxLengthError, _super);\n  function ExceededMaxLengthError(textLength, maxLength, name) {\n    var _this = this;\n    var msg = \"Attempted to set text with length=\" + textLength + \" for TextField with maxLength=\" + maxLength + \" and name=\" + name;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ExceededMaxLengthError;\n}(Error);\nexports.ExceededMaxLengthError = ExceededMaxLengthError;\nvar InvalidMaxLengthError = /** @class */function (_super) {\n  tslib_1.__extends(InvalidMaxLengthError, _super);\n  function InvalidMaxLengthError(textLength, maxLength, name) {\n    var _this = this;\n    var msg = \"Attempted to set maxLength=\" + maxLength + \", which is less than \" + textLength + \", the length of this field's current value (name=\" + name + \")\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidMaxLengthError;\n}(Error);\nexports.InvalidMaxLengthError = InvalidMaxLengthError;","map":{"version":3,"names":["EncryptedPDFError","_super","tslib_1","__extends","_this","msg","call","Error","exports","FontkitNotRegisteredError","ForeignPageError","RemovePageFromEmptyDocumentError","NoSuchFieldError","name","UnexpectedFieldTypeError","expected","actual","expectedType","actualType","_b","_a","constructor","MissingOnValueCheckError","onValue","FieldAlreadyExistsError","InvalidFieldNamePartError","namePart","FieldExistsAsNonTerminalError","RichTextFieldReadError","fieldName","CombedTextLayoutError","lineLength","cellCount","ExceededMaxLengthError","textLength","maxLength","InvalidMaxLengthError"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/api/errors.ts"],"sourcesContent":["// tslint:disable: max-classes-per-file\n\n// TODO: Include link to documentation with example\nexport class EncryptedPDFError extends Error {\n  constructor() {\n    const msg =\n      'Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.';\n    super(msg);\n  }\n}\n\n// TODO: Include link to documentation with example\nexport class FontkitNotRegisteredError extends Error {\n  constructor() {\n    const msg =\n      'Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.';\n    super(msg);\n  }\n}\n\n// TODO: Include link to documentation with example\nexport class ForeignPageError extends Error {\n  constructor() {\n    const msg =\n      'A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.';\n    super(msg);\n  }\n}\n\n// TODO: Include link to documentation with example\nexport class RemovePageFromEmptyDocumentError extends Error {\n  constructor() {\n    const msg =\n      'PDFDocument has no pages so `PDFDocument.removePage` cannot be called';\n    super(msg);\n  }\n}\n\nexport class NoSuchFieldError extends Error {\n  constructor(name: string) {\n    const msg = `PDFDocument has no form field with the name \"${name}\"`;\n    super(msg);\n  }\n}\n\nexport class UnexpectedFieldTypeError extends Error {\n  constructor(name: string, expected: any, actual: any) {\n    const expectedType = expected?.name;\n    const actualType = actual?.constructor?.name ?? actual;\n    const msg =\n      `Expected field \"${name}\" to be of type ${expectedType}, ` +\n      `but it is actually of type ${actualType}`;\n    super(msg);\n  }\n}\n\nexport class MissingOnValueCheckError extends Error {\n  constructor(onValue: any) {\n    const msg = `Failed to select check box due to missing onValue: \"${onValue}\"`;\n    super(msg);\n  }\n}\n\nexport class FieldAlreadyExistsError extends Error {\n  constructor(name: string) {\n    const msg = `A field already exists with the specified name: \"${name}\"`;\n    super(msg);\n  }\n}\n\nexport class InvalidFieldNamePartError extends Error {\n  constructor(namePart: string) {\n    const msg = `Field name contains invalid component: \"${namePart}\"`;\n    super(msg);\n  }\n}\n\nexport class FieldExistsAsNonTerminalError extends Error {\n  constructor(name: string) {\n    const msg = `A non-terminal field already exists with the specified name: \"${name}\"`;\n    super(msg);\n  }\n}\n\nexport class RichTextFieldReadError extends Error {\n  constructor(fieldName: string) {\n    const msg = `Reading rich text fields is not supported: Attempted to read rich text field: ${fieldName}`;\n    super(msg);\n  }\n}\n\nexport class CombedTextLayoutError extends Error {\n  constructor(lineLength: number, cellCount: number) {\n    const msg = `Failed to layout combed text as lineLength=${lineLength} is greater than cellCount=${cellCount}`;\n    super(msg);\n  }\n}\n\nexport class ExceededMaxLengthError extends Error {\n  constructor(textLength: number, maxLength: number, name: string) {\n    const msg = `Attempted to set text with length=${textLength} for TextField with maxLength=${maxLength} and name=${name}`;\n    super(msg);\n  }\n}\n\nexport class InvalidMaxLengthError extends Error {\n  constructor(textLength: number, maxLength: number, name: string) {\n    const msg = `Attempted to set maxLength=${maxLength}, which is less than ${textLength}, the length of this field's current value (name=${name})`;\n    super(msg);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}