{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/contexts/context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the UserContext\nexport const useUser = () => {\n  _s();\n  return useContext(UserContext);\n};\n\n// Provider component\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  // Load user's email and role from session storage on component mount\n  const [userEmail, setUserEmailState] = useState(() => {\n    const storedEmail = sessionStorage.getItem('userEmail');\n    return storedEmail || \"\";\n  });\n  const [userRole, setUserRoleState] = useState(() => {\n    const storedRole = sessionStorage.getItem('userRole');\n    return storedRole || \"\";\n  });\n  const setUserEmail = newEmail => {\n    setUserEmailState(newEmail);\n    sessionStorage.setItem('userEmail', newEmail);\n  };\n  const setUserRole = newRole => {\n    setUserRoleState(newRole);\n    sessionStorage.setItem('userRole', newRole);\n  };\n  const resetUser = () => {\n    setUserEmail(\"\");\n    setUserRole(\"\");\n    sessionStorage.removeItem('userEmail');\n    sessionStorage.removeItem('userRole');\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userEmail,\n      userRole,\n      setUserEmail,\n      setUserRole,\n      resetUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"r546eyUbxncGMh1VEi/mXQ8s2+E=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","UserContext","useUser","_s","UserProvider","children","_s2","userEmail","setUserEmailState","storedEmail","sessionStorage","getItem","userRole","setUserRoleState","storedRole","setUserEmail","newEmail","setItem","setUserRole","newRole","resetUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/contexts/context.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\n\n// Create context\nconst UserContext = createContext();\n\n// Custom hook to use the UserContext\nexport const useUser = () => useContext(UserContext);\n\n// Provider component\nexport const UserProvider = ({ children }) => {\n  // Load user's email and role from session storage on component mount\n  const [userEmail, setUserEmailState] = useState(() => {\n    const storedEmail = sessionStorage.getItem('userEmail');\n    return storedEmail || \"\";\n  });\n\n  const [userRole, setUserRoleState] = useState(() => {\n    const storedRole = sessionStorage.getItem('userRole');\n    return storedRole || \"\";\n  });\n\n  const setUserEmail = (newEmail) => {\n    setUserEmailState(newEmail);\n    sessionStorage.setItem('userEmail', newEmail);\n  };\n\n  const setUserRole = (newRole) => {\n    setUserRoleState(newRole);\n    sessionStorage.setItem('userRole', newRole);\n  };\n\n  const resetUser = () => {\n    setUserEmail(\"\");\n    setUserRole(\"\");\n    sessionStorage.removeItem('userEmail');\n    sessionStorage.removeItem('userRole');\n  };\n\n  return (\n    <UserContext.Provider value={{ userEmail, userRole, setUserEmail, setUserRole, resetUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C;EACA,MAAM,CAACC,SAAS,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACpD,MAAMY,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;IACvD,OAAOF,WAAW,IAAI,EAAE;EAC1B,CAAC,CAAC;EAEF,MAAM,CAACG,QAAQ,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,MAAM;IAClD,MAAMiB,UAAU,GAAGJ,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACrD,OAAOG,UAAU,IAAI,EAAE;EACzB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IACjCR,iBAAiB,CAACQ,QAAQ,CAAC;IAC3BN,cAAc,CAACO,OAAO,CAAC,WAAW,EAAED,QAAQ,CAAC;EAC/C,CAAC;EAED,MAAME,WAAW,GAAIC,OAAO,IAAK;IAC/BN,gBAAgB,CAACM,OAAO,CAAC;IACzBT,cAAc,CAACO,OAAO,CAAC,UAAU,EAAEE,OAAO,CAAC;EAC7C,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBL,YAAY,CAAC,EAAE,CAAC;IAChBG,WAAW,CAAC,EAAE,CAAC;IACfR,cAAc,CAACW,UAAU,CAAC,WAAW,CAAC;IACtCX,cAAc,CAACW,UAAU,CAAC,UAAU,CAAC;EACvC,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,SAAS;MAAEK,QAAQ;MAAEG,YAAY;MAAEG,WAAW;MAAEE;IAAU,CAAE;IAAAf,QAAA,EACxFA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,GAAA,CAlCWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}