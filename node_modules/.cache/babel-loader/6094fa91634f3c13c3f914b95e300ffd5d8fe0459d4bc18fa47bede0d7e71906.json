{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar PDFCrossRefSection_1 = tslib_1.__importDefault(require(\"../document/PDFCrossRefSection\"));\nvar PDFHeader_1 = tslib_1.__importDefault(require(\"../document/PDFHeader\"));\nvar PDFTrailer_1 = tslib_1.__importDefault(require(\"../document/PDFTrailer\"));\nvar PDFTrailerDict_1 = tslib_1.__importDefault(require(\"../document/PDFTrailerDict\"));\nvar PDFObjectStream_1 = tslib_1.__importDefault(require(\"../structures/PDFObjectStream\"));\nvar CharCodes_1 = tslib_1.__importDefault(require(\"../syntax/CharCodes\"));\nvar utils_1 = require(\"../../utils\");\nvar PDFWriter = /** @class */function () {\n  function PDFWriter(context, objectsPerTick) {\n    var _this = this;\n    this.parsedObjects = 0;\n    this.shouldWaitForTick = function (n) {\n      _this.parsedObjects += n;\n      return _this.parsedObjects % _this.objectsPerTick === 0;\n    };\n    this.context = context;\n    this.objectsPerTick = objectsPerTick;\n  }\n  PDFWriter.prototype.serializeToBuffer = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a, size, header, indirectObjects, xref, trailerDict, trailer, offset, buffer, idx, len, _b, ref, object, objectNumber, generationNumber, n;\n      return tslib_1.__generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.computeBufferSize()];\n          case 1:\n            _a = _c.sent(), size = _a.size, header = _a.header, indirectObjects = _a.indirectObjects, xref = _a.xref, trailerDict = _a.trailerDict, trailer = _a.trailer;\n            offset = 0;\n            buffer = new Uint8Array(size);\n            offset += header.copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes_1.default.Newline;\n            buffer[offset++] = CharCodes_1.default.Newline;\n            idx = 0, len = indirectObjects.length;\n            _c.label = 2;\n          case 2:\n            if (!(idx < len)) return [3 /*break*/, 5];\n            _b = indirectObjects[idx], ref = _b[0], object = _b[1];\n            objectNumber = String(ref.objectNumber);\n            offset += utils_1.copyStringIntoBuffer(objectNumber, buffer, offset);\n            buffer[offset++] = CharCodes_1.default.Space;\n            generationNumber = String(ref.generationNumber);\n            offset += utils_1.copyStringIntoBuffer(generationNumber, buffer, offset);\n            buffer[offset++] = CharCodes_1.default.Space;\n            buffer[offset++] = CharCodes_1.default.o;\n            buffer[offset++] = CharCodes_1.default.b;\n            buffer[offset++] = CharCodes_1.default.j;\n            buffer[offset++] = CharCodes_1.default.Newline;\n            offset += object.copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes_1.default.Newline;\n            buffer[offset++] = CharCodes_1.default.e;\n            buffer[offset++] = CharCodes_1.default.n;\n            buffer[offset++] = CharCodes_1.default.d;\n            buffer[offset++] = CharCodes_1.default.o;\n            buffer[offset++] = CharCodes_1.default.b;\n            buffer[offset++] = CharCodes_1.default.j;\n            buffer[offset++] = CharCodes_1.default.Newline;\n            buffer[offset++] = CharCodes_1.default.Newline;\n            n = object instanceof PDFObjectStream_1.default ? object.getObjectsCount() : 1;\n            if (!this.shouldWaitForTick(n)) return [3 /*break*/, 4];\n            return [4 /*yield*/, utils_1.waitForTick()];\n          case 3:\n            _c.sent();\n            _c.label = 4;\n          case 4:\n            idx++;\n            return [3 /*break*/, 2];\n          case 5:\n            if (xref) {\n              offset += xref.copyBytesInto(buffer, offset);\n              buffer[offset++] = CharCodes_1.default.Newline;\n            }\n            if (trailerDict) {\n              offset += trailerDict.copyBytesInto(buffer, offset);\n              buffer[offset++] = CharCodes_1.default.Newline;\n              buffer[offset++] = CharCodes_1.default.Newline;\n            }\n            offset += trailer.copyBytesInto(buffer, offset);\n            return [2 /*return*/, buffer];\n        }\n      });\n    });\n  };\n  PDFWriter.prototype.computeIndirectObjectSize = function (_a) {\n    var ref = _a[0],\n      object = _a[1];\n    var refSize = ref.sizeInBytes() + 3; // 'R' -> 'obj\\n'\n    var objectSize = object.sizeInBytes() + 9; // '\\nendobj\\n\\n'\n    return refSize + objectSize;\n  };\n  PDFWriter.prototype.createTrailerDict = function () {\n    return this.context.obj({\n      Size: this.context.largestObjectNumber + 1,\n      Root: this.context.trailerInfo.Root,\n      Encrypt: this.context.trailerInfo.Encrypt,\n      Info: this.context.trailerInfo.Info,\n      ID: this.context.trailerInfo.ID\n    });\n  };\n  PDFWriter.prototype.computeBufferSize = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var header, size, xref, indirectObjects, idx, len, indirectObject, ref, xrefOffset, trailerDict, trailer;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            header = PDFHeader_1.default.forVersion(1, 7);\n            size = header.sizeInBytes() + 2;\n            xref = PDFCrossRefSection_1.default.create();\n            indirectObjects = this.context.enumerateIndirectObjects();\n            idx = 0, len = indirectObjects.length;\n            _a.label = 1;\n          case 1:\n            if (!(idx < len)) return [3 /*break*/, 4];\n            indirectObject = indirectObjects[idx];\n            ref = indirectObject[0];\n            xref.addEntry(ref, size);\n            size += this.computeIndirectObjectSize(indirectObject);\n            if (!this.shouldWaitForTick(1)) return [3 /*break*/, 3];\n            return [4 /*yield*/, utils_1.waitForTick()];\n          case 2:\n            _a.sent();\n            _a.label = 3;\n          case 3:\n            idx++;\n            return [3 /*break*/, 1];\n          case 4:\n            xrefOffset = size;\n            size += xref.sizeInBytes() + 1; // '\\n'\n            trailerDict = PDFTrailerDict_1.default.of(this.createTrailerDict());\n            size += trailerDict.sizeInBytes() + 2; // '\\n\\n'\n            trailer = PDFTrailer_1.default.forLastCrossRefSectionOffset(xrefOffset);\n            size += trailer.sizeInBytes();\n            return [2 /*return*/, {\n              size: size,\n              header: header,\n              indirectObjects: indirectObjects,\n              xref: xref,\n              trailerDict: trailerDict,\n              trailer: trailer\n            }];\n        }\n      });\n    });\n  };\n  PDFWriter.forContext = function (context, objectsPerTick) {\n    return new PDFWriter(context, objectsPerTick);\n  };\n  return PDFWriter;\n}();\nexports.default = PDFWriter;","map":{"version":3,"names":["PDFCrossRefSection_1","tslib_1","__importDefault","require","PDFHeader_1","PDFTrailer_1","PDFTrailerDict_1","PDFObjectStream_1","CharCodes_1","utils_1","PDFWriter","context","objectsPerTick","_this","parsedObjects","shouldWaitForTick","n","prototype","serializeToBuffer","computeBufferSize","_a","_c","sent","size","header","indirectObjects","xref","trailerDict","trailer","offset","buffer","Uint8Array","copyBytesInto","default","Newline","idx","len","length","_b","ref","object","objectNumber","String","copyStringIntoBuffer","Space","generationNumber","o","b","j","e","d","getObjectsCount","waitForTick","computeIndirectObjectSize","refSize","sizeInBytes","objectSize","createTrailerDict","obj","Size","largestObjectNumber","Root","trailerInfo","Encrypt","Info","ID","forVersion","create","enumerateIndirectObjects","indirectObject","addEntry","xrefOffset","of","forLastCrossRefSectionOffset","forContext","exports"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/writers/PDFWriter.ts"],"sourcesContent":["import PDFCrossRefSection from 'src/core/document/PDFCrossRefSection';\nimport PDFHeader from 'src/core/document/PDFHeader';\nimport PDFTrailer from 'src/core/document/PDFTrailer';\nimport PDFTrailerDict from 'src/core/document/PDFTrailerDict';\nimport PDFDict from 'src/core/objects/PDFDict';\nimport PDFObject from 'src/core/objects/PDFObject';\nimport PDFRef from 'src/core/objects/PDFRef';\nimport PDFContext from 'src/core/PDFContext';\nimport PDFObjectStream from 'src/core/structures/PDFObjectStream';\nimport CharCodes from 'src/core/syntax/CharCodes';\nimport { copyStringIntoBuffer, waitForTick } from 'src/utils';\n\nexport interface SerializationInfo {\n  size: number;\n  header: PDFHeader;\n  indirectObjects: [PDFRef, PDFObject][];\n  xref?: PDFCrossRefSection;\n  trailerDict?: PDFTrailerDict;\n  trailer: PDFTrailer;\n}\n\nclass PDFWriter {\n  static forContext = (context: PDFContext, objectsPerTick: number) =>\n    new PDFWriter(context, objectsPerTick);\n\n  protected readonly context: PDFContext;\n\n  protected readonly objectsPerTick: number;\n  private parsedObjects = 0;\n\n  protected constructor(context: PDFContext, objectsPerTick: number) {\n    this.context = context;\n    this.objectsPerTick = objectsPerTick;\n  }\n\n  async serializeToBuffer(): Promise<Uint8Array> {\n    const {\n      size,\n      header,\n      indirectObjects,\n      xref,\n      trailerDict,\n      trailer,\n    } = await this.computeBufferSize();\n\n    let offset = 0;\n    const buffer = new Uint8Array(size);\n\n    offset += header.copyBytesInto(buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.Newline;\n\n    for (let idx = 0, len = indirectObjects.length; idx < len; idx++) {\n      const [ref, object] = indirectObjects[idx];\n\n      const objectNumber = String(ref.objectNumber);\n      offset += copyStringIntoBuffer(objectNumber, buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n\n      const generationNumber = String(ref.generationNumber);\n      offset += copyStringIntoBuffer(generationNumber, buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n\n      buffer[offset++] = CharCodes.o;\n      buffer[offset++] = CharCodes.b;\n      buffer[offset++] = CharCodes.j;\n      buffer[offset++] = CharCodes.Newline;\n\n      offset += object.copyBytesInto(buffer, offset);\n\n      buffer[offset++] = CharCodes.Newline;\n      buffer[offset++] = CharCodes.e;\n      buffer[offset++] = CharCodes.n;\n      buffer[offset++] = CharCodes.d;\n      buffer[offset++] = CharCodes.o;\n      buffer[offset++] = CharCodes.b;\n      buffer[offset++] = CharCodes.j;\n      buffer[offset++] = CharCodes.Newline;\n      buffer[offset++] = CharCodes.Newline;\n\n      const n =\n        object instanceof PDFObjectStream ? object.getObjectsCount() : 1;\n      if (this.shouldWaitForTick(n)) await waitForTick();\n    }\n\n    if (xref) {\n      offset += xref.copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Newline;\n    }\n\n    if (trailerDict) {\n      offset += trailerDict.copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Newline;\n      buffer[offset++] = CharCodes.Newline;\n    }\n\n    offset += trailer.copyBytesInto(buffer, offset);\n\n    return buffer;\n  }\n\n  protected computeIndirectObjectSize([ref, object]: [\n    PDFRef,\n    PDFObject,\n  ]): number {\n    const refSize = ref.sizeInBytes() + 3; // 'R' -> 'obj\\n'\n    const objectSize = object.sizeInBytes() + 9; // '\\nendobj\\n\\n'\n    return refSize + objectSize;\n  }\n\n  protected createTrailerDict(): PDFDict {\n    return this.context.obj({\n      Size: this.context.largestObjectNumber + 1,\n      Root: this.context.trailerInfo.Root,\n      Encrypt: this.context.trailerInfo.Encrypt,\n      Info: this.context.trailerInfo.Info,\n      ID: this.context.trailerInfo.ID,\n    });\n  }\n\n  protected async computeBufferSize(): Promise<SerializationInfo> {\n    const header = PDFHeader.forVersion(1, 7);\n\n    let size = header.sizeInBytes() + 2;\n\n    const xref = PDFCrossRefSection.create();\n\n    const indirectObjects = this.context.enumerateIndirectObjects();\n\n    for (let idx = 0, len = indirectObjects.length; idx < len; idx++) {\n      const indirectObject = indirectObjects[idx];\n      const [ref] = indirectObject;\n      xref.addEntry(ref, size);\n      size += this.computeIndirectObjectSize(indirectObject);\n      if (this.shouldWaitForTick(1)) await waitForTick();\n    }\n\n    const xrefOffset = size;\n    size += xref.sizeInBytes() + 1; // '\\n'\n\n    const trailerDict = PDFTrailerDict.of(this.createTrailerDict());\n    size += trailerDict.sizeInBytes() + 2; // '\\n\\n'\n\n    const trailer = PDFTrailer.forLastCrossRefSectionOffset(xrefOffset);\n    size += trailer.sizeInBytes();\n\n    return { size, header, indirectObjects, xref, trailerDict, trailer };\n  }\n\n  protected shouldWaitForTick = (n: number) => {\n    this.parsedObjects += n;\n    return this.parsedObjects % this.objectsPerTick === 0;\n  };\n}\n\nexport default PDFWriter;\n"],"mappings":";;;;;;AAAA,IAAAA,oBAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAH,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAJ,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAG,gBAAA,GAAAL,OAAA,CAAAC,eAAA,CAAAC,OAAA;AAKA,IAAAI,iBAAA,GAAAN,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAK,WAAA,GAAAP,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAM,OAAA,GAAAN,OAAA;AAWA,IAAAO,SAAA;EASE,SAAAA,UAAsBC,OAAmB,EAAEC,cAAsB;IAAjE,IAAAC,KAAA;IAFQ,KAAAC,aAAa,GAAG,CAAC;IAyHf,KAAAC,iBAAiB,GAAG,UAACC,CAAS;MACtCH,KAAI,CAACC,aAAa,IAAIE,CAAC;MACvB,OAAOH,KAAI,CAACC,aAAa,GAAGD,KAAI,CAACD,cAAc,KAAK,CAAC;IACvD,CAAC;IAzHC,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,cAAc,GAAGA,cAAc;EACtC;EAEMF,SAAA,CAAAO,SAAA,CAAAC,iBAAiB,GAAvB;;;;;;YAQM,qBAAM,IAAI,CAACC,iBAAiB,EAAE;;YAP5BC,EAAA,GAOFC,EAAA,CAAAC,IAAA,EAA8B,EANhCC,IAAI,GAAAH,EAAA,CAAAG,IAAA,EACJC,MAAM,GAAAJ,EAAA,CAAAI,MAAA,EACNC,eAAe,GAAAL,EAAA,CAAAK,eAAA,EACfC,IAAI,GAAAN,EAAA,CAAAM,IAAA,EACJC,WAAW,GAAAP,EAAA,CAAAO,WAAA,EACXC,OAAO,GAAAR,EAAA,CAAAQ,OAAA;YAGLC,MAAM,GAAG,CAAC;YACRC,MAAM,GAAG,IAAIC,UAAU,CAACR,IAAI,CAAC;YAEnCM,MAAM,IAAIL,MAAM,CAACQ,aAAa,CAACF,MAAM,EAAED,MAAM,CAAC;YAC9CC,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;YACpCJ,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;YAE3BC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGX,eAAe,CAACY,MAAM;;;kBAAEF,GAAG,GAAGC,GAAG;YACjDE,EAAA,GAAgBb,eAAe,CAACU,GAAG,CAAC,EAAnCI,GAAG,GAAAD,EAAA,KAAEE,MAAM,GAAAF,EAAA;YAEZG,YAAY,GAAGC,MAAM,CAACH,GAAG,CAACE,YAAY,CAAC;YAC7CZ,MAAM,IAAIpB,OAAA,CAAAkC,oBAAoB,CAACF,YAAY,EAAEX,MAAM,EAAED,MAAM,CAAC;YAC5DC,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACW,KAAK;YAE5BC,gBAAgB,GAAGH,MAAM,CAACH,GAAG,CAACM,gBAAgB,CAAC;YACrDhB,MAAM,IAAIpB,OAAA,CAAAkC,oBAAoB,CAACE,gBAAgB,EAAEf,MAAM,EAAED,MAAM,CAAC;YAChEC,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACW,KAAK;YAElCd,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACa,CAAC;YAC9BhB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACc,CAAC;YAC9BjB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACe,CAAC;YAC9BlB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;YAEpCL,MAAM,IAAIW,MAAM,CAACR,aAAa,CAACF,MAAM,EAAED,MAAM,CAAC;YAE9CC,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;YACpCJ,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACgB,CAAC;YAC9BnB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACjB,CAAC;YAC9Bc,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACiB,CAAC;YAC9BpB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACa,CAAC;YAC9BhB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACc,CAAC;YAC9BjB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACe,CAAC;YAC9BlB,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;YACpCJ,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;YAE9BlB,CAAC,GACLwB,MAAM,YAAYjC,iBAAA,CAAA0B,OAAe,GAAGO,MAAM,CAACW,eAAe,EAAE,GAAG,CAAC;iBAC9D,IAAI,CAACpC,iBAAiB,CAACC,CAAC,CAAC,EAAzB;YAA2B,qBAAMP,OAAA,CAAA2C,WAAW,EAAE;;YAAnB/B,EAAA,CAAAC,IAAA,EAAmB;;;YA9BOa,GAAG,EAAE;;;YAiChE,IAAIT,IAAI,EAAE;cACRG,MAAM,IAAIH,IAAI,CAACM,aAAa,CAACF,MAAM,EAAED,MAAM,CAAC;cAC5CC,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;;YAGtC,IAAIP,WAAW,EAAE;cACfE,MAAM,IAAIF,WAAW,CAACK,aAAa,CAACF,MAAM,EAAED,MAAM,CAAC;cACnDC,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;cACpCJ,MAAM,CAACD,MAAM,EAAE,CAAC,GAAGrB,WAAA,CAAAyB,OAAS,CAACC,OAAO;;YAGtCL,MAAM,IAAID,OAAO,CAACI,aAAa,CAACF,MAAM,EAAED,MAAM,CAAC;YAE/C,sBAAOC,MAAM;;;;GACd;EAESpB,SAAA,CAAAO,SAAA,CAAAoC,yBAAyB,GAAnC,UAAoCjC,EAGnC;QAHoCmB,GAAG,GAAAnB,EAAA;MAAEoB,MAAM,GAAApB,EAAA;IAI9C,IAAMkC,OAAO,GAAGf,GAAG,CAACgB,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;IACvC,IAAMC,UAAU,GAAGhB,MAAM,CAACe,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;IAC7C,OAAOD,OAAO,GAAGE,UAAU;EAC7B,CAAC;EAES9C,SAAA,CAAAO,SAAA,CAAAwC,iBAAiB,GAA3B;IACE,OAAO,IAAI,CAAC9C,OAAO,CAAC+C,GAAG,CAAC;MACtBC,IAAI,EAAE,IAAI,CAAChD,OAAO,CAACiD,mBAAmB,GAAG,CAAC;MAC1CC,IAAI,EAAE,IAAI,CAAClD,OAAO,CAACmD,WAAW,CAACD,IAAI;MACnCE,OAAO,EAAE,IAAI,CAACpD,OAAO,CAACmD,WAAW,CAACC,OAAO;MACzCC,IAAI,EAAE,IAAI,CAACrD,OAAO,CAACmD,WAAW,CAACE,IAAI;MACnCC,EAAE,EAAE,IAAI,CAACtD,OAAO,CAACmD,WAAW,CAACG;KAC9B,CAAC;EACJ,CAAC;EAEevD,SAAA,CAAAO,SAAA,CAAAE,iBAAiB,GAAjC;;;;;;YACQK,MAAM,GAAGpB,WAAA,CAAA6B,OAAS,CAACiC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;YAErC3C,IAAI,GAAGC,MAAM,CAAC+B,WAAW,EAAE,GAAG,CAAC;YAE7B7B,IAAI,GAAG1B,oBAAA,CAAAiC,OAAkB,CAACkC,MAAM,EAAE;YAElC1C,eAAe,GAAG,IAAI,CAACd,OAAO,CAACyD,wBAAwB,EAAE;YAEtDjC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGX,eAAe,CAACY,MAAM;;;kBAAEF,GAAG,GAAGC,GAAG;YACjDiC,cAAc,GAAG5C,eAAe,CAACU,GAAG,CAAC;YACpCI,GAAG,GAAI8B,cAAc,GAAlB;YACV3C,IAAI,CAAC4C,QAAQ,CAAC/B,GAAG,EAAEhB,IAAI,CAAC;YACxBA,IAAI,IAAI,IAAI,CAAC8B,yBAAyB,CAACgB,cAAc,CAAC;iBAClD,IAAI,CAACtD,iBAAiB,CAAC,CAAC,CAAC,EAAzB;YAA2B,qBAAMN,OAAA,CAAA2C,WAAW,EAAE;;YAAnBhC,EAAA,CAAAE,IAAA,EAAmB;;;YALOa,GAAG,EAAE;;;YAQ1DoC,UAAU,GAAGhD,IAAI;YACvBA,IAAI,IAAIG,IAAI,CAAC6B,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;YAE1B5B,WAAW,GAAGrB,gBAAA,CAAA2B,OAAc,CAACuC,EAAE,CAAC,IAAI,CAACf,iBAAiB,EAAE,CAAC;YAC/DlC,IAAI,IAAII,WAAW,CAAC4B,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;YAEjC3B,OAAO,GAAGvB,YAAA,CAAA4B,OAAU,CAACwC,4BAA4B,CAACF,UAAU,CAAC;YACnEhD,IAAI,IAAIK,OAAO,CAAC2B,WAAW,EAAE;YAE7B,sBAAO;cAAEhC,IAAI,EAAAA,IAAA;cAAEC,MAAM,EAAAA,MAAA;cAAEC,eAAe,EAAAA,eAAA;cAAEC,IAAI,EAAAA,IAAA;cAAEC,WAAW,EAAAA,WAAA;cAAEC,OAAO,EAAAA;YAAA,CAAE;;;;GACrE;EA7HMlB,SAAA,CAAAgE,UAAU,GAAG,UAAC/D,OAAmB,EAAEC,cAAsB;IAC9D,WAAIF,SAAS,CAACC,OAAO,EAAEC,cAAc,CAAC;EAAtC,CAAsC;EAkI1C,OAAAF,SAAC;CAAA,CApID;AAsIAiE,OAAA,CAAA1C,OAAA,GAAevB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}