{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.endMarkedContent = exports.beginMarkedContent = exports.setStrokingCmykColor = exports.setFillingCmykColor = exports.setStrokingRgbColor = exports.setFillingRgbColor = exports.setStrokingGrayscaleColor = exports.setFillingGrayscaleColor = exports.drawObject = exports.rotateAndSkewTextDegreesAndTranslate = exports.rotateAndSkewTextRadiansAndTranslate = exports.setTextMatrix = exports.setTextRenderingMode = exports.TextRenderingMode = exports.setTextRise = exports.setLineHeight = exports.setCharacterSqueeze = exports.setWordSpacing = exports.setCharacterSpacing = exports.setFontAndSize = exports.endText = exports.beginText = exports.showText = exports.moveText = exports.nextLine = exports.endPath = exports.fillAndStroke = exports.fill = exports.stroke = exports.square = exports.rectangle = exports.lineTo = exports.moveTo = exports.closePath = exports.appendQuadraticCurve = exports.appendBezierCurve = exports.setLineWidth = exports.popGraphicsState = exports.pushGraphicsState = exports.setGraphicsState = exports.setLineJoin = exports.LineJoinStyle = exports.setLineCap = exports.LineCapStyle = exports.restoreDashPattern = exports.setDashPattern = exports.skewDegrees = exports.skewRadians = exports.rotateDegrees = exports.rotateRadians = exports.scale = exports.translate = exports.concatTransformationMatrix = exports.clipEvenOdd = exports.clip = void 0;\nvar objects_1 = require(\"./objects\");\nvar rotations_1 = require(\"./rotations\");\nvar core_1 = require(\"../core\");\n/* ==================== Clipping Path Operators ==================== */\nexports.clip = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.ClipNonZero);\n};\nexports.clipEvenOdd = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.ClipEvenOdd);\n};\n/* ==================== Graphics State Operators ==================== */\nvar cos = Math.cos,\n  sin = Math.sin,\n  tan = Math.tan;\nexports.concatTransformationMatrix = function (a, b, c, d, e, f) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.ConcatTransformationMatrix, [objects_1.asPDFNumber(a), objects_1.asPDFNumber(b), objects_1.asPDFNumber(c), objects_1.asPDFNumber(d), objects_1.asPDFNumber(e), objects_1.asPDFNumber(f)]);\n};\nexports.translate = function (xPos, yPos) {\n  return exports.concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n};\nexports.scale = function (xPos, yPos) {\n  return exports.concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n};\nexports.rotateRadians = function (angle) {\n  return exports.concatTransformationMatrix(cos(objects_1.asNumber(angle)), sin(objects_1.asNumber(angle)), -sin(objects_1.asNumber(angle)), cos(objects_1.asNumber(angle)), 0, 0);\n};\nexports.rotateDegrees = function (angle) {\n  return exports.rotateRadians(rotations_1.degreesToRadians(objects_1.asNumber(angle)));\n};\nexports.skewRadians = function (xSkewAngle, ySkewAngle) {\n  return exports.concatTransformationMatrix(1, tan(objects_1.asNumber(xSkewAngle)), tan(objects_1.asNumber(ySkewAngle)), 1, 0, 0);\n};\nexports.skewDegrees = function (xSkewAngle, ySkewAngle) {\n  return exports.skewRadians(rotations_1.degreesToRadians(objects_1.asNumber(xSkewAngle)), rotations_1.degreesToRadians(objects_1.asNumber(ySkewAngle)));\n};\nexports.setDashPattern = function (dashArray, dashPhase) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineDashPattern, [\"[\" + dashArray.map(objects_1.asPDFNumber).join(' ') + \"]\", objects_1.asPDFNumber(dashPhase)]);\n};\nexports.restoreDashPattern = function () {\n  return exports.setDashPattern([], 0);\n};\nvar LineCapStyle;\n(function (LineCapStyle) {\n  LineCapStyle[LineCapStyle[\"Butt\"] = 0] = \"Butt\";\n  LineCapStyle[LineCapStyle[\"Round\"] = 1] = \"Round\";\n  LineCapStyle[LineCapStyle[\"Projecting\"] = 2] = \"Projecting\";\n})(LineCapStyle = exports.LineCapStyle || (exports.LineCapStyle = {}));\nexports.setLineCap = function (style) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineCapStyle, [objects_1.asPDFNumber(style)]);\n};\nvar LineJoinStyle;\n(function (LineJoinStyle) {\n  LineJoinStyle[LineJoinStyle[\"Miter\"] = 0] = \"Miter\";\n  LineJoinStyle[LineJoinStyle[\"Round\"] = 1] = \"Round\";\n  LineJoinStyle[LineJoinStyle[\"Bevel\"] = 2] = \"Bevel\";\n})(LineJoinStyle = exports.LineJoinStyle || (exports.LineJoinStyle = {}));\nexports.setLineJoin = function (style) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineJoinStyle, [objects_1.asPDFNumber(style)]);\n};\nexports.setGraphicsState = function (state) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetGraphicsStateParams, [objects_1.asPDFName(state)]);\n};\nexports.pushGraphicsState = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.PushGraphicsState);\n};\nexports.popGraphicsState = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.PopGraphicsState);\n};\nexports.setLineWidth = function (width) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetLineWidth, [objects_1.asPDFNumber(width)]);\n};\n/* ==================== Path Construction Operators ==================== */\nexports.appendBezierCurve = function (x1, y1, x2, y2, x3, y3) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.AppendBezierCurve, [objects_1.asPDFNumber(x1), objects_1.asPDFNumber(y1), objects_1.asPDFNumber(x2), objects_1.asPDFNumber(y2), objects_1.asPDFNumber(x3), objects_1.asPDFNumber(y3)]);\n};\nexports.appendQuadraticCurve = function (x1, y1, x2, y2) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.CurveToReplicateInitialPoint, [objects_1.asPDFNumber(x1), objects_1.asPDFNumber(y1), objects_1.asPDFNumber(x2), objects_1.asPDFNumber(y2)]);\n};\nexports.closePath = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.ClosePath);\n};\nexports.moveTo = function (xPos, yPos) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.MoveTo, [objects_1.asPDFNumber(xPos), objects_1.asPDFNumber(yPos)]);\n};\nexports.lineTo = function (xPos, yPos) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.LineTo, [objects_1.asPDFNumber(xPos), objects_1.asPDFNumber(yPos)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\nexports.rectangle = function (xPos, yPos, width, height) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.AppendRectangle, [objects_1.asPDFNumber(xPos), objects_1.asPDFNumber(yPos), objects_1.asPDFNumber(width), objects_1.asPDFNumber(height)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\nexports.square = function (xPos, yPos, size) {\n  return exports.rectangle(xPos, yPos, size, size);\n};\n/* ==================== Path Painting Operators ==================== */\nexports.stroke = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokePath);\n};\nexports.fill = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.FillNonZero);\n};\nexports.fillAndStroke = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.FillNonZeroAndStroke);\n};\nexports.endPath = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.EndPath);\n};\n/* ==================== Text Positioning Operators ==================== */\nexports.nextLine = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.NextLine);\n};\nexports.moveText = function (x, y) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.MoveText, [objects_1.asPDFNumber(x), objects_1.asPDFNumber(y)]);\n};\n/* ==================== Text Showing Operators ==================== */\nexports.showText = function (text) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.ShowText, [text]);\n};\n/* ==================== Text State Operators ==================== */\nexports.beginText = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.BeginText);\n};\nexports.endText = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.EndText);\n};\nexports.setFontAndSize = function (name, size) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetFontAndSize, [objects_1.asPDFName(name), objects_1.asPDFNumber(size)]);\n};\nexports.setCharacterSpacing = function (spacing) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetCharacterSpacing, [objects_1.asPDFNumber(spacing)]);\n};\nexports.setWordSpacing = function (spacing) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetWordSpacing, [objects_1.asPDFNumber(spacing)]);\n};\n/** @param squeeze horizontal character spacing */\nexports.setCharacterSqueeze = function (squeeze) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextHorizontalScaling, [objects_1.asPDFNumber(squeeze)]);\n};\nexports.setLineHeight = function (lineHeight) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextLineHeight, [objects_1.asPDFNumber(lineHeight)]);\n};\nexports.setTextRise = function (rise) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextRise, [objects_1.asPDFNumber(rise)]);\n};\nvar TextRenderingMode;\n(function (TextRenderingMode) {\n  TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n  TextRenderingMode[TextRenderingMode[\"Outline\"] = 1] = \"Outline\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutline\"] = 2] = \"FillAndOutline\";\n  TextRenderingMode[TextRenderingMode[\"Invisible\"] = 3] = \"Invisible\";\n  TextRenderingMode[TextRenderingMode[\"FillAndClip\"] = 4] = \"FillAndClip\";\n  TextRenderingMode[TextRenderingMode[\"OutlineAndClip\"] = 5] = \"OutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutlineAndClip\"] = 6] = \"FillAndOutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode = exports.TextRenderingMode || (exports.TextRenderingMode = {}));\nexports.setTextRenderingMode = function (mode) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextRenderingMode, [objects_1.asPDFNumber(mode)]);\n};\nexports.setTextMatrix = function (a, b, c, d, e, f) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.SetTextMatrix, [objects_1.asPDFNumber(a), objects_1.asPDFNumber(b), objects_1.asPDFNumber(c), objects_1.asPDFNumber(d), objects_1.asPDFNumber(e), objects_1.asPDFNumber(f)]);\n};\nexports.rotateAndSkewTextRadiansAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return exports.setTextMatrix(cos(objects_1.asNumber(rotationAngle)), sin(objects_1.asNumber(rotationAngle)) + tan(objects_1.asNumber(xSkewAngle)), -sin(objects_1.asNumber(rotationAngle)) + tan(objects_1.asNumber(ySkewAngle)), cos(objects_1.asNumber(rotationAngle)), x, y);\n};\nexports.rotateAndSkewTextDegreesAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return exports.rotateAndSkewTextRadiansAndTranslate(rotations_1.degreesToRadians(objects_1.asNumber(rotationAngle)), rotations_1.degreesToRadians(objects_1.asNumber(xSkewAngle)), rotations_1.degreesToRadians(objects_1.asNumber(ySkewAngle)), x, y);\n};\n/* ==================== XObject Operator ==================== */\nexports.drawObject = function (name) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.DrawObject, [objects_1.asPDFName(name)]);\n};\n/* ==================== Color Operators ==================== */\nexports.setFillingGrayscaleColor = function (gray) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.NonStrokingColorGray, [objects_1.asPDFNumber(gray)]);\n};\nexports.setStrokingGrayscaleColor = function (gray) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokingColorGray, [objects_1.asPDFNumber(gray)]);\n};\nexports.setFillingRgbColor = function (red, green, blue) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.NonStrokingColorRgb, [objects_1.asPDFNumber(red), objects_1.asPDFNumber(green), objects_1.asPDFNumber(blue)]);\n};\nexports.setStrokingRgbColor = function (red, green, blue) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokingColorRgb, [objects_1.asPDFNumber(red), objects_1.asPDFNumber(green), objects_1.asPDFNumber(blue)]);\n};\nexports.setFillingCmykColor = function (cyan, magenta, yellow, key) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.NonStrokingColorCmyk, [objects_1.asPDFNumber(cyan), objects_1.asPDFNumber(magenta), objects_1.asPDFNumber(yellow), objects_1.asPDFNumber(key)]);\n};\nexports.setStrokingCmykColor = function (cyan, magenta, yellow, key) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.StrokingColorCmyk, [objects_1.asPDFNumber(cyan), objects_1.asPDFNumber(magenta), objects_1.asPDFNumber(yellow), objects_1.asPDFNumber(key)]);\n};\n/* ==================== Marked Content Operators ==================== */\nexports.beginMarkedContent = function (tag) {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.BeginMarkedContent, [objects_1.asPDFName(tag)]);\n};\nexports.endMarkedContent = function () {\n  return core_1.PDFOperator.of(core_1.PDFOperatorNames.EndMarkedContent);\n};","map":{"version":3,"names":["objects_1","require","rotations_1","core_1","exports","clip","PDFOperator","of","PDFOperatorNames","ClipNonZero","clipEvenOdd","ClipEvenOdd","cos","Math","sin","tan","concatTransformationMatrix","a","b","c","d","e","f","ConcatTransformationMatrix","asPDFNumber","translate","xPos","yPos","scale","rotateRadians","angle","asNumber","rotateDegrees","degreesToRadians","skewRadians","xSkewAngle","ySkewAngle","skewDegrees","setDashPattern","dashArray","dashPhase","SetLineDashPattern","map","join","restoreDashPattern","LineCapStyle","setLineCap","style","SetLineCapStyle","LineJoinStyle","setLineJoin","SetLineJoinStyle","setGraphicsState","state","SetGraphicsStateParams","asPDFName","pushGraphicsState","PushGraphicsState","popGraphicsState","PopGraphicsState","setLineWidth","width","SetLineWidth","appendBezierCurve","x1","y1","x2","y2","x3","y3","AppendBezierCurve","appendQuadraticCurve","CurveToReplicateInitialPoint","closePath","ClosePath","moveTo","MoveTo","lineTo","LineTo","rectangle","height","AppendRectangle","square","size","stroke","StrokePath","fill","FillNonZero","fillAndStroke","FillNonZeroAndStroke","endPath","EndPath","nextLine","NextLine","moveText","x","y","MoveText","showText","text","ShowText","beginText","BeginText","endText","EndText","setFontAndSize","name","SetFontAndSize","setCharacterSpacing","spacing","SetCharacterSpacing","setWordSpacing","SetWordSpacing","setCharacterSqueeze","squeeze","SetTextHorizontalScaling","setLineHeight","lineHeight","SetTextLineHeight","setTextRise","rise","SetTextRise","TextRenderingMode","setTextRenderingMode","mode","SetTextRenderingMode","setTextMatrix","SetTextMatrix","rotateAndSkewTextRadiansAndTranslate","rotationAngle","rotateAndSkewTextDegreesAndTranslate","drawObject","DrawObject","setFillingGrayscaleColor","gray","NonStrokingColorGray","setStrokingGrayscaleColor","StrokingColorGray","setFillingRgbColor","red","green","blue","NonStrokingColorRgb","setStrokingRgbColor","StrokingColorRgb","setFillingCmykColor","cyan","magenta","yellow","key","NonStrokingColorCmyk","setStrokingCmykColor","StrokingColorCmyk","beginMarkedContent","tag","BeginMarkedContent","endMarkedContent","EndMarkedContent"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/api/operators.ts"],"sourcesContent":["import { asNumber, asPDFName, asPDFNumber } from 'src/api/objects';\nimport { degreesToRadians } from 'src/api/rotations';\nimport {\n  PDFHexString,\n  PDFName,\n  PDFNumber,\n  PDFOperator,\n  PDFOperatorNames as Ops,\n} from 'src/core';\n\n/* ==================== Clipping Path Operators ==================== */\n\nexport const clip = () => PDFOperator.of(Ops.ClipNonZero);\nexport const clipEvenOdd = () => PDFOperator.of(Ops.ClipEvenOdd);\n\n/* ==================== Graphics State Operators ==================== */\n\nconst { cos, sin, tan } = Math;\n\nexport const concatTransformationMatrix = (\n  a: number | PDFNumber,\n  b: number | PDFNumber,\n  c: number | PDFNumber,\n  d: number | PDFNumber,\n  e: number | PDFNumber,\n  f: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.ConcatTransformationMatrix, [\n    asPDFNumber(a),\n    asPDFNumber(b),\n    asPDFNumber(c),\n    asPDFNumber(d),\n    asPDFNumber(e),\n    asPDFNumber(f),\n  ]);\n\nexport const translate = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n\nexport const scale = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n\nexport const rotateRadians = (angle: number | PDFNumber) =>\n  concatTransformationMatrix(\n    cos(asNumber(angle)),\n    sin(asNumber(angle)),\n    -sin(asNumber(angle)),\n    cos(asNumber(angle)),\n    0,\n    0,\n  );\n\nexport const rotateDegrees = (angle: number | PDFNumber) =>\n  rotateRadians(degreesToRadians(asNumber(angle)));\n\nexport const skewRadians = (\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n) =>\n  concatTransformationMatrix(\n    1,\n    tan(asNumber(xSkewAngle)),\n    tan(asNumber(ySkewAngle)),\n    1,\n    0,\n    0,\n  );\n\nexport const skewDegrees = (\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n) =>\n  skewRadians(\n    degreesToRadians(asNumber(xSkewAngle)),\n    degreesToRadians(asNumber(ySkewAngle)),\n  );\n\nexport const setDashPattern = (\n  dashArray: (number | PDFNumber)[],\n  dashPhase: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.SetLineDashPattern, [\n    `[${dashArray.map(asPDFNumber).join(' ')}]`,\n    asPDFNumber(dashPhase),\n  ]);\n\nexport const restoreDashPattern = () => setDashPattern([], 0);\n\nexport enum LineCapStyle {\n  Butt = 0,\n  Round = 1,\n  Projecting = 2,\n}\n\nexport const setLineCap = (style: LineCapStyle) =>\n  PDFOperator.of(Ops.SetLineCapStyle, [asPDFNumber(style)]);\n\nexport enum LineJoinStyle {\n  Miter = 0,\n  Round = 1,\n  Bevel = 2,\n}\n\nexport const setLineJoin = (style: LineJoinStyle) =>\n  PDFOperator.of(Ops.SetLineJoinStyle, [asPDFNumber(style)]);\n\nexport const setGraphicsState = (state: string | PDFName) =>\n  PDFOperator.of(Ops.SetGraphicsStateParams, [asPDFName(state)]);\n\nexport const pushGraphicsState = () => PDFOperator.of(Ops.PushGraphicsState);\n\nexport const popGraphicsState = () => PDFOperator.of(Ops.PopGraphicsState);\n\nexport const setLineWidth = (width: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetLineWidth, [asPDFNumber(width)]);\n\n/* ==================== Path Construction Operators ==================== */\n\nexport const appendBezierCurve = (\n  x1: number | PDFNumber,\n  y1: number | PDFNumber,\n  x2: number | PDFNumber,\n  y2: number | PDFNumber,\n  x3: number | PDFNumber,\n  y3: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.AppendBezierCurve, [\n    asPDFNumber(x1),\n    asPDFNumber(y1),\n    asPDFNumber(x2),\n    asPDFNumber(y2),\n    asPDFNumber(x3),\n    asPDFNumber(y3),\n  ]);\n\nexport const appendQuadraticCurve = (\n  x1: number | PDFNumber,\n  y1: number | PDFNumber,\n  x2: number | PDFNumber,\n  y2: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.CurveToReplicateInitialPoint, [\n    asPDFNumber(x1),\n    asPDFNumber(y1),\n    asPDFNumber(x2),\n    asPDFNumber(y2),\n  ]);\n\nexport const closePath = () => PDFOperator.of(Ops.ClosePath);\n\nexport const moveTo = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  PDFOperator.of(Ops.MoveTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n\nexport const lineTo = (xPos: number | PDFNumber, yPos: number | PDFNumber) =>\n  PDFOperator.of(Ops.LineTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\nexport const rectangle = (\n  xPos: number | PDFNumber,\n  yPos: number | PDFNumber,\n  width: number | PDFNumber,\n  height: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.AppendRectangle, [\n    asPDFNumber(xPos),\n    asPDFNumber(yPos),\n    asPDFNumber(width),\n    asPDFNumber(height),\n  ]);\n\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\nexport const square = (xPos: number, yPos: number, size: number) =>\n  rectangle(xPos, yPos, size, size);\n\n/* ==================== Path Painting Operators ==================== */\n\nexport const stroke = () => PDFOperator.of(Ops.StrokePath);\n\nexport const fill = () => PDFOperator.of(Ops.FillNonZero);\n\nexport const fillAndStroke = () => PDFOperator.of(Ops.FillNonZeroAndStroke);\n\nexport const endPath = () => PDFOperator.of(Ops.EndPath);\n\n/* ==================== Text Positioning Operators ==================== */\n\nexport const nextLine = () => PDFOperator.of(Ops.NextLine);\n\nexport const moveText = (x: number | PDFNumber, y: number | PDFNumber) =>\n  PDFOperator.of(Ops.MoveText, [asPDFNumber(x), asPDFNumber(y)]);\n\n/* ==================== Text Showing Operators ==================== */\n\nexport const showText = (text: PDFHexString) =>\n  PDFOperator.of(Ops.ShowText, [text]);\n\n/* ==================== Text State Operators ==================== */\n\nexport const beginText = () => PDFOperator.of(Ops.BeginText);\nexport const endText = () => PDFOperator.of(Ops.EndText);\n\nexport const setFontAndSize = (\n  name: string | PDFName,\n  size: number | PDFNumber,\n) => PDFOperator.of(Ops.SetFontAndSize, [asPDFName(name), asPDFNumber(size)]);\n\nexport const setCharacterSpacing = (spacing: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetCharacterSpacing, [asPDFNumber(spacing)]);\n\nexport const setWordSpacing = (spacing: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetWordSpacing, [asPDFNumber(spacing)]);\n\n/** @param squeeze horizontal character spacing */\nexport const setCharacterSqueeze = (squeeze: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetTextHorizontalScaling, [asPDFNumber(squeeze)]);\n\nexport const setLineHeight = (lineHeight: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetTextLineHeight, [asPDFNumber(lineHeight)]);\n\nexport const setTextRise = (rise: number | PDFNumber) =>\n  PDFOperator.of(Ops.SetTextRise, [asPDFNumber(rise)]);\n\nexport enum TextRenderingMode {\n  Fill = 0,\n  Outline = 1,\n  FillAndOutline = 2,\n  Invisible = 3,\n  FillAndClip = 4,\n  OutlineAndClip = 5,\n  FillAndOutlineAndClip = 6,\n  Clip = 7,\n}\n\nexport const setTextRenderingMode = (mode: TextRenderingMode) =>\n  PDFOperator.of(Ops.SetTextRenderingMode, [asPDFNumber(mode)]);\n\nexport const setTextMatrix = (\n  a: number | PDFNumber,\n  b: number | PDFNumber,\n  c: number | PDFNumber,\n  d: number | PDFNumber,\n  e: number | PDFNumber,\n  f: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.SetTextMatrix, [\n    asPDFNumber(a),\n    asPDFNumber(b),\n    asPDFNumber(c),\n    asPDFNumber(d),\n    asPDFNumber(e),\n    asPDFNumber(f),\n  ]);\n\nexport const rotateAndSkewTextRadiansAndTranslate = (\n  rotationAngle: number | PDFNumber,\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n  x: number | PDFNumber,\n  y: number | PDFNumber,\n) =>\n  setTextMatrix(\n    cos(asNumber(rotationAngle)),\n    sin(asNumber(rotationAngle)) + tan(asNumber(xSkewAngle)),\n    -sin(asNumber(rotationAngle)) + tan(asNumber(ySkewAngle)),\n    cos(asNumber(rotationAngle)),\n    x,\n    y,\n  );\n\nexport const rotateAndSkewTextDegreesAndTranslate = (\n  rotationAngle: number | PDFNumber,\n  xSkewAngle: number | PDFNumber,\n  ySkewAngle: number | PDFNumber,\n  x: number | PDFNumber,\n  y: number | PDFNumber,\n) =>\n  rotateAndSkewTextRadiansAndTranslate(\n    degreesToRadians(asNumber(rotationAngle)),\n    degreesToRadians(asNumber(xSkewAngle)),\n    degreesToRadians(asNumber(ySkewAngle)),\n    x,\n    y,\n  );\n\n/* ==================== XObject Operator ==================== */\n\nexport const drawObject = (name: string | PDFName) =>\n  PDFOperator.of(Ops.DrawObject, [asPDFName(name)]);\n\n/* ==================== Color Operators ==================== */\n\nexport const setFillingGrayscaleColor = (gray: number | PDFNumber) =>\n  PDFOperator.of(Ops.NonStrokingColorGray, [asPDFNumber(gray)]);\n\nexport const setStrokingGrayscaleColor = (gray: number | PDFNumber) =>\n  PDFOperator.of(Ops.StrokingColorGray, [asPDFNumber(gray)]);\n\nexport const setFillingRgbColor = (\n  red: number | PDFNumber,\n  green: number | PDFNumber,\n  blue: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.NonStrokingColorRgb, [\n    asPDFNumber(red),\n    asPDFNumber(green),\n    asPDFNumber(blue),\n  ]);\n\nexport const setStrokingRgbColor = (\n  red: number | PDFNumber,\n  green: number | PDFNumber,\n  blue: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.StrokingColorRgb, [\n    asPDFNumber(red),\n    asPDFNumber(green),\n    asPDFNumber(blue),\n  ]);\n\nexport const setFillingCmykColor = (\n  cyan: number | PDFNumber,\n  magenta: number | PDFNumber,\n  yellow: number | PDFNumber,\n  key: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.NonStrokingColorCmyk, [\n    asPDFNumber(cyan),\n    asPDFNumber(magenta),\n    asPDFNumber(yellow),\n    asPDFNumber(key),\n  ]);\n\nexport const setStrokingCmykColor = (\n  cyan: number | PDFNumber,\n  magenta: number | PDFNumber,\n  yellow: number | PDFNumber,\n  key: number | PDFNumber,\n) =>\n  PDFOperator.of(Ops.StrokingColorCmyk, [\n    asPDFNumber(cyan),\n    asPDFNumber(magenta),\n    asPDFNumber(yellow),\n    asPDFNumber(key),\n  ]);\n\n/* ==================== Marked Content Operators ==================== */\n\nexport const beginMarkedContent = (tag: string | PDFName) =>\n  PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\n\nexport const endMarkedContent = () => PDFOperator.of(Ops.EndMarkedContent);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}