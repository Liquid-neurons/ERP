{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/Applicant/ListStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useUser } from '../contexts/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListStatus() {\n  _s();\n  const {\n    userEmail\n  } = useUser();\n  const [applicationStatus, setApplicationStatus] = useState({});\n\n  // Fetch application IDs and status codes from backend when component mounts\n  useEffect(() => {\n    fetchApplicationStatus();\n  }, []);\n\n  // Function to fetch application IDs and status codes from backend\n  const fetchApplicationStatus = async () => {\n    try {\n      const UserEmail = userEmail; // Get user's email from the context\n      const response = await fetch('http://49.206.252.212:5000/status-application-ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          UserEmail\n        }) // Send user's email in the request body\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(data);\n      setApplicationStatus(data);\n    } catch (error) {\n      console.error('Error fetching application status:', error);\n      // Optionally, you can handle errors here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold mb-4 flex justify-center\",\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Application ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-9 py-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(applicationStatus).length > 0 ? Object.entries(applicationStatus).map(([applicationId, status]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: applicationId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/view-application/${applicationId}`,\n              className: \"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-6 rounded\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, applicationId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            colSpan: \"3\",\n            children: \"No new applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ListStatus, \"aoTzfq1dlrH6u0xy6sR0WaT9UKI=\", false, function () {\n  return [useUser];\n});\n_c = ListStatus;\nexport default ListStatus;\nvar _c;\n$RefreshReg$(_c, \"ListStatus\");","map":{"version":3,"names":["React","useState","useEffect","Link","useUser","jsxDEV","_jsxDEV","ListStatus","_s","userEmail","applicationStatus","setApplicationStatus","fetchApplicationStatus","UserEmail","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","entries","map","applicationId","status","to","colSpan","_c","$RefreshReg$"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/src/components/Applicant/ListStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useUser } from '../contexts/context';\n\nfunction ListStatus() {\n  const { userEmail } = useUser();\n  const [applicationStatus, setApplicationStatus] = useState({});\n\n  // Fetch application IDs and status codes from backend when component mounts\n  useEffect(() => {\n    fetchApplicationStatus();\n  }, []);\n\n  // Function to fetch application IDs and status codes from backend\n  const fetchApplicationStatus = async () => {\n    try {\n      const UserEmail = userEmail; // Get user's email from the context\n      const response = await fetch('http://49.206.252.212:5000/status-application-ids', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ UserEmail }) // Send user's email in the request body\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log(data);\n      setApplicationStatus(data);\n    } catch (error) {\n      console.error('Error fetching application status:', error);\n      // Optionally, you can handle errors here\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto\">\n      <h1 className=\"text-3xl font-semibold mb-4 flex justify-center\">Applications</h1>\n      <table className=\"table-auto mx-auto\">\n        <thead>\n          <tr>\n            <th className=\"border px-9 py-2\">Application ID</th>\n            <th className=\"border px-9 py-2\">Review</th>\n            <th className=\"border px-9 py-2\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(applicationStatus).length > 0 ? (\n            Object.entries(applicationStatus).map(([applicationId, status]) => (\n              <tr key={applicationId}>\n                <td className=\"border px-4 py-2\">{applicationId}</td>\n                <td className=\"border px-4 py-2\">\n                  <Link to={`/view-application/${applicationId}`} className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-6 rounded\">\n                    View\n                  </Link>\n                </td>\n                <td className=\"border px-4 py-2\">{status}</td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td className=\"border px-4 py-2\" colSpan=\"3\">No new applications</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListStatus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}