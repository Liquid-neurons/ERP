{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { arrayAsString } from \"../utils\";\nvar MethodNotImplementedError = /** @class */function (_super) {\n  __extends(MethodNotImplementedError, _super);\n  function MethodNotImplementedError(className, methodName) {\n    var _this = this;\n    var msg = \"Method \" + className + \".\" + methodName + \"() not implemented\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MethodNotImplementedError;\n}(Error);\nexport { MethodNotImplementedError };\nvar PrivateConstructorError = /** @class */function (_super) {\n  __extends(PrivateConstructorError, _super);\n  function PrivateConstructorError(className) {\n    var _this = this;\n    var msg = \"Cannot construct \" + className + \" - it has a private constructor\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PrivateConstructorError;\n}(Error);\nexport { PrivateConstructorError };\nvar UnexpectedObjectTypeError = /** @class */function (_super) {\n  __extends(UnexpectedObjectTypeError, _super);\n  function UnexpectedObjectTypeError(expected, actual) {\n    var _this = this;\n    var name = function (t) {\n      var _a, _b;\n      return (_a = t === null || t === void 0 ? void 0 : t.name) !== null && _a !== void 0 ? _a : (_b = t === null || t === void 0 ? void 0 : t.constructor) === null || _b === void 0 ? void 0 : _b.name;\n    };\n    var expectedTypes = Array.isArray(expected) ? expected.map(name) : [name(expected)];\n    var msg = \"Expected instance of \" + expectedTypes.join(' or ') + \", \" + (\"but got instance of \" + (actual ? name(actual) : actual));\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnexpectedObjectTypeError;\n}(Error);\nexport { UnexpectedObjectTypeError };\nvar UnsupportedEncodingError = /** @class */function (_super) {\n  __extends(UnsupportedEncodingError, _super);\n  function UnsupportedEncodingError(encoding) {\n    var _this = this;\n    var msg = encoding + \" stream encoding not supported\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnsupportedEncodingError;\n}(Error);\nexport { UnsupportedEncodingError };\nvar ReparseError = /** @class */function (_super) {\n  __extends(ReparseError, _super);\n  function ReparseError(className, methodName) {\n    var _this = this;\n    var msg = \"Cannot call \" + className + \".\" + methodName + \"() more than once\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return ReparseError;\n}(Error);\nexport { ReparseError };\nvar MissingCatalogError = /** @class */function (_super) {\n  __extends(MissingCatalogError, _super);\n  function MissingCatalogError(ref) {\n    var _this = this;\n    var msg = \"Missing catalog (ref=\" + ref + \")\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingCatalogError;\n}(Error);\nexport { MissingCatalogError };\nvar MissingPageContentsEmbeddingError = /** @class */function (_super) {\n  __extends(MissingPageContentsEmbeddingError, _super);\n  function MissingPageContentsEmbeddingError() {\n    var _this = this;\n    var msg = \"Can't embed page with missing Contents\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingPageContentsEmbeddingError;\n}(Error);\nexport { MissingPageContentsEmbeddingError };\nvar UnrecognizedStreamTypeError = /** @class */function (_super) {\n  __extends(UnrecognizedStreamTypeError, _super);\n  function UnrecognizedStreamTypeError(stream) {\n    var _a, _b, _c;\n    var _this = this;\n    var streamType = (_c = (_b = (_a = stream === null || stream === void 0 ? void 0 : stream.contructor) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : stream === null || stream === void 0 ? void 0 : stream.name) !== null && _c !== void 0 ? _c : stream;\n    var msg = \"Unrecognized stream type: \" + streamType;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return UnrecognizedStreamTypeError;\n}(Error);\nexport { UnrecognizedStreamTypeError };\nvar PageEmbeddingMismatchedContextError = /** @class */function (_super) {\n  __extends(PageEmbeddingMismatchedContextError, _super);\n  function PageEmbeddingMismatchedContextError() {\n    var _this = this;\n    var msg = \"Found mismatched contexts while embedding pages. All pages in the array passed to `PDFDocument.embedPages()` must be from the same document.\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PageEmbeddingMismatchedContextError;\n}(Error);\nexport { PageEmbeddingMismatchedContextError };\nvar PDFArrayIsNotRectangleError = /** @class */function (_super) {\n  __extends(PDFArrayIsNotRectangleError, _super);\n  function PDFArrayIsNotRectangleError(size) {\n    var _this = this;\n    var msg = \"Attempted to convert PDFArray with \" + size + \" elements to rectangle, but must have exactly 4 elements.\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PDFArrayIsNotRectangleError;\n}(Error);\nexport { PDFArrayIsNotRectangleError };\nvar InvalidPDFDateStringError = /** @class */function (_super) {\n  __extends(InvalidPDFDateStringError, _super);\n  function InvalidPDFDateStringError(value) {\n    var _this = this;\n    var msg = \"Attempted to convert \\\"\" + value + \"\\\" to a date, but it does not match the PDF date string format.\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidPDFDateStringError;\n}(Error);\nexport { InvalidPDFDateStringError };\nvar InvalidTargetIndexError = /** @class */function (_super) {\n  __extends(InvalidTargetIndexError, _super);\n  function InvalidTargetIndexError(targetIndex, Count) {\n    var _this = this;\n    var msg = \"Invalid targetIndex specified: targetIndex=\" + targetIndex + \" must be less than Count=\" + Count;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidTargetIndexError;\n}(Error);\nexport { InvalidTargetIndexError };\nvar CorruptPageTreeError = /** @class */function (_super) {\n  __extends(CorruptPageTreeError, _super);\n  function CorruptPageTreeError(targetIndex, operation) {\n    var _this = this;\n    var msg = \"Failed to \" + operation + \" at targetIndex=\" + targetIndex + \" due to corrupt page tree: It is likely that one or more 'Count' entries are invalid\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return CorruptPageTreeError;\n}(Error);\nexport { CorruptPageTreeError };\nvar IndexOutOfBoundsError = /** @class */function (_super) {\n  __extends(IndexOutOfBoundsError, _super);\n  function IndexOutOfBoundsError(index, min, max) {\n    var _this = this;\n    var msg = \"index should be at least \" + min + \" and at most \" + max + \", but was actually \" + index;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return IndexOutOfBoundsError;\n}(Error);\nexport { IndexOutOfBoundsError };\nvar InvalidAcroFieldValueError = /** @class */function (_super) {\n  __extends(InvalidAcroFieldValueError, _super);\n  function InvalidAcroFieldValueError() {\n    var _this = this;\n    var msg = \"Attempted to set invalid field value\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return InvalidAcroFieldValueError;\n}(Error);\nexport { InvalidAcroFieldValueError };\nvar MultiSelectValueError = /** @class */function (_super) {\n  __extends(MultiSelectValueError, _super);\n  function MultiSelectValueError() {\n    var _this = this;\n    var msg = \"Attempted to select multiple values for single-select field\";\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MultiSelectValueError;\n}(Error);\nexport { MultiSelectValueError };\nvar MissingDAEntryError = /** @class */function (_super) {\n  __extends(MissingDAEntryError, _super);\n  function MissingDAEntryError(fieldName) {\n    var _this = this;\n    var msg = \"No /DA (default appearance) entry found for field: \" + fieldName;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingDAEntryError;\n}(Error);\nexport { MissingDAEntryError };\nvar MissingTfOperatorError = /** @class */function (_super) {\n  __extends(MissingTfOperatorError, _super);\n  function MissingTfOperatorError(fieldName) {\n    var _this = this;\n    var msg = \"No Tf operator found for DA of field: \" + fieldName;\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return MissingTfOperatorError;\n}(Error);\nexport { MissingTfOperatorError };\nvar NumberParsingError = /** @class */function (_super) {\n  __extends(NumberParsingError, _super);\n  function NumberParsingError(pos, value) {\n    var _this = this;\n    var msg = \"Failed to parse number \" + (\"(line:\" + pos.line + \" col:\" + pos.column + \" offset=\" + pos.offset + \"): \\\"\" + value + \"\\\"\");\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return NumberParsingError;\n}(Error);\nexport { NumberParsingError };\nvar PDFParsingError = /** @class */function (_super) {\n  __extends(PDFParsingError, _super);\n  function PDFParsingError(pos, details) {\n    var _this = this;\n    var msg = \"Failed to parse PDF document \" + (\"(line:\" + pos.line + \" col:\" + pos.column + \" offset=\" + pos.offset + \"): \" + details);\n    _this = _super.call(this, msg) || this;\n    return _this;\n  }\n  return PDFParsingError;\n}(Error);\nexport { PDFParsingError };\nvar NextByteAssertionError = /** @class */function (_super) {\n  __extends(NextByteAssertionError, _super);\n  function NextByteAssertionError(pos, expectedByte, actualByte) {\n    var _this = this;\n    var msg = \"Expected next byte to be \" + expectedByte + \" but it was actually \" + actualByte;\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return NextByteAssertionError;\n}(PDFParsingError);\nexport { NextByteAssertionError };\nvar PDFObjectParsingError = /** @class */function (_super) {\n  __extends(PDFObjectParsingError, _super);\n  function PDFObjectParsingError(pos, byte) {\n    var _this = this;\n    var msg = \"Failed to parse PDF object starting with the following byte: \" + byte;\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return PDFObjectParsingError;\n}(PDFParsingError);\nexport { PDFObjectParsingError };\nvar PDFInvalidObjectParsingError = /** @class */function (_super) {\n  __extends(PDFInvalidObjectParsingError, _super);\n  function PDFInvalidObjectParsingError(pos) {\n    var _this = this;\n    var msg = \"Failed to parse invalid PDF object\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return PDFInvalidObjectParsingError;\n}(PDFParsingError);\nexport { PDFInvalidObjectParsingError };\nvar PDFStreamParsingError = /** @class */function (_super) {\n  __extends(PDFStreamParsingError, _super);\n  function PDFStreamParsingError(pos) {\n    var _this = this;\n    var msg = \"Failed to parse PDF stream\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return PDFStreamParsingError;\n}(PDFParsingError);\nexport { PDFStreamParsingError };\nvar UnbalancedParenthesisError = /** @class */function (_super) {\n  __extends(UnbalancedParenthesisError, _super);\n  function UnbalancedParenthesisError(pos) {\n    var _this = this;\n    var msg = \"Failed to parse PDF literal string due to unbalanced parenthesis\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return UnbalancedParenthesisError;\n}(PDFParsingError);\nexport { UnbalancedParenthesisError };\nvar StalledParserError = /** @class */function (_super) {\n  __extends(StalledParserError, _super);\n  function StalledParserError(pos) {\n    var _this = this;\n    var msg = \"Parser stalled\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return StalledParserError;\n}(PDFParsingError);\nexport { StalledParserError };\nvar MissingPDFHeaderError = /** @class */function (_super) {\n  __extends(MissingPDFHeaderError, _super);\n  function MissingPDFHeaderError(pos) {\n    var _this = this;\n    var msg = \"No PDF header found\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return MissingPDFHeaderError;\n}(PDFParsingError);\nexport { MissingPDFHeaderError };\nvar MissingKeywordError = /** @class */function (_super) {\n  __extends(MissingKeywordError, _super);\n  function MissingKeywordError(pos, keyword) {\n    var _this = this;\n    var msg = \"Did not find expected keyword '\" + arrayAsString(keyword) + \"'\";\n    _this = _super.call(this, pos, msg) || this;\n    return _this;\n  }\n  return MissingKeywordError;\n}(PDFParsingError);\nexport { MissingKeywordError };","map":{"version":3,"names":["arrayAsString","MethodNotImplementedError","_super","__extends","className","methodName","_this","msg","call","Error","PrivateConstructorError","UnexpectedObjectTypeError","expected","actual","name","t","_a","_b","constructor","expectedTypes","Array","isArray","map","join","UnsupportedEncodingError","encoding","ReparseError","MissingCatalogError","ref","MissingPageContentsEmbeddingError","UnrecognizedStreamTypeError","stream","streamType","_c","contructor","PageEmbeddingMismatchedContextError","PDFArrayIsNotRectangleError","size","InvalidPDFDateStringError","value","InvalidTargetIndexError","targetIndex","Count","CorruptPageTreeError","operation","IndexOutOfBoundsError","index","min","max","InvalidAcroFieldValueError","MultiSelectValueError","MissingDAEntryError","fieldName","MissingTfOperatorError","NumberParsingError","pos","line","column","offset","PDFParsingError","details","NextByteAssertionError","expectedByte","actualByte","PDFObjectParsingError","byte","PDFInvalidObjectParsingError","PDFStreamParsingError","UnbalancedParenthesisError","StalledParserError","MissingPDFHeaderError","MissingKeywordError","keyword"],"sources":["/Users/casarulez/Projects/Liquid-neurons/database_forms/data_entry_forms/node_modules/pdf-lib/src/core/errors.ts"],"sourcesContent":["// tslint:disable: max-classes-per-file\nimport PDFObject from 'src/core/objects/PDFObject';\nimport { arrayAsString } from 'src/utils';\n\nexport class MethodNotImplementedError extends Error {\n  constructor(className: string, methodName: string) {\n    const msg = `Method ${className}.${methodName}() not implemented`;\n    super(msg);\n  }\n}\n\nexport class PrivateConstructorError extends Error {\n  constructor(className: string) {\n    const msg = `Cannot construct ${className} - it has a private constructor`;\n    super(msg);\n  }\n}\n\nexport class UnexpectedObjectTypeError extends Error {\n  constructor(expected: any | any[], actual: any) {\n    const name = (t: any) => t?.name ?? t?.constructor?.name;\n\n    const expectedTypes = Array.isArray(expected)\n      ? expected.map(name)\n      : [name(expected)];\n\n    const msg =\n      `Expected instance of ${expectedTypes.join(' or ')}, ` +\n      `but got instance of ${actual ? name(actual) : actual}`;\n\n    super(msg);\n  }\n}\n\nexport class UnsupportedEncodingError extends Error {\n  constructor(encoding: string) {\n    const msg = `${encoding} stream encoding not supported`;\n    super(msg);\n  }\n}\n\nexport class ReparseError extends Error {\n  constructor(className: string, methodName: string) {\n    const msg = `Cannot call ${className}.${methodName}() more than once`;\n    super(msg);\n  }\n}\n\nexport class MissingCatalogError extends Error {\n  constructor(ref?: PDFObject) {\n    const msg = `Missing catalog (ref=${ref})`;\n    super(msg);\n  }\n}\n\nexport class MissingPageContentsEmbeddingError extends Error {\n  constructor() {\n    const msg = `Can't embed page with missing Contents`;\n    super(msg);\n  }\n}\n\nexport class UnrecognizedStreamTypeError extends Error {\n  constructor(stream: any) {\n    const streamType = stream?.contructor?.name ?? stream?.name ?? stream;\n    const msg = `Unrecognized stream type: ${streamType}`;\n    super(msg);\n  }\n}\n\nexport class PageEmbeddingMismatchedContextError extends Error {\n  constructor() {\n    const msg = `Found mismatched contexts while embedding pages. All pages in the array passed to \\`PDFDocument.embedPages()\\` must be from the same document.`;\n    super(msg);\n  }\n}\n\nexport class PDFArrayIsNotRectangleError extends Error {\n  constructor(size: number) {\n    const msg = `Attempted to convert PDFArray with ${size} elements to rectangle, but must have exactly 4 elements.`;\n    super(msg);\n  }\n}\n\nexport class InvalidPDFDateStringError extends Error {\n  constructor(value: string) {\n    const msg = `Attempted to convert \"${value}\" to a date, but it does not match the PDF date string format.`;\n    super(msg);\n  }\n}\n\nexport class InvalidTargetIndexError extends Error {\n  constructor(targetIndex: number, Count: number) {\n    const msg = `Invalid targetIndex specified: targetIndex=${targetIndex} must be less than Count=${Count}`;\n    super(msg);\n  }\n}\n\nexport class CorruptPageTreeError extends Error {\n  constructor(targetIndex: number, operation: string) {\n    const msg = `Failed to ${operation} at targetIndex=${targetIndex} due to corrupt page tree: It is likely that one or more 'Count' entries are invalid`;\n    super(msg);\n  }\n}\n\nexport class IndexOutOfBoundsError extends Error {\n  constructor(index: number, min: number, max: number) {\n    const msg = `index should be at least ${min} and at most ${max}, but was actually ${index}`;\n    super(msg);\n  }\n}\n\nexport class InvalidAcroFieldValueError extends Error {\n  constructor() {\n    const msg = `Attempted to set invalid field value`;\n    super(msg);\n  }\n}\n\nexport class MultiSelectValueError extends Error {\n  constructor() {\n    const msg = `Attempted to select multiple values for single-select field`;\n    super(msg);\n  }\n}\n\nexport class MissingDAEntryError extends Error {\n  constructor(fieldName: string) {\n    const msg = `No /DA (default appearance) entry found for field: ${fieldName}`;\n    super(msg);\n  }\n}\n\nexport class MissingTfOperatorError extends Error {\n  constructor(fieldName: string) {\n    const msg = `No Tf operator found for DA of field: ${fieldName}`;\n    super(msg);\n  }\n}\n\n/***** Parser Errors ******/\n\nexport interface Position {\n  line: number;\n  column: number;\n  offset: number;\n}\n\nexport class NumberParsingError extends Error {\n  constructor(pos: Position, value: string) {\n    const msg =\n      `Failed to parse number ` +\n      `(line:${pos.line} col:${pos.column} offset=${pos.offset}): \"${value}\"`;\n    super(msg);\n  }\n}\n\nexport class PDFParsingError extends Error {\n  constructor(pos: Position, details: string) {\n    const msg =\n      `Failed to parse PDF document ` +\n      `(line:${pos.line} col:${pos.column} offset=${pos.offset}): ${details}`;\n    super(msg);\n  }\n}\n\nexport class NextByteAssertionError extends PDFParsingError {\n  constructor(pos: Position, expectedByte: number, actualByte: number) {\n    const msg = `Expected next byte to be ${expectedByte} but it was actually ${actualByte}`;\n    super(pos, msg);\n  }\n}\n\nexport class PDFObjectParsingError extends PDFParsingError {\n  constructor(pos: Position, byte: number) {\n    const msg = `Failed to parse PDF object starting with the following byte: ${byte}`;\n    super(pos, msg);\n  }\n}\n\nexport class PDFInvalidObjectParsingError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Failed to parse invalid PDF object`;\n    super(pos, msg);\n  }\n}\n\nexport class PDFStreamParsingError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Failed to parse PDF stream`;\n    super(pos, msg);\n  }\n}\n\nexport class UnbalancedParenthesisError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Failed to parse PDF literal string due to unbalanced parenthesis`;\n    super(pos, msg);\n  }\n}\n\nexport class StalledParserError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `Parser stalled`;\n    super(pos, msg);\n  }\n}\n\nexport class MissingPDFHeaderError extends PDFParsingError {\n  constructor(pos: Position) {\n    const msg = `No PDF header found`;\n    super(pos, msg);\n  }\n}\n\nexport class MissingKeywordError extends PDFParsingError {\n  constructor(pos: Position, keyword: number[]) {\n    const msg = `Did not find expected keyword '${arrayAsString(keyword)}'`;\n    super(pos, msg);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}